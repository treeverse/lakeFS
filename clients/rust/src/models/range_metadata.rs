/*
 * lakeFS API
 *
 * lakeFS HTTP API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: services@treeverse.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RangeMetadata {
    /// ID of the range.
    #[serde(rename = "id")]
    pub id: String,
    /// First key in the range.
    #[serde(rename = "min_key")]
    pub min_key: String,
    /// Last key in the range.
    #[serde(rename = "max_key")]
    pub max_key: String,
    /// Number of records in the range.
    #[serde(rename = "count")]
    pub count: i32,
    /// Estimated size of the range in bytes
    #[serde(rename = "estimated_size")]
    pub estimated_size: i32,
}

impl RangeMetadata {
    pub fn new(id: String, min_key: String, max_key: String, count: i32, estimated_size: i32) -> RangeMetadata {
        RangeMetadata {
            id,
            min_key,
            max_key,
            count,
            estimated_size,
        }
    }
}

