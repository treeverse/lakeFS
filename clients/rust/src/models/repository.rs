/*
 * lakeFS API
 *
 * lakeFS HTTP API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: services@treeverse.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Repository {
    #[serde(rename = "id")]
    pub id: String,
    /// Unix Epoch in seconds
    #[serde(rename = "creation_date")]
    pub creation_date: i64,
    #[serde(rename = "default_branch")]
    pub default_branch: String,
    /// Filesystem URI to store the underlying data in (e.g. \"s3://my-bucket/some/path/\")
    #[serde(rename = "storage_namespace")]
    pub storage_namespace: String,
    /// Whether the repository is a read-only repository- not relevant for bare repositories
    #[serde(rename = "read_only", skip_serializing_if = "Option::is_none")]
    pub read_only: Option<bool>,
}

impl Repository {
    pub fn new(id: String, creation_date: i64, default_branch: String, storage_namespace: String) -> Repository {
        Repository {
            id,
            creation_date,
            default_branch,
            storage_namespace,
            read_only: None,
        }
    }
}

