/*
 * lakeFS API
 *
 * lakeFS HTTP API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: services@treeverse.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ImportStatus {
    #[serde(rename = "completed")]
    pub completed: bool,
    #[serde(rename = "update_time")]
    pub update_time: String,
    /// Number of objects processed so far
    #[serde(rename = "ingested_objects", skip_serializing_if = "Option::is_none")]
    pub ingested_objects: Option<i64>,
    #[serde(rename = "metarange_id", skip_serializing_if = "Option::is_none")]
    pub metarange_id: Option<String>,
    #[serde(rename = "commit", skip_serializing_if = "Option::is_none")]
    pub commit: Option<Box<models::Commit>>,
    #[serde(rename = "error", skip_serializing_if = "Option::is_none")]
    pub error: Option<Box<models::Error>>,
}

impl ImportStatus {
    pub fn new(completed: bool, update_time: String) -> ImportStatus {
        ImportStatus {
            completed,
            update_time,
            ingested_objects: None,
            metarange_id: None,
            commit: None,
            error: None,
        }
    }
}

