/*
 * lakeFS API
 *
 * lakeFS HTTP API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: services@treeverse.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct User {
    /// A unique identifier for the user. Cannot be edited.
    #[serde(rename = "id")]
    pub id: String,
    /// Unix Epoch in seconds
    #[serde(rename = "creation_date")]
    pub creation_date: i64,
    /// A shorter name for the user than the id. Unlike id it does not identify the user (it might not be unique). Used in some places in the UI. 
    #[serde(rename = "friendly_name", skip_serializing_if = "Option::is_none")]
    pub friendly_name: Option<String>,
    /// The email address of the user. If API authentication is enabled, this field is mandatory and will be invited to login. If API authentication is disabled, this field will be ignored. All current APIAuthenticators require the email to be  lowercase and unique, although custom authenticators may not enforce this. 
    #[serde(rename = "email", skip_serializing_if = "Option::is_none")]
    pub email: Option<String>,
}

impl User {
    pub fn new(id: String, creation_date: i64) -> User {
        User {
            id,
            creation_date,
            friendly_name: None,
            email: None,
        }
    }
}

