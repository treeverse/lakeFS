/*
 * lakeFS API
 *
 * lakeFS HTTP API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: services@treeverse.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IcebergPushRequest {
    #[serde(rename = "source")]
    pub source: Box<models::LocalTable>,
    #[serde(rename = "destination")]
    pub destination: Box<models::RemoteTable>,
    /// Override exiting table in remote if exists
    #[serde(rename = "force_update", skip_serializing_if = "Option::is_none")]
    pub force_update: Option<bool>,
    /// Creates namespace in remote catalog if not exist
    #[serde(rename = "create_namespace", skip_serializing_if = "Option::is_none")]
    pub create_namespace: Option<bool>,
}

impl IcebergPushRequest {
    pub fn new(source: models::LocalTable, destination: models::RemoteTable) -> IcebergPushRequest {
        IcebergPushRequest {
            source: Box::new(source),
            destination: Box::new(destination),
            force_update: None,
            create_namespace: None,
        }
    }
}

