/*
 * lakeFS API
 *
 * lakeFS HTTP API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: services@treeverse.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct StorageConfig {
    #[serde(rename = "blockstore_type")]
    pub blockstore_type: String,
    #[serde(rename = "blockstore_namespace_example")]
    pub blockstore_namespace_example: String,
    #[serde(rename = "blockstore_namespace_ValidityRegex")]
    pub blockstore_namespace_validity_regex: String,
    #[serde(rename = "default_namespace_prefix", skip_serializing_if = "Option::is_none")]
    pub default_namespace_prefix: Option<String>,
    #[serde(rename = "pre_sign_support")]
    pub pre_sign_support: bool,
    #[serde(rename = "pre_sign_support_ui")]
    pub pre_sign_support_ui: bool,
    #[serde(rename = "import_support")]
    pub import_support: bool,
    #[serde(rename = "import_validity_regex")]
    pub import_validity_regex: String,
    #[serde(rename = "pre_sign_multipart_upload", skip_serializing_if = "Option::is_none")]
    pub pre_sign_multipart_upload: Option<bool>,
    #[serde(rename = "blockstore_id", skip_serializing_if = "Option::is_none")]
    pub blockstore_id: Option<String>,
    #[serde(rename = "blockstore_description", skip_serializing_if = "Option::is_none")]
    pub blockstore_description: Option<String>,
    /// blockstore specific properties
    #[serde(rename = "blockstore_extras", skip_serializing_if = "Option::is_none")]
    pub blockstore_extras: Option<std::collections::HashMap<String, String>>,
}

impl StorageConfig {
    pub fn new(blockstore_type: String, blockstore_namespace_example: String, blockstore_namespace_validity_regex: String, pre_sign_support: bool, pre_sign_support_ui: bool, import_support: bool, import_validity_regex: String) -> StorageConfig {
        StorageConfig {
            blockstore_type,
            blockstore_namespace_example,
            blockstore_namespace_validity_regex,
            default_namespace_prefix: None,
            pre_sign_support,
            pre_sign_support_ui,
            import_support,
            import_validity_regex,
            pre_sign_multipart_upload: None,
            blockstore_id: None,
            blockstore_description: None,
            blockstore_extras: None,
        }
    }
}

