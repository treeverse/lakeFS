/*
 * lakeFS API
 *
 * lakeFS HTTP API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: services@treeverse.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct StatementV2 {
    #[serde(rename = "effect")]
    pub effect: Effect,
    #[serde(rename = "resource")]
    pub resource: Vec<String>,
    #[serde(rename = "action")]
    pub action: Vec<String>,
}

impl StatementV2 {
    pub fn new(effect: Effect, resource: Vec<String>, action: Vec<String>) -> StatementV2 {
        StatementV2 {
            effect,
            resource,
            action,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Effect {
    #[serde(rename = "allow")]
    Allow,
    #[serde(rename = "deny")]
    Deny,
}

impl Default for Effect {
    fn default() -> Effect {
        Self::Allow
    }
}

