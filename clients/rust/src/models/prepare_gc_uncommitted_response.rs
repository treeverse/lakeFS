/*
 * lakeFS API
 *
 * lakeFS HTTP API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: services@treeverse.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PrepareGcUncommittedResponse {
    #[serde(rename = "run_id")]
    pub run_id: String,
    /// location of uncommitted information data
    #[serde(rename = "gc_uncommitted_location")]
    pub gc_uncommitted_location: String,
    #[serde(rename = "continuation_token", skip_serializing_if = "Option::is_none")]
    pub continuation_token: Option<String>,
}

impl PrepareGcUncommittedResponse {
    pub fn new(run_id: String, gc_uncommitted_location: String) -> PrepareGcUncommittedResponse {
        PrepareGcUncommittedResponse {
            run_id,
            gc_uncommitted_location,
            continuation_token: None,
        }
    }
}

