/*
 * lakeFS API
 *
 * lakeFS HTTP API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: services@treeverse.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ObjectMetadata {
    #[serde(rename = "physical_address")]
    pub physical_address: String,
    #[serde(rename = "checksum")]
    pub checksum: String,
    /// Unix Epoch in seconds
    #[serde(rename = "mtime")]
    pub mtime: i64,
    /// Object media type
    #[serde(rename = "content_type")]
    pub content_type: String,
    #[serde(rename = "user_metadata", skip_serializing_if = "Option::is_none")]
    pub user_metadata: Option<std::collections::HashMap<String, String>>,
}

impl ObjectMetadata {
    pub fn new(physical_address: String, checksum: String, mtime: i64, content_type: String) -> ObjectMetadata {
        ObjectMetadata {
            physical_address,
            checksum,
            mtime,
            content_type,
            user_metadata: None,
        }
    }
}

