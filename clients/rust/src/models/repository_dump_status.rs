/*
 * lakeFS API
 *
 * lakeFS HTTP API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: services@treeverse.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RepositoryDumpStatus {
    /// ID of the task
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "done")]
    pub done: bool,
    #[serde(rename = "update_time")]
    pub update_time: String,
    #[serde(rename = "error", skip_serializing_if = "Option::is_none")]
    pub error: Option<String>,
    #[serde(rename = "refs", skip_serializing_if = "Option::is_none")]
    pub refs: Option<Box<models::RefsDump>>,
}

impl RepositoryDumpStatus {
    pub fn new(id: String, done: bool, update_time: String) -> RepositoryDumpStatus {
        RepositoryDumpStatus {
            id,
            done,
            update_time,
            error: None,
            refs: None,
        }
    }
}

