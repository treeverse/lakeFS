/*
 * lakeFS API
 * lakeFS HTTP API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.lakefs.clients.api;

import io.lakefs.clients.api.ApiException;
import io.lakefs.clients.api.model.Error;
import io.lakefs.clients.api.model.PullRequest;
import io.lakefs.clients.api.model.PullRequestBasic;
import io.lakefs.clients.api.model.PullRequestCreation;
import io.lakefs.clients.api.model.PullRequestsList;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PullsApi
 */
@Ignore
public class PullsApiTest {

    private final PullsApi api = new PullsApi();

    
    /**
     * create pull request
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createPullRequestTest() throws ApiException {
        String repository = null;
        PullRequestCreation pullRequestCreation = null;
                String response = api.createPullRequest(repository, pullRequestCreation);
        // TODO: test validations
    }
    
    /**
     * delete pull request
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deletePullRequestTest() throws ApiException {
        String repository = null;
        String pullRequest = null;
                api.deletePullRequest(repository, pullRequest);
        // TODO: test validations
    }
    
    /**
     * get pull request
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPullRequestTest() throws ApiException {
        String repository = null;
        String pullRequest = null;
                PullRequest response = api.getPullRequest(repository, pullRequest);
        // TODO: test validations
    }
    
    /**
     * list pull requests
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listPullRequestsTest() throws ApiException {
        String repository = null;
        String prefix = null;
        String after = null;
        Integer amount = null;
        String status = null;
                PullRequestsList response = api.listPullRequests(repository, prefix, after, amount, status);
        // TODO: test validations
    }
    
    /**
     * update pull request
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updatePullRequestTest() throws ApiException {
        String repository = null;
        String pullRequest = null;
        PullRequestBasic pullRequestBasic = null;
                api.updatePullRequest(repository, pullRequest, pullRequestBasic);
        // TODO: test validations
    }
    
}
