/*
 * lakeFS API
 * lakeFS HTTP API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.lakefs.clients.api;

import io.lakefs.clients.api.ApiException;
import io.lakefs.clients.api.model.AuthenticationToken;
import io.lakefs.clients.api.model.Error;
import io.lakefs.clients.api.model.ExternalLoginInformation;
import io.lakefs.clients.api.model.ExternalPrincipal;
import io.lakefs.clients.api.model.ExternalPrincipalCreation;
import io.lakefs.clients.api.model.ExternalPrincipalList;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ExternalApi
 */
@Ignore
public class ExternalApiTest {

    private final ExternalApi api = new ExternalApi();

    
    /**
     * attach external principal to user
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createUserExternalPrincipalTest() throws ApiException {
        String userId = null;
        String principalId = null;
        ExternalPrincipalCreation externalPrincipalCreation = null;
                api.createUserExternalPrincipal(userId, principalId, externalPrincipalCreation);
        // TODO: test validations
    }
    
    /**
     * delete external principal from user
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteUserExternalPrincipalTest() throws ApiException {
        String userId = null;
        String principalId = null;
                api.deleteUserExternalPrincipal(userId, principalId);
        // TODO: test validations
    }
    
    /**
     * perform a login using an external authenticator
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void externalPrincipalLoginTest() throws ApiException {
        ExternalLoginInformation externalLoginInformation = null;
                AuthenticationToken response = api.externalPrincipalLogin(externalLoginInformation);
        // TODO: test validations
    }
    
    /**
     * describe external principal by id
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getExternalPrincipalTest() throws ApiException {
        String principalId = null;
                ExternalPrincipal response = api.getExternalPrincipal(principalId);
        // TODO: test validations
    }
    
    /**
     * list user external policies attached to a user
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listUserExternalPrincipalsTest() throws ApiException {
        String userId = null;
        String prefix = null;
        String after = null;
        Integer amount = null;
                ExternalPrincipalList response = api.listUserExternalPrincipals(userId, prefix, after, amount);
        // TODO: test validations
    }
    
}
