/*
 * lakeFS API
 * lakeFS HTTP API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.lakefs.clients.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.lakefs.clients.api.model.UploadPart;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * CompletePresignMultipartUpload
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CompletePresignMultipartUpload {
  public static final String SERIALIZED_NAME_PHYSICAL_ADDRESS = "physical_address";
  @SerializedName(SERIALIZED_NAME_PHYSICAL_ADDRESS)
  private String physicalAddress;

  public static final String SERIALIZED_NAME_PARTS = "parts";
  @SerializedName(SERIALIZED_NAME_PARTS)
  private List<UploadPart> parts = new ArrayList<UploadPart>();

  public static final String SERIALIZED_NAME_USER_METADATA = "user_metadata";
  @SerializedName(SERIALIZED_NAME_USER_METADATA)
  private Map<String, String> userMetadata = null;

  public static final String SERIALIZED_NAME_CONTENT_TYPE = "content_type";
  @SerializedName(SERIALIZED_NAME_CONTENT_TYPE)
  private String contentType;


  public CompletePresignMultipartUpload physicalAddress(String physicalAddress) {
    
    this.physicalAddress = physicalAddress;
    return this;
  }

   /**
   * Get physicalAddress
   * @return physicalAddress
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getPhysicalAddress() {
    return physicalAddress;
  }


  public void setPhysicalAddress(String physicalAddress) {
    this.physicalAddress = physicalAddress;
  }


  public CompletePresignMultipartUpload parts(List<UploadPart> parts) {
    
    this.parts = parts;
    return this;
  }

  public CompletePresignMultipartUpload addPartsItem(UploadPart partsItem) {
    this.parts.add(partsItem);
    return this;
  }

   /**
   * List of uploaded parts, should be ordered by ascending part number
   * @return parts
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "List of uploaded parts, should be ordered by ascending part number")

  public List<UploadPart> getParts() {
    return parts;
  }


  public void setParts(List<UploadPart> parts) {
    this.parts = parts;
  }


  public CompletePresignMultipartUpload userMetadata(Map<String, String> userMetadata) {
    
    this.userMetadata = userMetadata;
    return this;
  }

  public CompletePresignMultipartUpload putUserMetadataItem(String key, String userMetadataItem) {
    if (this.userMetadata == null) {
      this.userMetadata = new HashMap<String, String>();
    }
    this.userMetadata.put(key, userMetadataItem);
    return this;
  }

   /**
   * Get userMetadata
   * @return userMetadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, String> getUserMetadata() {
    return userMetadata;
  }


  public void setUserMetadata(Map<String, String> userMetadata) {
    this.userMetadata = userMetadata;
  }


  public CompletePresignMultipartUpload contentType(String contentType) {
    
    this.contentType = contentType;
    return this;
  }

   /**
   * Object media type
   * @return contentType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Object media type")

  public String getContentType() {
    return contentType;
  }


  public void setContentType(String contentType) {
    this.contentType = contentType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CompletePresignMultipartUpload completePresignMultipartUpload = (CompletePresignMultipartUpload) o;
    return Objects.equals(this.physicalAddress, completePresignMultipartUpload.physicalAddress) &&
        Objects.equals(this.parts, completePresignMultipartUpload.parts) &&
        Objects.equals(this.userMetadata, completePresignMultipartUpload.userMetadata) &&
        Objects.equals(this.contentType, completePresignMultipartUpload.contentType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(physicalAddress, parts, userMetadata, contentType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CompletePresignMultipartUpload {\n");
    sb.append("    physicalAddress: ").append(toIndentedString(physicalAddress)).append("\n");
    sb.append("    parts: ").append(toIndentedString(parts)).append("\n");
    sb.append("    userMetadata: ").append(toIndentedString(userMetadata)).append("\n");
    sb.append("    contentType: ").append(toIndentedString(contentType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

