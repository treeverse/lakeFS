/*
 * lakeFS API
 * lakeFS HTTP API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.lakefs.clients.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.lakefs.clients.api.model.Commit;
import io.lakefs.clients.api.model.Error;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * ImportStatus
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ImportStatus {
  public static final String SERIALIZED_NAME_COMPLETED = "completed";
  @SerializedName(SERIALIZED_NAME_COMPLETED)
  private Boolean completed;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "update_time";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private OffsetDateTime updateTime;

  public static final String SERIALIZED_NAME_INGESTED_OBJECTS = "ingested_objects";
  @SerializedName(SERIALIZED_NAME_INGESTED_OBJECTS)
  private Long ingestedObjects;

  public static final String SERIALIZED_NAME_METARANGE_ID = "metarange_id";
  @SerializedName(SERIALIZED_NAME_METARANGE_ID)
  private String metarangeId;

  public static final String SERIALIZED_NAME_COMMIT = "commit";
  @SerializedName(SERIALIZED_NAME_COMMIT)
  private Commit commit;

  public static final String SERIALIZED_NAME_ERROR = "error";
  @SerializedName(SERIALIZED_NAME_ERROR)
  private Error error;


  public ImportStatus completed(Boolean completed) {
    
    this.completed = completed;
    return this;
  }

   /**
   * Get completed
   * @return completed
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getCompleted() {
    return completed;
  }


  public void setCompleted(Boolean completed) {
    this.completed = completed;
  }


  public ImportStatus updateTime(OffsetDateTime updateTime) {
    
    this.updateTime = updateTime;
    return this;
  }

   /**
   * Get updateTime
   * @return updateTime
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getUpdateTime() {
    return updateTime;
  }


  public void setUpdateTime(OffsetDateTime updateTime) {
    this.updateTime = updateTime;
  }


  public ImportStatus ingestedObjects(Long ingestedObjects) {
    
    this.ingestedObjects = ingestedObjects;
    return this;
  }

   /**
   * Number of objects processed so far
   * @return ingestedObjects
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Number of objects processed so far")

  public Long getIngestedObjects() {
    return ingestedObjects;
  }


  public void setIngestedObjects(Long ingestedObjects) {
    this.ingestedObjects = ingestedObjects;
  }


  public ImportStatus metarangeId(String metarangeId) {
    
    this.metarangeId = metarangeId;
    return this;
  }

   /**
   * Get metarangeId
   * @return metarangeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMetarangeId() {
    return metarangeId;
  }


  public void setMetarangeId(String metarangeId) {
    this.metarangeId = metarangeId;
  }


  public ImportStatus commit(Commit commit) {
    
    this.commit = commit;
    return this;
  }

   /**
   * Get commit
   * @return commit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Commit getCommit() {
    return commit;
  }


  public void setCommit(Commit commit) {
    this.commit = commit;
  }


  public ImportStatus error(Error error) {
    
    this.error = error;
    return this;
  }

   /**
   * Get error
   * @return error
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Error getError() {
    return error;
  }


  public void setError(Error error) {
    this.error = error;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ImportStatus importStatus = (ImportStatus) o;
    return Objects.equals(this.completed, importStatus.completed) &&
        Objects.equals(this.updateTime, importStatus.updateTime) &&
        Objects.equals(this.ingestedObjects, importStatus.ingestedObjects) &&
        Objects.equals(this.metarangeId, importStatus.metarangeId) &&
        Objects.equals(this.commit, importStatus.commit) &&
        Objects.equals(this.error, importStatus.error);
  }

  @Override
  public int hashCode() {
    return Objects.hash(completed, updateTime, ingestedObjects, metarangeId, commit, error);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ImportStatus {\n");
    sb.append("    completed: ").append(toIndentedString(completed)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    ingestedObjects: ").append(toIndentedString(ingestedObjects)).append("\n");
    sb.append("    metarangeId: ").append(toIndentedString(metarangeId)).append("\n");
    sb.append("    commit: ").append(toIndentedString(commit)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

