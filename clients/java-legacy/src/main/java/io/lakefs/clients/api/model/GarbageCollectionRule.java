/*
 * lakeFS API
 * lakeFS HTTP API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.lakefs.clients.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * GarbageCollectionRule
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GarbageCollectionRule {
  public static final String SERIALIZED_NAME_BRANCH_ID = "branch_id";
  @SerializedName(SERIALIZED_NAME_BRANCH_ID)
  private String branchId;

  public static final String SERIALIZED_NAME_RETENTION_DAYS = "retention_days";
  @SerializedName(SERIALIZED_NAME_RETENTION_DAYS)
  private Integer retentionDays;


  public GarbageCollectionRule branchId(String branchId) {
    
    this.branchId = branchId;
    return this;
  }

   /**
   * Get branchId
   * @return branchId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getBranchId() {
    return branchId;
  }


  public void setBranchId(String branchId) {
    this.branchId = branchId;
  }


  public GarbageCollectionRule retentionDays(Integer retentionDays) {
    
    this.retentionDays = retentionDays;
    return this;
  }

   /**
   * Get retentionDays
   * @return retentionDays
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getRetentionDays() {
    return retentionDays;
  }


  public void setRetentionDays(Integer retentionDays) {
    this.retentionDays = retentionDays;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GarbageCollectionRule garbageCollectionRule = (GarbageCollectionRule) o;
    return Objects.equals(this.branchId, garbageCollectionRule.branchId) &&
        Objects.equals(this.retentionDays, garbageCollectionRule.retentionDays);
  }

  @Override
  public int hashCode() {
    return Objects.hash(branchId, retentionDays);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GarbageCollectionRule {\n");
    sb.append("    branchId: ").append(toIndentedString(branchId)).append("\n");
    sb.append("    retentionDays: ").append(toIndentedString(retentionDays)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

