# coding: utf-8

"""
    lakeFS API

    lakeFS HTTP API

    The version of the OpenAPI document: 1.0.0
    Contact: services@treeverse.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

import lakefs_sdk
from lakefs_sdk.models.storage_config import StorageConfig  # noqa: E501
from lakefs_sdk.rest import ApiException

class TestStorageConfig(unittest.TestCase):
    """StorageConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test StorageConfig
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `StorageConfig`
        """
        model = lakefs_sdk.models.storage_config.StorageConfig()  # noqa: E501
        if include_optional :
            return StorageConfig(
                blockstore_type = '', 
                blockstore_namespace_example = '', 
                blockstore_namespace_validity_regex = '', 
                default_namespace_prefix = '', 
                pre_sign_support = True, 
                pre_sign_support_ui = True, 
                import_support = True, 
                import_validity_regex = ''
            )
        else :
            return StorageConfig(
                blockstore_type = '',
                blockstore_namespace_example = '',
                blockstore_namespace_validity_regex = '',
                pre_sign_support = True,
                pre_sign_support_ui = True,
                import_support = True,
                import_validity_regex = '',
        )
        """

    def testStorageConfig(self):
        """Test StorageConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
