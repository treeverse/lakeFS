# coding: utf-8

"""
    lakeFS API

    lakeFS HTTP API

    The version of the OpenAPI document: 1.0.0
    Contact: services@treeverse.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from lakefs_sdk.models.iceberg_push_request import IcebergPushRequest  # noqa: E501

class TestIcebergPushRequest(unittest.TestCase):
    """IcebergPushRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IcebergPushRequest:
        """Test IcebergPushRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IcebergPushRequest`
        """
        model = IcebergPushRequest()  # noqa: E501
        if include_optional:
            return IcebergPushRequest(
                source = lakefs_sdk.models.local_table.LocalTable(
                    namespace = '', 
                    table = '', 
                    repository_id = '', 
                    reference_id = '', ),
                destination = lakefs_sdk.models.remote_table.RemoteTable(
                    namespace = '', 
                    table = '', ),
                force_update = True,
                create_namespace = True
            )
        else:
            return IcebergPushRequest(
                source = lakefs_sdk.models.local_table.LocalTable(
                    namespace = '', 
                    table = '', 
                    repository_id = '', 
                    reference_id = '', ),
                destination = lakefs_sdk.models.remote_table.RemoteTable(
                    namespace = '', 
                    table = '', ),
        )
        """

    def testIcebergPushRequest(self):
        """Test IcebergPushRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
