/*
 * lakeFS API
 * lakeFS HTTP API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.lakefs.clients.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ObjectCopyCreation
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ObjectCopyCreation {
  public static final String SERIALIZED_NAME_SOURCE_PATH = "source_path";
  @SerializedName(SERIALIZED_NAME_SOURCE_PATH)
  private String sourcePath;

  public static final String SERIALIZED_NAME_DESTINATION_PATH = "destination_path";
  @SerializedName(SERIALIZED_NAME_DESTINATION_PATH)
  private String destinationPath;

  public static final String SERIALIZED_NAME_DESTINATION_BRANCH = "destination_branch";
  @SerializedName(SERIALIZED_NAME_DESTINATION_BRANCH)
  private String destinationBranch;


  public ObjectCopyCreation sourcePath(String sourcePath) {
    
    this.sourcePath = sourcePath;
    return this;
  }

   /**
   * path of the copied object relative to the ref
   * @return sourcePath
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "path of the copied object relative to the ref")

  public String getSourcePath() {
    return sourcePath;
  }


  public void setSourcePath(String sourcePath) {
    this.sourcePath = sourcePath;
  }


  public ObjectCopyCreation destinationPath(String destinationPath) {
    
    this.destinationPath = destinationPath;
    return this;
  }

   /**
   * the new copy path relative to the destination branch
   * @return destinationPath
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "the new copy path relative to the destination branch")

  public String getDestinationPath() {
    return destinationPath;
  }


  public void setDestinationPath(String destinationPath) {
    this.destinationPath = destinationPath;
  }


  public ObjectCopyCreation destinationBranch(String destinationBranch) {
    
    this.destinationBranch = destinationBranch;
    return this;
  }

   /**
   * the new copy destination branch
   * @return destinationBranch
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "the new copy destination branch")

  public String getDestinationBranch() {
    return destinationBranch;
  }


  public void setDestinationBranch(String destinationBranch) {
    this.destinationBranch = destinationBranch;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ObjectCopyCreation objectCopyCreation = (ObjectCopyCreation) o;
    return Objects.equals(this.sourcePath, objectCopyCreation.sourcePath) &&
        Objects.equals(this.destinationPath, objectCopyCreation.destinationPath) &&
        Objects.equals(this.destinationBranch, objectCopyCreation.destinationBranch);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sourcePath, destinationPath, destinationBranch);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ObjectCopyCreation {\n");
    sb.append("    sourcePath: ").append(toIndentedString(sourcePath)).append("\n");
    sb.append("    destinationPath: ").append(toIndentedString(destinationPath)).append("\n");
    sb.append("    destinationBranch: ").append(toIndentedString(destinationBranch)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

