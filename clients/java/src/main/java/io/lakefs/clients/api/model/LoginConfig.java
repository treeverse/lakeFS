/*
 * lakeFS API
 * lakeFS HTTP API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.lakefs.clients.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * LoginConfig
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class LoginConfig {
  /**
   * RBAC will remain enabled on GUI if \&quot;external\&quot;.  That only works with an external auth service. 
   */
  @JsonAdapter(RBACEnum.Adapter.class)
  public enum RBACEnum {
    SIMPLIFIED("simplified"),
    
    EXTERNAL("external");

    private String value;

    RBACEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RBACEnum fromValue(String value) {
      for (RBACEnum b : RBACEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<RBACEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RBACEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RBACEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return RBACEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_R_B_A_C = "RBAC";
  @SerializedName(SERIALIZED_NAME_R_B_A_C)
  private RBACEnum RBAC;


  public LoginConfig RBAC(RBACEnum RBAC) {
    
    this.RBAC = RBAC;
    return this;
  }

   /**
   * RBAC will remain enabled on GUI if \&quot;external\&quot;.  That only works with an external auth service. 
   * @return RBAC
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "RBAC will remain enabled on GUI if \"external\".  That only works with an external auth service. ")

  public RBACEnum getRBAC() {
    return RBAC;
  }


  public void setRBAC(RBACEnum RBAC) {
    this.RBAC = RBAC;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoginConfig loginConfig = (LoginConfig) o;
    return Objects.equals(this.RBAC, loginConfig.RBAC);
  }

  @Override
  public int hashCode() {
    return Objects.hash(RBAC);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoginConfig {\n");
    sb.append("    RBAC: ").append(toIndentedString(RBAC)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

