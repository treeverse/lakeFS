version: "3"
services:
  lakefs:
    extends:
      file: ${OSS_ESTI_OPS_PATH:-esti/ops}/docker-compose-common.yaml
      service: lakefs
    depends_on:
      - spark
    environment:
      - LAKEFS_AUTH_UI_CONFIG_RBAC=${LAKEFS_AUTH_UI_CONFIG_RBAC:-simplified}
      - LAKEFS_BLOCKSTORE_S3_CREDENTIALS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - LAKEFS_BLOCKSTORE_S3_CREDENTIALS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - LAKEFS_BLOCKSTORE_TYPE=azure
      - LAKEFS_DATABASE_TYPE=cosmosdb
      - LAKEFS_DATABASE_COSMOSDB_ENDPOINT
      - LAKEFS_DATABASE_COSMOSDB_DATABASE
      - LAKEFS_DATABASE_COSMOSDB_CONTAINER
      - LAKEFS_DATABASE_COSMOSDB_KEY
      - AZURE_CLIENT_ID
      - AZURE_CLIENT_SECRET
      - AZURE_TENANT_ID

  esti:
    extends:
      file: ${OSS_ESTI_OPS_PATH:-esti/ops}/docker-compose-common.yaml
      service: esti
    depends_on:
      spark:
        condition: service_healthy
    environment:
      - LAKEFS_ACCESS_KEY_ID=${LAKEFS_ACCESS_KEY_ID}
      - LAKEFS_SECRET_ACCESS_KEY=${LAKEFS_SECRET_ACCESS_KEY}
    command:
      - /bin/sh
      - -c
      - |
        apk add --no-cache util-linux docker curl go bash
        go test -timeout 20m $$ESTI_GOTEST_FLAGS -skip $$ESTI_SKIP_TESTS -v ./esti --system-tests $$ESTI_FLAGS
    volumes:
      - lakefs-code:/lakefs
      - lakefs-app:/app:ro
      - shared-spark:/opt/bitnami/spark
      - shared-metaclient:/opt/metaclient

  spark:
    extends:
      file: ${OSS_ESTI_OPS_PATH:-esti/ops}/docker-compose-common.yaml
      service: spark
    container_name: lakefs-spark
    volumes:
      - shared-metaclient:/opt/metaclient
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  lakefs-code:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${LAKEFS_ROOT:-.}
  lakefs-app:
  shared-spark:
  shared-metaclient:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./esti/ops/test/spark/metaclient

