version: "3"
services:
  lakefs:
    extends:
      file: esti/ops/docker-compose-common.yaml
      service: lakefs
    depends_on:
      - "postgres"
    volumes:
      - lakefs-app:/app:ro
    environment:
      - LAKEFS_DATABASE_TYPE=${LAKEFS_DATABASE_TYPE:-postgres}
      - LAKEFS_DATABASE_POSTGRES_CONNECTION_STRING=postgres://lakefs:lakefs@postgres/postgres?sslmode=disable
    entrypoint: ["/app/wait-for", "postgres:5432", "--", "/app/lakefs", "run"]

  postgres:
    extends:
      file: esti/ops/docker-compose-common.yaml
      service: postgres

  esti:
    image: "golang:1.23-alpine"
    links:
      - lakefs:s3.local.lakefs.io
      - lakefs:testmultipartupload.s3.local.lakefs.io
      - lakefs:testmultipartuploadabort.s3.local.lakefs.io
      - lakefs:testdeleteobjects.s3.local.lakefs.io
      - lakefs:testmigrate-testpremigratemultipart.s3.local.lakefs.io
      - lakefs:migrate.s3.local.lakefs.io
    environment:
      - CGO_ENABLED=0
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_REGION=us-east-1
      - ESTI_STORAGE_NAMESPACE
      - ESTI_BLOCKSTORE_TYPE
      - ESTI_AWS_ACCESS_KEY_ID
      - ESTI_SETUP_LAKEFS
      - ESTI_AWS_SECRET_ACCESS_KEY
      - ESTI_ENDPOINT_URL=http://lakefs:8000
      - ESTI_BINARIES_DIR=/app
      - ESTI_DATABASE_CONNECTION_STRING=postgres://lakefs:lakefs@postgres/postgres?sslmode=disable
      - ESTI_GOTEST_FLAGS
      - ESTI_FLAGS
      - ESTI_FORCE_PATH_STYLE
      - ESTI_AZURE_STORAGE_ACCOUNT
      - ESTI_AZURE_STORAGE_ACCESS_KEY
    working_dir: /lakefs
    command:
      - /bin/sh
      - -c
      - |
        apk add --no-cache util-linux
        go test -v $ESTI_GOTEST_FLAGS ./esti --system-tests $ESTI_FLAGS --skip=".*GC"
    volumes:
      - lakefs-code:/lakefs
      - lakefs-app:/app:ro

volumes:
  lakefs-code:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${LAKEFS_ROOT:-.}
  lakefs-app:
