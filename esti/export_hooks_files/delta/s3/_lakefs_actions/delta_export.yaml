name: Delta Exporter
on:
  post-commit:
    branches: ["{{ .Branch }}*"]
hooks:
  - id: delta_exporter
    type: lua
    properties:
      script: |
        local aws = require("aws")
        local formats = require("formats")
        local delta_exporter = require("lakefs/catalogexport/delta_exporter")
        local json = require("encoding/json")
        
        local table_descriptors_path = "_lakefs_tables"
        local sc = aws.s3_client(args.aws.access_key_id, args.aws.secret_access_key, args.aws.region)
        local delta_client = formats.delta_client(args.lakefs.access_key_id, args.lakefs.secret_access_key, args.aws.region)
        local delta_table_details = delta_exporter.export_delta_log(action, args.table_names, sc.put_object, delta_client, table_descriptors_path)

        for t, details in pairs(delta_table_details) do
          if details["path"] == nil then
            error("Delta Lake exported table \"" .. t .. "\"'s location is not available\n")
          end
          print("Delta Lake exported table \"" .. t .. "\"'s location: " .. details["path"] .. "\n")
          if details["metadata"] == nil then
            error("Delta Lake exported table \"" .. t .. "\"'s metadata is not available\n")
          end
          print("Delta Lake exported table \"" .. t .. "\"'s metadata:\n")
          for k, v in pairs(details["metadata"]) do
            if type(v) ~= "table" then
              print("\t" .. k .. " = " .. v .. "\n")
            else 
              print("\t" .. k .. " = " .. json.marshal(v) .. "\n")
            end
          end
        end
      args:
        aws:
          access_key_id: "{{ .AWSAccessKeyID }}"
          secret_access_key: "{{ .AWSSecretAccessKey }}"
          region: "{{ .AWSRegion }}"
        lakefs: # provide credentials of a user that has access to the script and Delta Table
          access_key_id: "{{ .LakeFSAccessKeyID }}"
          secret_access_key: "{{ .LakeFSSecretAccessKey }}"
        table_names:
          - test-table
