// Code generated by github.com/treeverse/lakefs/tools/wrapgen DO NOT EDIT.

package testcode

import (
	"time"
)

type MonitoredArithmetic struct {
	Wrapped Arithmetic
	Observe func(operation string, duration time.Duration, success bool)
}

func (w *MonitoredArithmetic) Add(a int, b int) int { return w.Wrapped.Add(a, b) }
func (w *MonitoredArithmetic) Double(a int) (int, error) {
	const op = "double"
	start := time.Now()

	r0, r1 := w.Wrapped.Double(a)
	w.Observe(op, time.Since(start), r1 == nil)
	return r0, r1
}
