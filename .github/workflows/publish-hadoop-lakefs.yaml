name: publish hadoop lakefs

on:
  workflow_dispatch:
    inputs:
      tag:
        description: Tag/version to publish
 
# These permissions are needed to interact with GitHub's OIDC Token endpoint.
permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-22.04
    environment: Treeverse signing
    steps:
      - name: Checkout
        uses: actions/checkout@v4

        # Extract the version to 'version' based on workflow_dispatch or triggered tag in the published event
      - name: Extract version
        shell: bash
        run: |
          if [ "${{ github.event.inputs.tag }}" != "" ]; then
            echo "tag=$(echo ${{ github.event.inputs.tag }} | sed s/^v//)" >> $GITHUB_OUTPUT
          else
            echo "tag=$(echo ${GITHUB_REF##*/} | sed s/^v//)" >> $GITHUB_OUTPUT
          fi
        id: version

      - name: Install secret key for signing
        run: |
          cat <(echo -e '${{ secrets.OSSRH_GPG_SECRET_KEY }}') | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG

      - name: Set up Java and Maven Central Repository
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Update package version
        working-directory: clients/hadoopfs
        run: sed -i.bak 's/<version>.*<\/version><!--MARKER.*/<version>'${{ steps.version.outputs.tag }}'<\/version>/' pom.xml

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}

      - name: Publish
        working-directory: clients/hadoopfs
        run: mvn -Prelease --batch-mode deploy -Dgpg.executable="${GITHUB_WORKSPACE}/scripts/gpg_loopback.sh"
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}

      - name: Upload S3
        working-directory: clients/hadoopfs
        run: mvn package s3-storage-wagon:s3-upload@upload-jar -DpublicRepository=true -DskipTests

      - name: Publish - assembly
        working-directory: clients/hadoopfs
        run: |
          mvn clean
          mvn -Passembly,release --batch-mode deploy -Dgpg.executable="${GITHUB_WORKSPACE}/scripts/gpg_loopback.sh" -DskipTests
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}

      - name: Upload S3 - assembly
        working-directory: clients/hadoopfs
        run: mvn -Passembly package s3-storage-wagon:s3-upload@upload-jar -DpublicRepository=true -DskipTests
