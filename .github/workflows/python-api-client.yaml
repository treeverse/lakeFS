name: python-api-client

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs: 
      tag:
        description: Tag/version to publish
        required: true
jobs:
  deploy:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      # Extract the version to 'version' based on workflow_dispatch or triggered tag in the published event
    - name: Extract version
      shell: bash
      run: |
        if [ "${{ github.event.inputs.tag }}" != "" ]; then
          echo "::set-output name=tag::$(echo ${{ github.event.inputs.tag }} | sed s/^v//)"
        else
          echo "::set-output name=tag::$(echo ${GITHUB_REF##*/} | sed s/^v//)"
        fi
      id: version

    - name: Python build and make package
      run: make package-python PACKAGE_VERSION=${{ steps.version.outputs.tag }}

    - name: Python validate client
      run: make validate-client-python

    - name: Python publish package
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages_dir: clients/python/dist/
        verbose: true

    - name: Extract docs version
      shell: bash
      run: |
        if [ "${{ github.event.inputs.tag }}" != "" ]; then
          echo "::set-output name=tag::$(echo ${{ github.event.inputs.tag }} | cut -d. -f1-2)"
        else
          echo "::set-output name=tag::$(echo ${GITHUB_REF##*/} | cut -d. -f1-2)"
        fi
      id: docver
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1.79.0
      with:
        working-directory: clients/python
        ruby-version: 2.6
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically

    - name: Build release as latest
      working-directory: clients/python
      run: bundle exec jekyll build -d _site -b /

    - name: Build release ${{ steps.docver.outputs.tag }}
      working-directory: clients/python
      run: bundle exec jekyll build -d _site/${{ steps.docver.outputs.tag }} -b /${{ steps.docver.outputs.tag }}

    - name: Publish to docs repository
      uses: dmnemec/copy_file_to_another_repo_action@v1.1.1
      env:
        API_TOKEN_GITHUB: ${{ secrets.PERSONAL_TOKEN }}
      with:
        source_file: clients/python/_site/.
        destination_repo: treeverse/docs-lakefs-python
        destination_folder: /
        user_email: 'support@treeverse.io'
        user_name: 'python-docs-action'
