name: Docker
on:
  release:
    types: [released]
  workflow_dispatch:
    inputs:
      tag:
        required: false
        description: Tag/version to publish

# These permissions are needed to interact with GitHub's OIDC Token endpoint.
permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Build and push Docker image
    runs-on: ubuntu-22.04
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: "18.17.0"

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21.4"
        id: go

      - uses: bufbuild/buf-setup-action@v1.28.1
        with:
          github_token: ${{ github.token }}

      - name: Extract version
        shell: bash
        run: |
          if [ "${{ github.event.inputs.tag }}" != "" ]; then
            echo "tag=$(echo ${{ github.event.inputs.tag }} | sed s/^v//)" >> $GITHUB_OUTPUT
          else
            echo "tag=$(echo ${GITHUB_REF##*/} | sed s/^v//)" >> $GITHUB_OUTPUT
          fi
        id: version

      - name: Generate code
        run: make gen VERSION=${{ steps.version.outputs.tag }}

      - name: Checks validator
        run: make checks-validator
        env:
          GOLANGCI_LINT_FLAGS: --out-format github-actions

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: lakefs docker metadata
        id: lakefs_meta
        uses: docker/metadata-action@v5
        with:
          images: |
            treeverse/lakefs
            ${{ steps.login-ecr.outputs.registry }}/lakefs
          tags: |
            type=semver,pattern={{version}},value=${{ steps.version.outputs.tag }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.version.outputs.tag }}
            type=semver,pattern={{major}},value=${{ steps.version.outputs.tag }}

      - name: Build and push lakefs
        uses: docker/build-push-action@v5
        with:
          context: .
          target: lakefs
          push: true
          platforms: linux/amd64,linux/arm64
          build-args: VERSION=${{ steps.version.outputs.tag }}
          tags: ${{ steps.lakefs_meta.outputs.tags }}

      - name: lakectl docker metadata
        id: lakectl_meta
        uses: docker/metadata-action@v5
        with:
          images: |
            treeverse/lakectl
            ${{ steps.login-ecr.outputs.registry }}/lakectl
          tags: |
            type=semver,pattern={{version}},value=${{ steps.version.outputs.tag }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.version.outputs.tag }}
            type=semver,pattern={{major}},value=${{ steps.version.outputs.tag }}

      - name: Build and push lakectl
        uses: docker/build-push-action@v5
        with:
          context: .
          target: lakectl
          push: true
          platforms: linux/amd64,linux/arm64
          build-args: VERSION=${{ steps.version.outputs.tag }}
          tags: ${{ steps.lakectl_meta.outputs.tags }}

