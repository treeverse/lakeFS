// Code generated by go-swagger; DO NOT EDIT.

package objects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewListObjectsParams creates a new ListObjectsParams object
// with the default values initialized.
func NewListObjectsParams() *ListObjectsParams {
	var ()
	return &ListObjectsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewListObjectsParamsWithTimeout creates a new ListObjectsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewListObjectsParamsWithTimeout(timeout time.Duration) *ListObjectsParams {
	var ()
	return &ListObjectsParams{

		timeout: timeout,
	}
}

// NewListObjectsParamsWithContext creates a new ListObjectsParams object
// with the default values initialized, and the ability to set a context for a request
func NewListObjectsParamsWithContext(ctx context.Context) *ListObjectsParams {
	var ()
	return &ListObjectsParams{

		Context: ctx,
	}
}

// NewListObjectsParamsWithHTTPClient creates a new ListObjectsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewListObjectsParamsWithHTTPClient(client *http.Client) *ListObjectsParams {
	var ()
	return &ListObjectsParams{
		HTTPClient: client,
	}
}

/*ListObjectsParams contains all the parameters to send to the API endpoint
for the list objects operation typically these are written to a http.Request
*/
type ListObjectsParams struct {

	/*After*/
	After *string
	/*Amount*/
	Amount *int64
	/*Ref
	  a reference (could be either a branch ID or a commit ID)

	*/
	Ref string
	/*RepositoryID*/
	RepositoryID string
	/*Tree*/
	Tree *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the list objects params
func (o *ListObjectsParams) WithTimeout(timeout time.Duration) *ListObjectsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list objects params
func (o *ListObjectsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list objects params
func (o *ListObjectsParams) WithContext(ctx context.Context) *ListObjectsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list objects params
func (o *ListObjectsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list objects params
func (o *ListObjectsParams) WithHTTPClient(client *http.Client) *ListObjectsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list objects params
func (o *ListObjectsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAfter adds the after to the list objects params
func (o *ListObjectsParams) WithAfter(after *string) *ListObjectsParams {
	o.SetAfter(after)
	return o
}

// SetAfter adds the after to the list objects params
func (o *ListObjectsParams) SetAfter(after *string) {
	o.After = after
}

// WithAmount adds the amount to the list objects params
func (o *ListObjectsParams) WithAmount(amount *int64) *ListObjectsParams {
	o.SetAmount(amount)
	return o
}

// SetAmount adds the amount to the list objects params
func (o *ListObjectsParams) SetAmount(amount *int64) {
	o.Amount = amount
}

// WithRef adds the ref to the list objects params
func (o *ListObjectsParams) WithRef(ref string) *ListObjectsParams {
	o.SetRef(ref)
	return o
}

// SetRef adds the ref to the list objects params
func (o *ListObjectsParams) SetRef(ref string) {
	o.Ref = ref
}

// WithRepositoryID adds the repositoryID to the list objects params
func (o *ListObjectsParams) WithRepositoryID(repositoryID string) *ListObjectsParams {
	o.SetRepositoryID(repositoryID)
	return o
}

// SetRepositoryID adds the repositoryId to the list objects params
func (o *ListObjectsParams) SetRepositoryID(repositoryID string) {
	o.RepositoryID = repositoryID
}

// WithTree adds the tree to the list objects params
func (o *ListObjectsParams) WithTree(tree *string) *ListObjectsParams {
	o.SetTree(tree)
	return o
}

// SetTree adds the tree to the list objects params
func (o *ListObjectsParams) SetTree(tree *string) {
	o.Tree = tree
}

// WriteToRequest writes these params to a swagger request
func (o *ListObjectsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.After != nil {

		// query param after
		var qrAfter string
		if o.After != nil {
			qrAfter = *o.After
		}
		qAfter := qrAfter
		if qAfter != "" {
			if err := r.SetQueryParam("after", qAfter); err != nil {
				return err
			}
		}

	}

	if o.Amount != nil {

		// query param amount
		var qrAmount int64
		if o.Amount != nil {
			qrAmount = *o.Amount
		}
		qAmount := swag.FormatInt64(qrAmount)
		if qAmount != "" {
			if err := r.SetQueryParam("amount", qAmount); err != nil {
				return err
			}
		}

	}

	// path param ref
	if err := r.SetPathParam("ref", o.Ref); err != nil {
		return err
	}

	// path param repositoryId
	if err := r.SetPathParam("repositoryId", o.RepositoryID); err != nil {
		return err
	}

	if o.Tree != nil {

		// query param tree
		var qrTree string
		if o.Tree != nil {
			qrTree = *o.Tree
		}
		qTree := qrTree
		if qTree != "" {
			if err := r.SetQueryParam("tree", qTree); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
