// Code generated by go-swagger; DO NOT EDIT.

package objects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/treeverse/lakefs/api/gen/models"
)

// StatObjectReader is a Reader for the StatObject structure.
type StatObjectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StatObjectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStatObjectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewStatObjectUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewStatObjectNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewStatObjectDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewStatObjectOK creates a StatObjectOK with default headers values
func NewStatObjectOK() *StatObjectOK {
	return &StatObjectOK{}
}

/*StatObjectOK handles this case with default header values.

object metadata
*/
type StatObjectOK struct {
	Payload *models.ObjectStats
}

func (o *StatObjectOK) Error() string {
	return fmt.Sprintf("[GET /repositories/{repositoryId}/refs/{ref}/objects/stat][%d] statObjectOK  %+v", 200, o.Payload)
}

func (o *StatObjectOK) GetPayload() *models.ObjectStats {
	return o.Payload
}

func (o *StatObjectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ObjectStats)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStatObjectUnauthorized creates a StatObjectUnauthorized with default headers values
func NewStatObjectUnauthorized() *StatObjectUnauthorized {
	return &StatObjectUnauthorized{}
}

/*StatObjectUnauthorized handles this case with default header values.

Unauthorized
*/
type StatObjectUnauthorized struct {
	Payload *models.Error
}

func (o *StatObjectUnauthorized) Error() string {
	return fmt.Sprintf("[GET /repositories/{repositoryId}/refs/{ref}/objects/stat][%d] statObjectUnauthorized  %+v", 401, o.Payload)
}

func (o *StatObjectUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *StatObjectUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStatObjectNotFound creates a StatObjectNotFound with default headers values
func NewStatObjectNotFound() *StatObjectNotFound {
	return &StatObjectNotFound{}
}

/*StatObjectNotFound handles this case with default header values.

path or branch not found
*/
type StatObjectNotFound struct {
	Payload *models.Error
}

func (o *StatObjectNotFound) Error() string {
	return fmt.Sprintf("[GET /repositories/{repositoryId}/refs/{ref}/objects/stat][%d] statObjectNotFound  %+v", 404, o.Payload)
}

func (o *StatObjectNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *StatObjectNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStatObjectDefault creates a StatObjectDefault with default headers values
func NewStatObjectDefault(code int) *StatObjectDefault {
	return &StatObjectDefault{
		_statusCode: code,
	}
}

/*StatObjectDefault handles this case with default header values.

generic error response
*/
type StatObjectDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the stat object default response
func (o *StatObjectDefault) Code() int {
	return o._statusCode
}

func (o *StatObjectDefault) Error() string {
	return fmt.Sprintf("[GET /repositories/{repositoryId}/refs/{ref}/objects/stat][%d] statObject default  %+v", o._statusCode, o.Payload)
}

func (o *StatObjectDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *StatObjectDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
