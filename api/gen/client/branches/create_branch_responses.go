// Code generated by go-swagger; DO NOT EDIT.

package branches

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/treeverse/lakefs/api/gen/models"
)

// CreateBranchReader is a Reader for the CreateBranch structure.
type CreateBranchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateBranchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateBranchCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateBranchBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateBranchUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreateBranchDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateBranchCreated creates a CreateBranchCreated with default headers values
func NewCreateBranchCreated() *CreateBranchCreated {
	return &CreateBranchCreated{}
}

/*CreateBranchCreated handles this case with default header values.

branch
*/
type CreateBranchCreated struct {
	Payload *models.Ref
}

func (o *CreateBranchCreated) Error() string {
	return fmt.Sprintf("[POST /repositories/{repositoryId}/branches][%d] createBranchCreated  %+v", 201, o.Payload)
}

func (o *CreateBranchCreated) GetPayload() *models.Ref {
	return o.Payload
}

func (o *CreateBranchCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Ref)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateBranchBadRequest creates a CreateBranchBadRequest with default headers values
func NewCreateBranchBadRequest() *CreateBranchBadRequest {
	return &CreateBranchBadRequest{}
}

/*CreateBranchBadRequest handles this case with default header values.

validation error
*/
type CreateBranchBadRequest struct {
	Payload *models.Error
}

func (o *CreateBranchBadRequest) Error() string {
	return fmt.Sprintf("[POST /repositories/{repositoryId}/branches][%d] createBranchBadRequest  %+v", 400, o.Payload)
}

func (o *CreateBranchBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateBranchBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateBranchUnauthorized creates a CreateBranchUnauthorized with default headers values
func NewCreateBranchUnauthorized() *CreateBranchUnauthorized {
	return &CreateBranchUnauthorized{}
}

/*CreateBranchUnauthorized handles this case with default header values.

Unauthorized
*/
type CreateBranchUnauthorized struct {
	Payload *models.Error
}

func (o *CreateBranchUnauthorized) Error() string {
	return fmt.Sprintf("[POST /repositories/{repositoryId}/branches][%d] createBranchUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateBranchUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateBranchUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateBranchDefault creates a CreateBranchDefault with default headers values
func NewCreateBranchDefault(code int) *CreateBranchDefault {
	return &CreateBranchDefault{
		_statusCode: code,
	}
}

/*CreateBranchDefault handles this case with default header values.

generic error response
*/
type CreateBranchDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the create branch default response
func (o *CreateBranchDefault) Code() int {
	return o._statusCode
}

func (o *CreateBranchDefault) Error() string {
	return fmt.Sprintf("[POST /repositories/{repositoryId}/branches][%d] createBranch default  %+v", o._statusCode, o.Payload)
}

func (o *CreateBranchDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateBranchDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
