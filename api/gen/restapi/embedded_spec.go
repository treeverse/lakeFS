// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "lakeFS HTTP API",
    "title": "lakeFS API",
    "version": "0.1.0"
  },
  "basePath": "/api/v1",
  "paths": {
    "/authentication": {
      "get": {
        "tags": [
          "authentication"
        ],
        "responses": {
          "200": {
            "description": "authentication successful",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "$ref": "#/definitions/user"
                }
              }
            }
          }
        }
      }
    },
    "/repositories": {
      "get": {
        "tags": [
          "repositories"
        ],
        "summary": "list repositories",
        "operationId": "listRepositories",
        "parameters": [
          {
            "type": "string",
            "name": "after",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "amount",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "repository list",
            "schema": {
              "type": "object",
              "properties": {
                "pagination": {
                  "$ref": "#/definitions/pagination"
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/repository"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "repositories"
        ],
        "summary": "create repository",
        "operationId": "createRepository",
        "parameters": [
          {
            "name": "repository",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/repository_creation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "repository",
            "schema": {
              "$ref": "#/definitions/repository"
            }
          },
          "400": {
            "description": "validation error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/repositories/{repositoryId}": {
      "get": {
        "tags": [
          "repositories"
        ],
        "summary": "get repository",
        "operationId": "getRepository",
        "responses": {
          "200": {
            "description": "repository",
            "schema": {
              "$ref": "#/definitions/repository"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "404": {
            "description": "repository not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "repositories"
        ],
        "summary": "delete repository",
        "operationId": "deleteRepository",
        "responses": {
          "204": {
            "description": "repository deleted successfully"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "404": {
            "description": "repository not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "repositoryId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/repositories/{repositoryId}/branches": {
      "get": {
        "tags": [
          "branches"
        ],
        "summary": "list branches",
        "operationId": "listBranches",
        "parameters": [
          {
            "type": "string",
            "name": "after",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "amount",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "branch list",
            "schema": {
              "type": "object",
              "properties": {
                "pagination": {
                  "$ref": "#/definitions/pagination"
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ref"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "branches"
        ],
        "summary": "create branch",
        "operationId": "createBranch",
        "parameters": [
          {
            "name": "branch",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/branch_creation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "branch",
            "schema": {
              "$ref": "#/definitions/ref"
            }
          },
          "400": {
            "description": "validation error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "repositoryId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/repositories/{repositoryId}/branches/{branchId}": {
      "get": {
        "tags": [
          "branches"
        ],
        "summary": "get branch",
        "operationId": "getBranch",
        "responses": {
          "200": {
            "description": "branch",
            "schema": {
              "$ref": "#/definitions/ref"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "404": {
            "description": "branch not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "branches"
        ],
        "summary": "revert branch",
        "operationId": "revertBranch",
        "parameters": [
          {
            "description": "revert parameters",
            "name": "revert",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/revert_creation"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "reverted"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "404": {
            "description": "commit/branch not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "branches"
        ],
        "summary": "delete branch",
        "operationId": "deleteBranch",
        "responses": {
          "204": {
            "description": "branch deleted successfully"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "404": {
            "description": "branch not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "repositoryId",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "name": "branchId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/repositories/{repositoryId}/branches/{branchId}/commits": {
      "get": {
        "tags": [
          "commits"
        ],
        "summary": "get commit log for branch",
        "operationId": "getBranchCommitLog",
        "responses": {
          "200": {
            "description": "commit log",
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/commit"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/responses/Unauthorized"
            }
          },
          "404": {
            "description": "branch not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "commits"
        ],
        "summary": "create commit",
        "operationId": "commit",
        "parameters": [
          {
            "name": "commit",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/commit_creation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "commit",
            "schema": {
              "$ref": "#/definitions/commit"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "404": {
            "description": "branch not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "repositoryId",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "name": "branchId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/repositories/{repositoryId}/branches/{branchId}/diff": {
      "get": {
        "tags": [
          "branches"
        ],
        "summary": "diff branch",
        "operationId": "diffBranch",
        "responses": {
          "200": {
            "description": "diff of branch uncommitted changes",
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/diff"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/responses/Unauthorized"
            }
          },
          "404": {
            "description": "branch not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "repositoryId",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "name": "branchId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/repositories/{repositoryId}/branches/{branchId}/objects": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "objects"
        ],
        "summary": "upload object content",
        "operationId": "uploadObject",
        "parameters": [
          {
            "type": "file",
            "description": "Object content to upload",
            "name": "content",
            "in": "formData"
          }
        ],
        "responses": {
          "201": {
            "description": "object metadata",
            "schema": {
              "$ref": "#/definitions/object_stats"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "404": {
            "description": "repository or branch not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "objects"
        ],
        "summary": "delete object",
        "operationId": "deleteObject",
        "responses": {
          "204": {
            "description": "object deleted successfully"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "404": {
            "description": "path or branch not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "repositoryId",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "name": "branchId",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "name": "path",
          "in": "query",
          "required": true
        }
      ]
    },
    "/repositories/{repositoryId}/commits/{commitId}": {
      "get": {
        "tags": [
          "commits"
        ],
        "summary": "get commit",
        "operationId": "getCommit",
        "responses": {
          "200": {
            "description": "commit",
            "schema": {
              "$ref": "#/definitions/commit"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "404": {
            "description": "commit not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "repositoryId",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "name": "commitId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/repositories/{repositoryId}/refs/{leftRef}/diff/{rightRef}": {
      "get": {
        "tags": [
          "refs"
        ],
        "summary": "diff references",
        "operationId": "diffRefs",
        "responses": {
          "200": {
            "description": "diff between refs",
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/diff"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/responses/Unauthorized"
            }
          },
          "404": {
            "description": "branch not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "repositoryId",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "a reference (could be either a branch ID or a commit ID)",
          "name": "leftRef",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "a reference (could be either a branch ID or a commit ID) to compare against",
          "name": "rightRef",
          "in": "path",
          "required": true
        }
      ]
    },
    "/repositories/{repositoryId}/refs/{ref}/objects": {
      "get": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "download_token": []
          }
        ],
        "produces": [
          "application/octet-stream"
        ],
        "tags": [
          "objects"
        ],
        "summary": "get object content",
        "operationId": "getObject",
        "responses": {
          "200": {
            "description": "object content",
            "schema": {
              "type": "file"
            },
            "headers": {
              "Content-Disposition": {
                "type": "string"
              },
              "Content-Length": {
                "type": "integer",
                "format": "int64"
              },
              "ETag": {
                "type": "string"
              },
              "Last-Modified": {
                "type": "string"
              }
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "404": {
            "description": "path or ref not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "repositoryId",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "a reference (could be either a branch ID or a commit ID)",
          "name": "ref",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "name": "path",
          "in": "query",
          "required": true
        }
      ]
    },
    "/repositories/{repositoryId}/refs/{ref}/objects/ls": {
      "get": {
        "tags": [
          "objects"
        ],
        "summary": "list objects under a given tree",
        "operationId": "listObjects",
        "responses": {
          "200": {
            "description": "entry list",
            "schema": {
              "type": "object",
              "properties": {
                "pagination": {
                  "$ref": "#/definitions/pagination"
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/object_stats"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "404": {
            "description": "tree or branch not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "repositoryId",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "a reference (could be either a branch ID or a commit ID)",
          "name": "ref",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "name": "tree",
          "in": "query"
        },
        {
          "type": "string",
          "name": "after",
          "in": "query"
        },
        {
          "type": "integer",
          "name": "amount",
          "in": "query"
        }
      ]
    },
    "/repositories/{repositoryId}/refs/{ref}/objects/stat": {
      "get": {
        "tags": [
          "objects"
        ],
        "summary": "get object metadata",
        "operationId": "statObject",
        "responses": {
          "200": {
            "description": "object metadata",
            "schema": {
              "$ref": "#/definitions/object_stats"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "404": {
            "description": "path or branch not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "repositoryId",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "a reference (could be either a branch ID or a commit ID)",
          "name": "ref",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "name": "path",
          "in": "query",
          "required": true
        }
      ]
    }
  },
  "definitions": {
    "branch_creation": {
      "type": "object",
      "required": [
        "id",
        "sourceRefId"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "sourceRefId": {
          "type": "string"
        }
      }
    },
    "commit": {
      "type": "object",
      "properties": {
        "committer": {
          "type": "string"
        },
        "creation_date": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "parents": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "commit_creation": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "diff": {
      "type": "object",
      "properties": {
        "direction": {
          "type": "string",
          "enum": [
            "LEFT",
            "RIGHT",
            "CONFLICT"
          ]
        },
        "path": {
          "type": "string"
        },
        "path_type": {
          "type": "string",
          "enum": [
            "TREE",
            "OBJECT"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "ADDED",
            "REMOVED",
            "CHANGED"
          ]
        }
      }
    },
    "error": {
      "type": "object",
      "properties": {
        "message": {
          "description": "short message explaining the error",
          "type": "string"
        }
      }
    },
    "object_stats": {
      "type": "object",
      "properties": {
        "checksum": {
          "type": "string"
        },
        "mtime": {
          "type": "integer",
          "format": "int64"
        },
        "path": {
          "type": "string"
        },
        "path_type": {
          "type": "string",
          "enum": [
            "TREE",
            "OBJECT"
          ]
        },
        "size_bytes": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "pagination": {
      "type": "object",
      "required": [
        "has_more"
      ],
      "properties": {
        "has_more": {
          "type": "boolean"
        },
        "max_per_page": {
          "type": "integer"
        },
        "next_offset": {
          "type": "string"
        },
        "results": {
          "type": "integer"
        }
      }
    },
    "ref": {
      "type": "object",
      "required": [
        "id",
        "commit_id"
      ],
      "properties": {
        "commit_id": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "repository": {
      "type": "object",
      "properties": {
        "bucket_name": {
          "type": "string"
        },
        "creation_date": {
          "type": "integer",
          "format": "int64"
        },
        "default_branch": {
          "type": "string",
          "example": "master"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "repository_creation": {
      "type": "object",
      "required": [
        "id",
        "bucket_name"
      ],
      "properties": {
        "bucket_name": {
          "type": "string"
        },
        "default_branch": {
          "type": "string",
          "example": "master"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "revert_creation": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "commit": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "OBJECT",
            "TREE",
            "COMMIT",
            "RESET"
          ]
        }
      }
    },
    "user": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    }
  },
  "responses": {
    "Unauthorized": {
      "description": "Unauthorized",
      "schema": {
        "$ref": "#/definitions/error"
      }
    }
  },
  "securityDefinitions": {
    "basic_auth": {
      "type": "basic"
    },
    "download_token": {
      "type": "apiKey",
      "name": "token",
      "in": "query"
    }
  },
  "security": [
    {
      "basic_auth": []
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "lakeFS HTTP API",
    "title": "lakeFS API",
    "version": "0.1.0"
  },
  "basePath": "/api/v1",
  "paths": {
    "/authentication": {
      "get": {
        "tags": [
          "authentication"
        ],
        "responses": {
          "200": {
            "description": "authentication successful",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "$ref": "#/definitions/user"
                }
              }
            }
          }
        }
      }
    },
    "/repositories": {
      "get": {
        "tags": [
          "repositories"
        ],
        "summary": "list repositories",
        "operationId": "listRepositories",
        "parameters": [
          {
            "type": "string",
            "name": "after",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "amount",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "repository list",
            "schema": {
              "type": "object",
              "properties": {
                "pagination": {
                  "$ref": "#/definitions/pagination"
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/repository"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "repositories"
        ],
        "summary": "create repository",
        "operationId": "createRepository",
        "parameters": [
          {
            "name": "repository",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/repository_creation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "repository",
            "schema": {
              "$ref": "#/definitions/repository"
            }
          },
          "400": {
            "description": "validation error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/repositories/{repositoryId}": {
      "get": {
        "tags": [
          "repositories"
        ],
        "summary": "get repository",
        "operationId": "getRepository",
        "responses": {
          "200": {
            "description": "repository",
            "schema": {
              "$ref": "#/definitions/repository"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "repository not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "repositories"
        ],
        "summary": "delete repository",
        "operationId": "deleteRepository",
        "responses": {
          "204": {
            "description": "repository deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "repository not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "repositoryId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/repositories/{repositoryId}/branches": {
      "get": {
        "tags": [
          "branches"
        ],
        "summary": "list branches",
        "operationId": "listBranches",
        "parameters": [
          {
            "type": "string",
            "name": "after",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "amount",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "branch list",
            "schema": {
              "type": "object",
              "properties": {
                "pagination": {
                  "$ref": "#/definitions/pagination"
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ref"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "branches"
        ],
        "summary": "create branch",
        "operationId": "createBranch",
        "parameters": [
          {
            "name": "branch",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/branch_creation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "branch",
            "schema": {
              "$ref": "#/definitions/ref"
            }
          },
          "400": {
            "description": "validation error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "repositoryId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/repositories/{repositoryId}/branches/{branchId}": {
      "get": {
        "tags": [
          "branches"
        ],
        "summary": "get branch",
        "operationId": "getBranch",
        "responses": {
          "200": {
            "description": "branch",
            "schema": {
              "$ref": "#/definitions/ref"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "branch not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "branches"
        ],
        "summary": "revert branch",
        "operationId": "revertBranch",
        "parameters": [
          {
            "description": "revert parameters",
            "name": "revert",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/revert_creation"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "reverted"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "commit/branch not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "branches"
        ],
        "summary": "delete branch",
        "operationId": "deleteBranch",
        "responses": {
          "204": {
            "description": "branch deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "branch not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "repositoryId",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "name": "branchId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/repositories/{repositoryId}/branches/{branchId}/commits": {
      "get": {
        "tags": [
          "commits"
        ],
        "summary": "get commit log for branch",
        "operationId": "getBranchCommitLog",
        "responses": {
          "200": {
            "description": "commit log",
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/commit"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "description": "Unauthorized",
              "schema": {
                "$ref": "#/definitions/error"
              }
            }
          },
          "404": {
            "description": "branch not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "commits"
        ],
        "summary": "create commit",
        "operationId": "commit",
        "parameters": [
          {
            "name": "commit",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/commit_creation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "commit",
            "schema": {
              "$ref": "#/definitions/commit"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "branch not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "repositoryId",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "name": "branchId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/repositories/{repositoryId}/branches/{branchId}/diff": {
      "get": {
        "tags": [
          "branches"
        ],
        "summary": "diff branch",
        "operationId": "diffBranch",
        "responses": {
          "200": {
            "description": "diff of branch uncommitted changes",
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/diff"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "description": "Unauthorized",
              "schema": {
                "$ref": "#/definitions/error"
              }
            }
          },
          "404": {
            "description": "branch not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "repositoryId",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "name": "branchId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/repositories/{repositoryId}/branches/{branchId}/objects": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "objects"
        ],
        "summary": "upload object content",
        "operationId": "uploadObject",
        "parameters": [
          {
            "type": "file",
            "description": "Object content to upload",
            "name": "content",
            "in": "formData"
          }
        ],
        "responses": {
          "201": {
            "description": "object metadata",
            "schema": {
              "$ref": "#/definitions/object_stats"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "repository or branch not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "objects"
        ],
        "summary": "delete object",
        "operationId": "deleteObject",
        "responses": {
          "204": {
            "description": "object deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "path or branch not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "repositoryId",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "name": "branchId",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "name": "path",
          "in": "query",
          "required": true
        }
      ]
    },
    "/repositories/{repositoryId}/commits/{commitId}": {
      "get": {
        "tags": [
          "commits"
        ],
        "summary": "get commit",
        "operationId": "getCommit",
        "responses": {
          "200": {
            "description": "commit",
            "schema": {
              "$ref": "#/definitions/commit"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "commit not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "repositoryId",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "name": "commitId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/repositories/{repositoryId}/refs/{leftRef}/diff/{rightRef}": {
      "get": {
        "tags": [
          "refs"
        ],
        "summary": "diff references",
        "operationId": "diffRefs",
        "responses": {
          "200": {
            "description": "diff between refs",
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/diff"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "description": "Unauthorized",
              "schema": {
                "$ref": "#/definitions/error"
              }
            }
          },
          "404": {
            "description": "branch not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "repositoryId",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "a reference (could be either a branch ID or a commit ID)",
          "name": "leftRef",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "a reference (could be either a branch ID or a commit ID) to compare against",
          "name": "rightRef",
          "in": "path",
          "required": true
        }
      ]
    },
    "/repositories/{repositoryId}/refs/{ref}/objects": {
      "get": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "download_token": []
          }
        ],
        "produces": [
          "application/octet-stream"
        ],
        "tags": [
          "objects"
        ],
        "summary": "get object content",
        "operationId": "getObject",
        "responses": {
          "200": {
            "description": "object content",
            "schema": {
              "type": "file"
            },
            "headers": {
              "Content-Disposition": {
                "type": "string"
              },
              "Content-Length": {
                "type": "integer",
                "format": "int64"
              },
              "ETag": {
                "type": "string"
              },
              "Last-Modified": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "path or ref not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "repositoryId",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "a reference (could be either a branch ID or a commit ID)",
          "name": "ref",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "name": "path",
          "in": "query",
          "required": true
        }
      ]
    },
    "/repositories/{repositoryId}/refs/{ref}/objects/ls": {
      "get": {
        "tags": [
          "objects"
        ],
        "summary": "list objects under a given tree",
        "operationId": "listObjects",
        "responses": {
          "200": {
            "description": "entry list",
            "schema": {
              "type": "object",
              "properties": {
                "pagination": {
                  "$ref": "#/definitions/pagination"
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/object_stats"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "tree or branch not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "repositoryId",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "a reference (could be either a branch ID or a commit ID)",
          "name": "ref",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "name": "tree",
          "in": "query"
        },
        {
          "type": "string",
          "name": "after",
          "in": "query"
        },
        {
          "type": "integer",
          "name": "amount",
          "in": "query"
        }
      ]
    },
    "/repositories/{repositoryId}/refs/{ref}/objects/stat": {
      "get": {
        "tags": [
          "objects"
        ],
        "summary": "get object metadata",
        "operationId": "statObject",
        "responses": {
          "200": {
            "description": "object metadata",
            "schema": {
              "$ref": "#/definitions/object_stats"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "path or branch not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "repositoryId",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "a reference (could be either a branch ID or a commit ID)",
          "name": "ref",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "name": "path",
          "in": "query",
          "required": true
        }
      ]
    }
  },
  "definitions": {
    "branch_creation": {
      "type": "object",
      "required": [
        "id",
        "sourceRefId"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "sourceRefId": {
          "type": "string"
        }
      }
    },
    "commit": {
      "type": "object",
      "properties": {
        "committer": {
          "type": "string"
        },
        "creation_date": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "parents": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "commit_creation": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "diff": {
      "type": "object",
      "properties": {
        "direction": {
          "type": "string",
          "enum": [
            "LEFT",
            "RIGHT",
            "CONFLICT"
          ]
        },
        "path": {
          "type": "string"
        },
        "path_type": {
          "type": "string",
          "enum": [
            "TREE",
            "OBJECT"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "ADDED",
            "REMOVED",
            "CHANGED"
          ]
        }
      }
    },
    "error": {
      "type": "object",
      "properties": {
        "message": {
          "description": "short message explaining the error",
          "type": "string"
        }
      }
    },
    "object_stats": {
      "type": "object",
      "properties": {
        "checksum": {
          "type": "string"
        },
        "mtime": {
          "type": "integer",
          "format": "int64"
        },
        "path": {
          "type": "string"
        },
        "path_type": {
          "type": "string",
          "enum": [
            "TREE",
            "OBJECT"
          ]
        },
        "size_bytes": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "pagination": {
      "type": "object",
      "required": [
        "has_more"
      ],
      "properties": {
        "has_more": {
          "type": "boolean"
        },
        "max_per_page": {
          "type": "integer",
          "minimum": 0
        },
        "next_offset": {
          "type": "string"
        },
        "results": {
          "type": "integer",
          "minimum": 0
        }
      }
    },
    "ref": {
      "type": "object",
      "required": [
        "id",
        "commit_id"
      ],
      "properties": {
        "commit_id": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "repository": {
      "type": "object",
      "properties": {
        "bucket_name": {
          "type": "string"
        },
        "creation_date": {
          "type": "integer",
          "format": "int64"
        },
        "default_branch": {
          "type": "string",
          "example": "master"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "repository_creation": {
      "type": "object",
      "required": [
        "id",
        "bucket_name"
      ],
      "properties": {
        "bucket_name": {
          "type": "string"
        },
        "default_branch": {
          "type": "string",
          "example": "master"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "revert_creation": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "commit": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "OBJECT",
            "TREE",
            "COMMIT",
            "RESET"
          ]
        }
      }
    },
    "user": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    }
  },
  "responses": {
    "Unauthorized": {
      "description": "Unauthorized",
      "schema": {
        "$ref": "#/definitions/error"
      }
    }
  },
  "securityDefinitions": {
    "basic_auth": {
      "type": "basic"
    },
    "download_token": {
      "type": "apiKey",
      "name": "token",
      "in": "query"
    }
  },
  "security": [
    {
      "basic_auth": []
    }
  ]
}`))
}
