// Code generated by go-swagger; DO NOT EDIT.

package refs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/treeverse/lakefs/api/gen/models"
)

// DiffRefsOKCode is the HTTP code returned for type DiffRefsOK
const DiffRefsOKCode int = 200

/*DiffRefsOK diff between refs

swagger:response diffRefsOK
*/
type DiffRefsOK struct {

	/*
	  In: Body
	*/
	Payload *DiffRefsOKBody `json:"body,omitempty"`
}

// NewDiffRefsOK creates DiffRefsOK with default headers values
func NewDiffRefsOK() *DiffRefsOK {

	return &DiffRefsOK{}
}

// WithPayload adds the payload to the diff refs o k response
func (o *DiffRefsOK) WithPayload(payload *DiffRefsOKBody) *DiffRefsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the diff refs o k response
func (o *DiffRefsOK) SetPayload(payload *DiffRefsOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DiffRefsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DiffRefsUnauthorizedCode is the HTTP code returned for type DiffRefsUnauthorized
const DiffRefsUnauthorizedCode int = 401

/*DiffRefsUnauthorized Unauthorized

swagger:response diffRefsUnauthorized
*/
type DiffRefsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewDiffRefsUnauthorized creates DiffRefsUnauthorized with default headers values
func NewDiffRefsUnauthorized() *DiffRefsUnauthorized {

	return &DiffRefsUnauthorized{}
}

// WithPayload adds the payload to the diff refs unauthorized response
func (o *DiffRefsUnauthorized) WithPayload(payload interface{}) *DiffRefsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the diff refs unauthorized response
func (o *DiffRefsUnauthorized) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DiffRefsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// DiffRefsNotFoundCode is the HTTP code returned for type DiffRefsNotFound
const DiffRefsNotFoundCode int = 404

/*DiffRefsNotFound branch not found

swagger:response diffRefsNotFound
*/
type DiffRefsNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDiffRefsNotFound creates DiffRefsNotFound with default headers values
func NewDiffRefsNotFound() *DiffRefsNotFound {

	return &DiffRefsNotFound{}
}

// WithPayload adds the payload to the diff refs not found response
func (o *DiffRefsNotFound) WithPayload(payload *models.Error) *DiffRefsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the diff refs not found response
func (o *DiffRefsNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DiffRefsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*DiffRefsDefault generic error response

swagger:response diffRefsDefault
*/
type DiffRefsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDiffRefsDefault creates DiffRefsDefault with default headers values
func NewDiffRefsDefault(code int) *DiffRefsDefault {
	if code <= 0 {
		code = 500
	}

	return &DiffRefsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the diff refs default response
func (o *DiffRefsDefault) WithStatusCode(code int) *DiffRefsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the diff refs default response
func (o *DiffRefsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the diff refs default response
func (o *DiffRefsDefault) WithPayload(payload *models.Error) *DiffRefsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the diff refs default response
func (o *DiffRefsDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DiffRefsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
