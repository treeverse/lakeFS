// Code generated by go-swagger; DO NOT EDIT.

package branches

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/treeverse/lakefs/api/gen/models"
)

// GetBranchOKCode is the HTTP code returned for type GetBranchOK
const GetBranchOKCode int = 200

/*GetBranchOK branch

swagger:response getBranchOK
*/
type GetBranchOK struct {

	/*
	  In: Body
	*/
	Payload *models.Ref `json:"body,omitempty"`
}

// NewGetBranchOK creates GetBranchOK with default headers values
func NewGetBranchOK() *GetBranchOK {

	return &GetBranchOK{}
}

// WithPayload adds the payload to the get branch o k response
func (o *GetBranchOK) WithPayload(payload *models.Ref) *GetBranchOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get branch o k response
func (o *GetBranchOK) SetPayload(payload *models.Ref) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetBranchOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetBranchUnauthorizedCode is the HTTP code returned for type GetBranchUnauthorized
const GetBranchUnauthorizedCode int = 401

/*GetBranchUnauthorized Unauthorized

swagger:response getBranchUnauthorized
*/
type GetBranchUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetBranchUnauthorized creates GetBranchUnauthorized with default headers values
func NewGetBranchUnauthorized() *GetBranchUnauthorized {

	return &GetBranchUnauthorized{}
}

// WithPayload adds the payload to the get branch unauthorized response
func (o *GetBranchUnauthorized) WithPayload(payload *models.Error) *GetBranchUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get branch unauthorized response
func (o *GetBranchUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetBranchUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetBranchNotFoundCode is the HTTP code returned for type GetBranchNotFound
const GetBranchNotFoundCode int = 404

/*GetBranchNotFound branch not found

swagger:response getBranchNotFound
*/
type GetBranchNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetBranchNotFound creates GetBranchNotFound with default headers values
func NewGetBranchNotFound() *GetBranchNotFound {

	return &GetBranchNotFound{}
}

// WithPayload adds the payload to the get branch not found response
func (o *GetBranchNotFound) WithPayload(payload *models.Error) *GetBranchNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get branch not found response
func (o *GetBranchNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetBranchNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetBranchDefault generic error response

swagger:response getBranchDefault
*/
type GetBranchDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetBranchDefault creates GetBranchDefault with default headers values
func NewGetBranchDefault(code int) *GetBranchDefault {
	if code <= 0 {
		code = 500
	}

	return &GetBranchDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get branch default response
func (o *GetBranchDefault) WithStatusCode(code int) *GetBranchDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get branch default response
func (o *GetBranchDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get branch default response
func (o *GetBranchDefault) WithPayload(payload *models.Error) *GetBranchDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get branch default response
func (o *GetBranchDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetBranchDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
