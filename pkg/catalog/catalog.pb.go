// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: catalog/catalog.proto

package catalog

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Entry_AddressType int32

const (
	// Deprecated.
	// Unknown address type (should only exist for old commits)
	// is resolved (to Relative or Full) by the prefix of the address.
	Entry_BY_PREFIX_DEPRECATED Entry_AddressType = 0
	Entry_RELATIVE             Entry_AddressType = 1
	Entry_FULL                 Entry_AddressType = 2
)

// Enum value maps for Entry_AddressType.
var (
	Entry_AddressType_name = map[int32]string{
		0: "BY_PREFIX_DEPRECATED",
		1: "RELATIVE",
		2: "FULL",
	}
	Entry_AddressType_value = map[string]int32{
		"BY_PREFIX_DEPRECATED": 0,
		"RELATIVE":             1,
		"FULL":                 2,
	}
)

func (x Entry_AddressType) Enum() *Entry_AddressType {
	p := new(Entry_AddressType)
	*p = x
	return p
}

func (x Entry_AddressType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Entry_AddressType) Descriptor() protoreflect.EnumDescriptor {
	return file_catalog_catalog_proto_enumTypes[0].Descriptor()
}

func (Entry_AddressType) Type() protoreflect.EnumType {
	return &file_catalog_catalog_proto_enumTypes[0]
}

func (x Entry_AddressType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Entry_AddressType.Descriptor instead.
func (Entry_AddressType) EnumDescriptor() ([]byte, []int) {
	return file_catalog_catalog_proto_rawDescGZIP(), []int{0, 0}
}

type Entry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	LastModified  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=last_modified,json=lastModified,proto3" json:"last_modified,omitempty"`
	Size          int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	ETag          string                 `protobuf:"bytes,4,opt,name=e_tag,json=eTag,proto3" json:"e_tag,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	AddressType   Entry_AddressType      `protobuf:"varint,6,opt,name=address_type,json=addressType,proto3,enum=catalog.Entry_AddressType" json:"address_type,omitempty"`
	ContentType   string                 `protobuf:"bytes,7,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Entry) Reset() {
	*x = Entry{}
	mi := &file_catalog_catalog_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entry) ProtoMessage() {}

func (x *Entry) ProtoReflect() protoreflect.Message {
	mi := &file_catalog_catalog_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entry.ProtoReflect.Descriptor instead.
func (*Entry) Descriptor() ([]byte, []int) {
	return file_catalog_catalog_proto_rawDescGZIP(), []int{0}
}

func (x *Entry) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Entry) GetLastModified() *timestamppb.Timestamp {
	if x != nil {
		return x.LastModified
	}
	return nil
}

func (x *Entry) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Entry) GetETag() string {
	if x != nil {
		return x.ETag
	}
	return ""
}

func (x *Entry) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Entry) GetAddressType() Entry_AddressType {
	if x != nil {
		return x.AddressType
	}
	return Entry_BY_PREFIX_DEPRECATED
}

func (x *Entry) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

// Task is a generic task status message
type Task struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Done          bool                   `protobuf:"varint,2,opt,name=done,proto3" json:"done,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Progress      int64                  `protobuf:"varint,4,opt,name=progress,proto3" json:"progress,omitempty"`
	Error         string                 `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_catalog_catalog_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_catalog_catalog_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_catalog_catalog_proto_rawDescGZIP(), []int{1}
}

func (x *Task) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Task) GetDone() bool {
	if x != nil {
		return x.Done
	}
	return false
}

func (x *Task) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Task) GetProgress() int64 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *Task) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// RepositoryDumpInfo holds the metarange IDs for a repository dump
type RepositoryDumpInfo struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	CommitsMetarangeId  string                 `protobuf:"bytes,1,opt,name=commits_metarange_id,json=commitsMetarangeId,proto3" json:"commits_metarange_id,omitempty"`
	TagsMetarangeId     string                 `protobuf:"bytes,2,opt,name=tags_metarange_id,json=tagsMetarangeId,proto3" json:"tags_metarange_id,omitempty"`
	BranchesMetarangeId string                 `protobuf:"bytes,3,opt,name=branches_metarange_id,json=branchesMetarangeId,proto3" json:"branches_metarange_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *RepositoryDumpInfo) Reset() {
	*x = RepositoryDumpInfo{}
	mi := &file_catalog_catalog_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepositoryDumpInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepositoryDumpInfo) ProtoMessage() {}

func (x *RepositoryDumpInfo) ProtoReflect() protoreflect.Message {
	mi := &file_catalog_catalog_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepositoryDumpInfo.ProtoReflect.Descriptor instead.
func (*RepositoryDumpInfo) Descriptor() ([]byte, []int) {
	return file_catalog_catalog_proto_rawDescGZIP(), []int{2}
}

func (x *RepositoryDumpInfo) GetCommitsMetarangeId() string {
	if x != nil {
		return x.CommitsMetarangeId
	}
	return ""
}

func (x *RepositoryDumpInfo) GetTagsMetarangeId() string {
	if x != nil {
		return x.TagsMetarangeId
	}
	return ""
}

func (x *RepositoryDumpInfo) GetBranchesMetarangeId() string {
	if x != nil {
		return x.BranchesMetarangeId
	}
	return ""
}

// RepositoryDumpStatus holds the status of a repository dump
type RepositoryDumpStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Task          *Task                  `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	Info          *RepositoryDumpInfo    `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RepositoryDumpStatus) Reset() {
	*x = RepositoryDumpStatus{}
	mi := &file_catalog_catalog_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepositoryDumpStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepositoryDumpStatus) ProtoMessage() {}

func (x *RepositoryDumpStatus) ProtoReflect() protoreflect.Message {
	mi := &file_catalog_catalog_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepositoryDumpStatus.ProtoReflect.Descriptor instead.
func (*RepositoryDumpStatus) Descriptor() ([]byte, []int) {
	return file_catalog_catalog_proto_rawDescGZIP(), []int{3}
}

func (x *RepositoryDumpStatus) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *RepositoryDumpStatus) GetInfo() *RepositoryDumpInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// RepositoryRestoreStatus holds the status of a repository restore
type RepositoryRestoreStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Task          *Task                  `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RepositoryRestoreStatus) Reset() {
	*x = RepositoryRestoreStatus{}
	mi := &file_catalog_catalog_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepositoryRestoreStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepositoryRestoreStatus) ProtoMessage() {}

func (x *RepositoryRestoreStatus) ProtoReflect() protoreflect.Message {
	mi := &file_catalog_catalog_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepositoryRestoreStatus.ProtoReflect.Descriptor instead.
func (*RepositoryRestoreStatus) Descriptor() ([]byte, []int) {
	return file_catalog_catalog_proto_rawDescGZIP(), []int{4}
}

func (x *RepositoryRestoreStatus) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

// TaskMsg described generic message with Task field
// used for all status messages and for cleanup messages
type TaskMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Task          *Task                  `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskMsg) Reset() {
	*x = TaskMsg{}
	mi := &file_catalog_catalog_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskMsg) ProtoMessage() {}

func (x *TaskMsg) ProtoReflect() protoreflect.Message {
	mi := &file_catalog_catalog_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskMsg.ProtoReflect.Descriptor instead.
func (*TaskMsg) Descriptor() ([]byte, []int) {
	return file_catalog_catalog_proto_rawDescGZIP(), []int{5}
}

func (x *TaskMsg) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

var File_catalog_catalog_proto protoreflect.FileDescriptor

const file_catalog_catalog_proto_rawDesc = "" +
	"\n" +
	"\x15catalog/catalog.proto\x12\acatalog\x1a\x1fgoogle/protobuf/timestamp.proto\"\xa5\x03\n" +
	"\x05Entry\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12?\n" +
	"\rlast_modified\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\flastModified\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x03R\x04size\x12\x13\n" +
	"\x05e_tag\x18\x04 \x01(\tR\x04eTag\x128\n" +
	"\bmetadata\x18\x05 \x03(\v2\x1c.catalog.Entry.MetadataEntryR\bmetadata\x12=\n" +
	"\faddress_type\x18\x06 \x01(\x0e2\x1a.catalog.Entry.AddressTypeR\vaddressType\x12!\n" +
	"\fcontent_type\x18\a \x01(\tR\vcontentType\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"?\n" +
	"\vAddressType\x12\x18\n" +
	"\x14BY_PREFIX_DEPRECATED\x10\x00\x12\f\n" +
	"\bRELATIVE\x10\x01\x12\b\n" +
	"\x04FULL\x10\x02\"\x97\x01\n" +
	"\x04Task\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04done\x18\x02 \x01(\bR\x04done\x129\n" +
	"\n" +
	"updated_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x1a\n" +
	"\bprogress\x18\x04 \x01(\x03R\bprogress\x12\x14\n" +
	"\x05error\x18\x05 \x01(\tR\x05error\"\xa6\x01\n" +
	"\x12RepositoryDumpInfo\x120\n" +
	"\x14commits_metarange_id\x18\x01 \x01(\tR\x12commitsMetarangeId\x12*\n" +
	"\x11tags_metarange_id\x18\x02 \x01(\tR\x0ftagsMetarangeId\x122\n" +
	"\x15branches_metarange_id\x18\x03 \x01(\tR\x13branchesMetarangeId\"j\n" +
	"\x14RepositoryDumpStatus\x12!\n" +
	"\x04task\x18\x01 \x01(\v2\r.catalog.TaskR\x04task\x12/\n" +
	"\x04info\x18\x02 \x01(\v2\x1b.catalog.RepositoryDumpInfoR\x04info\"<\n" +
	"\x17RepositoryRestoreStatus\x12!\n" +
	"\x04task\x18\x01 \x01(\v2\r.catalog.TaskR\x04task\",\n" +
	"\aTaskMsg\x12!\n" +
	"\x04task\x18\x01 \x01(\v2\r.catalog.TaskR\x04taskB$Z\"github.com/treevese/lakefs/catalogb\x06proto3"

var (
	file_catalog_catalog_proto_rawDescOnce sync.Once
	file_catalog_catalog_proto_rawDescData []byte
)

func file_catalog_catalog_proto_rawDescGZIP() []byte {
	file_catalog_catalog_proto_rawDescOnce.Do(func() {
		file_catalog_catalog_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_catalog_catalog_proto_rawDesc), len(file_catalog_catalog_proto_rawDesc)))
	})
	return file_catalog_catalog_proto_rawDescData
}

var file_catalog_catalog_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_catalog_catalog_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_catalog_catalog_proto_goTypes = []any{
	(Entry_AddressType)(0),          // 0: catalog.Entry.AddressType
	(*Entry)(nil),                   // 1: catalog.Entry
	(*Task)(nil),                    // 2: catalog.Task
	(*RepositoryDumpInfo)(nil),      // 3: catalog.RepositoryDumpInfo
	(*RepositoryDumpStatus)(nil),    // 4: catalog.RepositoryDumpStatus
	(*RepositoryRestoreStatus)(nil), // 5: catalog.RepositoryRestoreStatus
	(*TaskMsg)(nil),                 // 6: catalog.TaskMsg
	nil,                             // 7: catalog.Entry.MetadataEntry
	(*timestamppb.Timestamp)(nil),   // 8: google.protobuf.Timestamp
}
var file_catalog_catalog_proto_depIdxs = []int32{
	8, // 0: catalog.Entry.last_modified:type_name -> google.protobuf.Timestamp
	7, // 1: catalog.Entry.metadata:type_name -> catalog.Entry.MetadataEntry
	0, // 2: catalog.Entry.address_type:type_name -> catalog.Entry.AddressType
	8, // 3: catalog.Task.updated_at:type_name -> google.protobuf.Timestamp
	2, // 4: catalog.RepositoryDumpStatus.task:type_name -> catalog.Task
	3, // 5: catalog.RepositoryDumpStatus.info:type_name -> catalog.RepositoryDumpInfo
	2, // 6: catalog.RepositoryRestoreStatus.task:type_name -> catalog.Task
	2, // 7: catalog.TaskMsg.task:type_name -> catalog.Task
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_catalog_catalog_proto_init() }
func file_catalog_catalog_proto_init() {
	if File_catalog_catalog_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_catalog_catalog_proto_rawDesc), len(file_catalog_catalog_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_catalog_catalog_proto_goTypes,
		DependencyIndexes: file_catalog_catalog_proto_depIdxs,
		EnumInfos:         file_catalog_catalog_proto_enumTypes,
		MessageInfos:      file_catalog_catalog_proto_msgTypes,
	}.Build()
	File_catalog_catalog_proto = out.File
	file_catalog_catalog_proto_goTypes = nil
	file_catalog_catalog_proto_depIdxs = nil
}
