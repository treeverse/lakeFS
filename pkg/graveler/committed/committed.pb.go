// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: graveler/committed/committed.proto

package committed

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RangeData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// First key of range, must be >= key of range in SSTable.  If missing, == key of range in SSTable.
	MinKey        []byte `protobuf:"bytes,1,opt,name=min_key,json=minKey,proto3" json:"min_key,omitempty"`
	MaxKey        []byte `protobuf:"bytes,2,opt,name=max_key,json=maxKey,proto3" json:"max_key,omitempty"`
	EstimatedSize uint64 `protobuf:"varint,3,opt,name=estimated_size,json=estimatedSize,proto3" json:"estimated_size,omitempty"`
	Count         int64  `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RangeData) Reset() {
	*x = RangeData{}
	mi := &file_graveler_committed_committed_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RangeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeData) ProtoMessage() {}

func (x *RangeData) ProtoReflect() protoreflect.Message {
	mi := &file_graveler_committed_committed_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeData.ProtoReflect.Descriptor instead.
func (*RangeData) Descriptor() ([]byte, []int) {
	return file_graveler_committed_committed_proto_rawDescGZIP(), []int{0}
}

func (x *RangeData) GetMinKey() []byte {
	if x != nil {
		return x.MinKey
	}
	return nil
}

func (x *RangeData) GetMaxKey() []byte {
	if x != nil {
		return x.MaxKey
	}
	return nil
}

func (x *RangeData) GetEstimatedSize() uint64 {
	if x != nil {
		return x.EstimatedSize
	}
	return 0
}

func (x *RangeData) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_graveler_committed_committed_proto protoreflect.FileDescriptor

const file_graveler_committed_committed_proto_rawDesc = "" +
	"\n" +
	"\"graveler/committed/committed.proto\x12\tcommitted\"z\n" +
	"\tRangeData\x12\x17\n" +
	"\amin_key\x18\x01 \x01(\fR\x06minKey\x12\x17\n" +
	"\amax_key\x18\x02 \x01(\fR\x06maxKey\x12%\n" +
	"\x0eestimated_size\x18\x03 \x01(\x04R\restimatedSize\x12\x14\n" +
	"\x05count\x18\x04 \x01(\x03R\x05countB0Z.github.com/treeverse/lakefs/graveler/committedb\x06proto3"

var (
	file_graveler_committed_committed_proto_rawDescOnce sync.Once
	file_graveler_committed_committed_proto_rawDescData []byte
)

func file_graveler_committed_committed_proto_rawDescGZIP() []byte {
	file_graveler_committed_committed_proto_rawDescOnce.Do(func() {
		file_graveler_committed_committed_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_graveler_committed_committed_proto_rawDesc), len(file_graveler_committed_committed_proto_rawDesc)))
	})
	return file_graveler_committed_committed_proto_rawDescData
}

var file_graveler_committed_committed_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_graveler_committed_committed_proto_goTypes = []any{
	(*RangeData)(nil), // 0: committed.RangeData
}
var file_graveler_committed_committed_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_graveler_committed_committed_proto_init() }
func file_graveler_committed_committed_proto_init() {
	if File_graveler_committed_committed_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_graveler_committed_committed_proto_rawDesc), len(file_graveler_committed_committed_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_graveler_committed_committed_proto_goTypes,
		DependencyIndexes: file_graveler_committed_committed_proto_depIdxs,
		MessageInfos:      file_graveler_committed_committed_proto_msgTypes,
	}.Build()
	File_graveler_committed_committed_proto = out.File
	file_graveler_committed_committed_proto_goTypes = nil
	file_graveler_committed_committed_proto_depIdxs = nil
}
