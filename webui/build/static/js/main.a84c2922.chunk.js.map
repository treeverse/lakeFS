{"version":3,"sources":["lib/api/index.js","lib/hooks/router.js","lib/hooks/api.js","lib/hooks/user.js","lib/components/nav.js","lib/components/navbar.js","lib/components/layout.js","lib/components/controls.js","lib/components/repositoryCreateForm.js","lib/components/pagination.js","lib/hooks/repo.js","lib/components/repository/tabs.js","lib/components/repository/layout.js","lib/components/repository/refDropdown.js","lib/components/modals.js","lib/components/repository/tree.js","pages/repositories/repository/objects.js","lib/components/repository/changes.js","pages/repositories/repository/changes.js","lib/components/repository/errors.js","pages/repositories/repository/branches.js","pages/repositories/repository/compare.js","pages/repositories/repository/commits/commit/index.js","pages/repositories/repository/commits/index.js","lib/components/repository/actions.js","pages/repositories/repository/actions/run/index.js","pages/repositories/repository/actions/index.js","pages/repositories/repository/settings.js","pages/repositories/repository/index.js","pages/repositories/index.js","lib/components/auth/layout.js","lib/components/auth/credentials.js","pages/auth/credentials.js","lib/components/auth/forms.js","lib/components/auth/nav.js","pages/auth/groups/group/members.js","pages/auth/groups/group/policies.js","pages/auth/groups/group/index.js","pages/auth/groups/index.js","pages/auth/users/user/groups.js","pages/auth/users/user/credentials.js","pages/auth/users/user/effectivePolicies.js","pages/auth/users/user/policies.js","pages/auth/users/user/index.js","pages/auth/users/index.js","lib/components/auth/policy.js","pages/auth/policies/policy.js","pages/auth/policies/index.js","pages/auth/login.js","pages/auth/index.js","pages/setup/index.js","index.js"],"names":["API_ENDPOINT","DEFAULT_LISTING_AMOUNT","cache","key","value","localStorage","getItem","JSON","parse","setItem","stringify","removeItem","json","data","qs","queryParts","parts","Object","keys","map","URLSearchParams","toString","extractError","response","a","headers","get","jsonBody","body","message","text","defaultAPIHeaders","authenticationError","apiRequest","uri","requestData","additionalHeaders","Headers","fetch","status","delete","AuthenticationError","NotFoundError","name","Error","MergeError","payload","Auth","accessKeyId","secretAccessKey","method","access_key_id","secret_access_key","userResponse","user","set","prefix","after","amount","query","userId","id","groupId","policyId","policyDocument","policy","effective","params","userIds","i","length","this","deleteUser","groupIds","deleteGroup","policyIds","deletePolicy","Repositories","repoId","encodeURIComponent","repo","Branches","branchId","source","branch","options","Objects","ref","tree","readUncommitted","path","fileObject","FormData","append","window","Commits","refId","commitId","metadata","Refs","leftRef","rightRef","sourceBranch","destinationBranch","resp","statusText","Actions","commit","runId","hookRunId","Setup","username","Config","repositories","branches","objects","commits","refs","setup","auth","actions","config","buildURL","url","generatePath","pathname","useRouter","location","useLocation","history","useHistory","result","search","entries","useQuery","useParams","route","push","initialPaginationState","loading","error","nextPage","results","useAPIWithPagination","promise","deps","useState","pagination","setPagination","useAPI","useEffect","has_more","next_offset","initialAPIState","router","request","setRequest","login","setLogin","next","execute","useUser","getCurrentUser","Link","props","component","dontPassTheseProps","linkProps","to","href","getOwnPropertyNames","filter","k","indexOf","forEach","React","forwardRef","forwardedRef","navigate","onClick","rest","target","event","ex","preventDefault","defaultPrevented","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","createElement","RouterLink","children","NavItem","active","Nav","Item","NavUserInfo","Navbar","Text","Collapse","className","NavDropdown","title","alignRight","Header","Divider","onSelect","logout","then","TopNavLink","TopNav","variant","bg","expand","Brand","src","alt","Layout","debounce","func","wait","immediate","timeout","context","args","arguments","later","apply","callNow","clearTimeout","setTimeout","useDebounce","debouncedRef","useRef","current","DebouncedFormControl","onChange","undefined","Form","Control","Loading","Alert","Na","onDismiss","msg","err","dismissible","onClose","FormattedDate","dateValue","format","moment","unix","OverlayTrigger","placement","overlay","Tooltip","ActionGroup","orientation","role","ActionsBar","LinkButton","buttonVariant","tooltip","Button","TooltipButton","size","ClipboardButton","onSuccess","icon","onError","show","setShow","copied","setCopied","setValue","handleMouseOver","handleMouseOut","node","addEventListener","removeEventListener","useHover","isHovered","currentIcon","updater","Overlay","scheduleUpdate","e","textArea","document","style","position","top","left","width","height","padding","border","outline","boxShadow","background","appendChild","focus","select","execCommand","removeChild","copyTextToClipboard","RefreshButton","DataTable","rowFn","keyFn","row","emptyState","Table","header","cell","action","buttonFn","Checkbox","onAdd","onRemove","disabled","defaultChecked","Group","Check","type","currentTarget","checked","DEFAULT_BLOCKSTORE_VALIDITY_REGEX","RegExp","RepositoryCreateForm","onSubmit","onCancel","inProgress","sm","repoValidityRegex","formValid","setFormValid","repoValid","setRepoValid","storageNamespaceValid","setStorageNamespaceValid","defaultBranchValid","setDefaultBranchValid","storageNamespaceField","defaultBranchField","repoNameField","storageNamespaceValidityRegexStr","storageNamespaceValidityRegex","storageNamespaceExample","storage_namespace","default_branch","as","Row","controlId","Label","column","Col","autoFocus","isRepoValid","test","placeholder","isStorageNamespaceValid","defaultValue","isBranchValid","md","span","offset","Paginator","onPaginate","resolveRef","RefContext","createContext","useRefs","useContext","refContextInitialState","reference","compare","RefContextProvider","refState","setRefState","comparedRef","Provider","RepositoryNavTabs","withRefContext","withRefAndPathContext","withBranchContext","RepoNav","Breadcrumb","RepositoryPageLayout","activePage","fluid","Container","BranchSelector","selected","listBranches","selectRef","withCommits","withWorkspace","initialCommitList","commitList","setCommitList","form","reset","logCommits","log","from","CommitList","getMessage","substr","Badge","BranchEntry","RefDropdown","emptyText","branchList","setBranches","useCallback","list","popover","rootClose","onHide","Popover","Content","cancelButton","ConfirmationModal","onConfirm","Modal","Title","Body","Footer","ConfirmationButton","modalVariant","btn","hide","humanSize","bytes","Math","floor","pow","toFixed","charAt","EntryRowActions","entry","onDelete","deleteConfirmMsg","Dropdown","Toggle","Menu","PathLink","link","linkToPath","download","EntryRow","showActions","rowClass","diff_type","modified","diffIndicator","entryActions","buttonText","path_type","size_bytes","mtime","fromNow","URINavigator","split","resolved","slice","currentPath","join","pathParts","part","p","GetStarted","onUpload","rel","Tree","borderless","Card","UploadButton","onDone","initialState","done","uploadState","setUploadState","textRef","fileRef","upload","files","basePath","closeButton","noGutters","currPath","lastIndexOf","currName","TreeContainer","onRefresh","refreshToken","catch","console","ObjectsBrowser","showUpload","setShowUpload","setRefreshToken","refresh","RepositoryObjectsPage","ChangeRowActions","onRevert","revertConfirmMsg","ChangeEntryRow","pathText","CommitButton","onCommit","enabled","committing","setCommitting","metadataFields","setMetadataFields","pair","alertText","repositoryId","lines","runID","m","exec","extractActionRunID","Heading","line","hookRunID","extractActionHookRunID","formatAlertText","f","RevertButton","ChangesBrowser","onSelectRef","actionError","setActionError","internalRefresh","setInternalRefresh","changes","actionErrorDisplay","revert","commitDetails","ChangesContainer","RepositoryChangesPage","BranchWidget","isDefault","deleteMsg","ListGroup","ButtonGroup","alert","commit_id","CreateBranchButton","onCreate","setDisabled","setError","defaultBranch","useMemo","selectedBranch","setSelectedBranch","sourceRef","create","BranchList","content","setRefresh","doRefresh","BranchesContainer","routerPfx","RepositoryBranchesPage","CompareList","compareReference","onSelectCompare","mergeError","setMergeError","merging","setMerging","diff","emptyDiff","verticalAlign","merge","CompareContainer","RepositoryComparePage","ChangeList","parents","CommitActions","CommitMetadataTable","CommitLink","CommitInfo","hover","committer","creation_date","cid","CommitView","CommitContainer","RepositoryCommitPage","CommitWidget","CommitsBrowser","CommitsContainer","RepositoryCommitsPage","RepositoryCommitsIndexPage","exact","ActionStatusIcon","fill","RunSummary","run","run_id","event_type","start_time","end_time","HookLog","execution","expanded","setExpanded","getRunHookOutput","hook_run_id","hook_id","duration","endTs","startTs","asSeconds","ExecutionsExplorer","executions","ActionBrowser","hooks","onSelectAction","selectedAction","hookRuns","actionNames","hookRun","sort","actionRuns","hook","b","actionName","RunContainer","Promise","all","getRun","listRunHooks","ActionContainer","RepositoryActionPage","RunRow","onFilterBranch","onFilterCommit","RunTable","runs","ActionsList","listRuns","filters","ActionsContainer","RepositoryActionsPage","RepositoryActionsIndexPage","DeleteRepositoryModal","isDisabled","setIsDisabled","SettingsContainer","showingDeleteModal","setShowDeleteModal","deletionError","setDeletionError","readOnly","RepositorySettingsPage","RepositoryPage","CreateRepositoryModal","showError","RepositoryList","toISOString","RepositoriesPage","showCreateModal","setShowCreateModal","createError","setCreateError","dependsOn","debounceFn","state","setState","dfn","newState","useDebouncedState","setPrefix","createRepo","minWidth","InputGroup","Prepend","ButtonToolbar","RepositoriesIndex","AuthLayout","activeTab","CredentialsTable","currentAccessKey","revokeError","setRevokeError","listCredentials","deleteCredentials","CredentialsShowModal","credentials","CredentialsContainer","createdKey","setCreatedKey","createCredentials","finally","CredentialsPage","AttachModal","searchFn","onAttach","addText","modalTitle","filterPlaceholder","searchPrefix","setSearchPrefix","setSelected","ent","item","pill","EntityCreateModal","idPlaceholder","idField","FormControl","UserNav","page","justify","GroupNav","UserHeader","BreadcrumbItem","GroupHeader","PolicyHeader","GroupMemberList","showAddModal","setShowAddModal","attachError","setAttachError","listGroupMembers","removeUserFromGroup","listUsers","res","addUserToGroup","GroupMembersContainer","GroupMembersPage","GroupPoliciesList","listGroupPolicies","detachPolicyFromGroup","listPolicies","attachPolicyToGroup","GroupPoliciesContainer","GroupPoliciesPage","GroupRedirect","subPath","GroupPage","GroupsContainer","deleteError","setDeleteError","showCreate","setShowCreate","listGroups","deleteGroups","g","createGroup","group","GroupsPage","GroupsIndexPage","UserGroupsList","listUserGroups","UserGroupsContainer","UserGroupsPage","UserCredentialsList","UserCredentialsContainer","UserCredentialsPage","UserEffectivePoliciesList","listUserPolicies","UserEffectivePoliciesContainer","UserEffectivePoliciesPage","UserPoliciesList","detachPolicyFromUser","attachPolicyToUser","UserPoliciesContainer","UserPoliciesPage","UserRedirect","UserPage","UsersContainer","currentUser","deleteUsers","u","createUser","UsersPage","UsersIndexPage","PolicyEditor","bodyField","setBody","statement","submit","rows","PolicyDisplay","childComponent","asJSON","resource","effect","PolicyView","jsonView","setJsonView","showEditor","setShowEditor","getPolicy","Switch","label","policyBody","editPolicy","PolicyContainer","PolicyPage","PoliciesContainer","deletePolicies","createPolicy","PoliciesPage","PoliciesIndexPage","LoginForm","loginError","setLoginError","password","LoginPage","SetupPage","usernameRef","setupError","setSetupError","setupData","setSetupData","lakeFS","downloadContent","protocol","host","taget","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a84c2922.chunk.js","sourcesContent":["export const API_ENDPOINT = '/api/v1';\nexport const DEFAULT_LISTING_AMOUNT = 100;\n\nclass LocalCache {\n    get(key) {\n        const value = localStorage.getItem(key)\n        if (value !== null)\n            return JSON.parse(value)\n        return null\n    }\n\n    set(key, value) {\n        localStorage.setItem(key, JSON.stringify(value))\n    }\n\n    delete(key) {\n        localStorage.removeItem(key)\n    }\n}\n\nconst cache = new LocalCache();\n\nexport const linkToPath = (repoId, branchId, path) => {\n    const query = qs({\n        path: path,\n    });\n    return `${API_ENDPOINT}/repositories/${repoId}/refs/${branchId}/objects?${query}`;\n};\n\nconst json =(data) => {\n    return JSON.stringify(data, null, \"\");\n};\n\nconst qs = (queryParts) => {\n    const parts = Object.keys(queryParts).map(key => [key, queryParts[key]]);\n    return new URLSearchParams(parts).toString();\n};\n\nexport const extractError = async (response) => {\n    let body;\n    if (response.headers.get('Content-Type') === 'application/json') {\n        const jsonBody = await response.json();\n        body = jsonBody.message;\n    } else {\n        body = await response.text();\n    }\n    return body;\n};\n\nexport const defaultAPIHeaders = {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n}\n\nconst authenticationError = \"error authenticating request\"\n\nconst apiRequest = async (uri, requestData = {}, additionalHeaders = {}) => {\n    const headers = new Headers({\n        ...defaultAPIHeaders,\n        ...additionalHeaders,\n    })\n    const response = await fetch(`${API_ENDPOINT}${uri}`, {headers,  ...requestData});\n\n    // check if we're missing credentials\n    if (response.status === 401) {\n        const errorMessage = await extractError(response);\n        if (errorMessage === authenticationError) {\n            cache.delete('user')\n            throw new AuthenticationError('Authentication Error');\n        }\n    }\n\n    return response;\n}\n\n// helper errors\nexport class NotFoundError extends Error {\n    constructor(message) {\n        super(message)\n        this.name = \"NotFoundError\"\n    }\n}\n\n\nexport class AuthenticationError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"AuthenticationError\"\n    }\n}\n\nexport class MergeError extends Error {\n    constructor(message, payload) {\n        super(message);\n        this.name = \"MergeError\";\n        this.payload = payload;\n    }\n}\n\n\n// actual actions:\nclass Auth {\n\n    async login(accessKeyId, secretAccessKey) {\n        const response = await fetch(`${API_ENDPOINT}/auth/login`, {\n            headers: new Headers(defaultAPIHeaders),\n            method: 'POST',\n            body: json({access_key_id: accessKeyId, secret_access_key: secretAccessKey})\n        });\n\n        if (response.status === 401) {\n            throw new AuthenticationError('invalid credentials');\n        }\n        if (response.status !== 200) {\n            throw new AuthenticationError('unknown authentication error');\n        }\n\n        // get current user and cache it\n        const userResponse = await apiRequest('/user')\n        const body = await userResponse.json();\n        const user = body.user;\n\n        cache.set('user', {...user, accessKeyId});\n        return user;\n    }\n\n    async logout() {\n        const response = await fetch(`${API_ENDPOINT}/auth/logout`, {\n            headers: new Headers(defaultAPIHeaders),\n            method: 'POST',\n        });\n        if (response.status !== 200) {\n            throw new Error('unknown authentication error');\n        }\n        cache.delete('user');\n    }\n\n    async getCurrentUser() {\n        return cache.get('user');\n    }\n\n    async listUsers(prefix = \"\", after = \"\", amount = DEFAULT_LISTING_AMOUNT) {\n        const query = qs({prefix, after, amount});\n        const response = await apiRequest(`/auth/users?${query}`);\n        if (response.status !== 200) {\n            throw new Error(`could not list users: ${await extractError(response)}`);\n        }\n        return response.json();\n    }\n\n    async createUser(userId) {\n        const response = await apiRequest(`/auth/users`, {method: 'POST', body: json({id: userId})});\n        if (response.status !== 201) {\n            throw new Error(await extractError(response));\n        }\n        return response.json();\n    }\n\n    async listGroups(prefix = \"\", after = \"\", amount = DEFAULT_LISTING_AMOUNT) {\n        const query = qs({prefix, after, amount});\n        const response = await apiRequest(`/auth/groups?${query}`);\n        if (response.status !== 200) {\n            throw new Error(`could not list groups: ${await extractError(response)}`);\n        }\n        return response.json();\n    }\n\n    async listGroupMembers(groupId, after, amount = DEFAULT_LISTING_AMOUNT) {\n        const query = qs({after, amount});\n        const response = await apiRequest(`/auth/groups/${groupId}/members?${query}`);\n        if (response.status !== 200) {\n            throw new Error(`could not list group members: ${await extractError(response)}`);\n        }\n        return response.json();\n    }\n\n    async addUserToGroup(userId, groupId) {\n        const response = await apiRequest(`/auth/groups/${groupId}/members/${userId}`, {method: 'PUT'});\n        if (response.status !== 201) {\n            throw new Error(await extractError(response));\n        }\n    }\n\n    async removeUserFromGroup(userId, groupId) {\n        const response = await apiRequest(`/auth/groups/${groupId}/members/${userId}`, {method: 'DELETE'});\n        if (response.status !== 204) {\n            throw new Error(await extractError(response));\n        }\n    }\n\n    async attachPolicyToUser(userId, policyId) {\n        const response = await apiRequest(`/auth/users/${userId}/policies/${policyId}`, {method: 'PUT'});\n        if (response.status !== 201) {\n            throw new Error(await extractError(response));\n        }\n    }\n\n    async detachPolicyFromUser(userId, policyId) {\n        const response = await apiRequest(`/auth/users/${userId}/policies/${policyId}`, {method: 'DELETE'});\n        if (response.status !== 204) {\n            throw new Error(await extractError(response));\n        }\n    }\n\n    async attachPolicyToGroup(groupId, policyId) {\n        const response = await apiRequest(`/auth/groups/${groupId}/policies/${policyId}`, {method: 'PUT'});\n        if (response.status !== 201) {\n            throw new Error(await extractError(response));\n        }\n    }\n\n    async detachPolicyFromGroup(groupId, policyId) {\n        const response = await apiRequest(`/auth/groups/${groupId}/policies/${policyId}`, {method: 'DELETE'});\n        if (response.status !== 204) {\n            throw new Error(await extractError(response));\n        }\n    }\n\n    async deleteCredentials(userId, accessKeyId) {\n        const response = await apiRequest(`/auth/users/${userId}/credentials/${accessKeyId}`, {method: 'DELETE'});\n        if (response.status !== 204) {\n            throw new Error(await extractError(response));\n        }\n    }\n\n    async createGroup(groupId) {\n        const response = await apiRequest(`/auth/groups`, {method: 'POST',  body: json({id: groupId})});\n        if (response.status !== 201) {\n            throw new Error(await extractError(response));\n        }\n        return response.json();\n    }\n\n    async listPolicies(prefix = \"\", after = \"\", amount = DEFAULT_LISTING_AMOUNT) {\n        const query = qs({prefix, after, amount});\n        const response = await apiRequest(`/auth/policies?${query}`);\n        if (response.status !== 200) {\n            throw new Error(`could not list policies: ${await extractError(response)}`);\n        }\n        return response.json();\n    }\n\n    async createPolicy(policyId, policyDocument) {\n        const policy = {id: policyId, ...JSON.parse(policyDocument)};\n        const response = await apiRequest(`/auth/policies`, {\n            method: 'POST',\n            body: json(policy)\n        });\n        if (response.status !== 201) {\n            throw new Error(await extractError(response));\n        }\n        return response.json();\n    }\n\n    async editPolicy(policyId, policyDocument) {\n        const policy = {id: policyId, ...JSON.parse(policyDocument)};\n        const response = await apiRequest(`/auth/policies/${policyId}`, {\n            method: 'PUT',\n            body: json(policy)\n        });\n        if (response.status !== 200) {\n            throw new Error(await extractError(response));\n        }\n        return response.json();\n    }\n\n    async listCredentials(userId, after, amount = DEFAULT_LISTING_AMOUNT) {\n        const query = qs({after, amount});\n        const response = await apiRequest(`/auth/users/${userId}/credentials?${query}`);\n        if (response.status !== 200) {\n            throw new Error(`could not list credentials: ${await extractError(response)}`);\n        }\n        return response.json();\n    }\n\n    async createCredentials(userId) {\n        const response = await apiRequest(`/auth/users/${userId}/credentials`, {\n            method: 'POST',\n        });\n        if (response.status !== 201) {\n            throw new Error(await extractError(response));\n        }\n        return response.json();\n    }\n\n    async listUserGroups(userId, after, amount = DEFAULT_LISTING_AMOUNT) {\n        const query = qs({after, amount});\n        const response = await apiRequest(`/auth/users/${userId}/groups?${query}`);\n        if (response.status !== 200) {\n            throw new Error(`could not list user groups: ${await extractError(response)}`);\n        }\n        return response.json();\n    }\n\n    async listUserPolicies(userId, effective = false, after = \"\", amount = DEFAULT_LISTING_AMOUNT) {\n        let params = {after, amount};\n        if (effective) {\n            params.effective =  'true'\n        }\n        const response = await apiRequest(`/auth/users/${userId}/policies?${qs(params)}`);\n        if (response.status !== 200) {\n            throw new Error(`could not list policies: ${await extractError(response)}`);\n        }\n        return response.json()\n    }\n\n    async getPolicy(policyId) {\n        const response = await apiRequest(`/auth/policies/${policyId}`);\n        if (response.status !== 200) {\n            throw new Error(`could not get policy: ${await extractError(response)}`);\n        }\n        return response.json();\n    }\n\n    async listGroupPolicies(groupId, after, amount = DEFAULT_LISTING_AMOUNT) {\n        let params = {after, amount};\n        const response = await apiRequest(`/auth/groups/${groupId}/policies?${qs(params)}`);\n        if (response.status !== 200) {\n            throw new Error(`could not list policies: ${await extractError(response)}`);\n        }\n        return response.json();\n    }\n\n    async deleteUser(userId) {\n        const response = await apiRequest(`/auth/users/${userId}`, {method: 'DELETE'});\n        if (response.status !== 204) {\n            throw new Error(await extractError(response));\n        }\n    }\n\n    async deleteUsers (userIds) {\n        for (let i = 0; i < userIds.length; i++) {\n            const userId = userIds[i];\n            await this.deleteUser(userId);\n        }\n\n    }\n\n    async deleteGroup(groupId) {\n        const response = await apiRequest(`/auth/groups/${groupId}`, {method: 'DELETE'});\n        if (response.status !== 204) {\n            throw new Error(await extractError(response));\n        }\n    }\n\n    async deleteGroups (groupIds) {\n        for (let i = 0; i < groupIds.length; i++) {\n            const groupId = groupIds[i]\n            await this.deleteGroup(groupId);\n        }\n    }\n\n    async deletePolicy(policyId) {\n        const response = await apiRequest(`/auth/policies/${policyId}`, {method: 'DELETE'});\n        if (response.status !== 204) {\n            throw new Error(await extractError(response));\n        }\n    }\n\n    async deletePolicies (policyIds) {\n        for (let i = 0; i < policyIds.length; i++) {\n            const policyId = policyIds[i];\n            await this.deletePolicy(policyId);\n        }\n    }\n}\n\nclass Repositories {\n\n    async get(repoId) {\n        const response = await apiRequest(`/repositories/${encodeURIComponent(repoId)}`);\n        if (response.status === 404) {\n            throw new NotFoundError(`could not find repository ${repoId}`);\n        } else if (response.status !== 200) {\n            throw new Error(`could not get repository: ${await extractError(response)}`);\n        }\n        return response.json();\n    }\n\n    async list(prefix = \"\", after = \"\", amount = DEFAULT_LISTING_AMOUNT) {\n        const query = qs({prefix, after, amount});\n        const response = await apiRequest(`/repositories?${query}`);\n        if (response.status !== 200) {\n            throw new Error(`could not list repositories: ${await extractError(response)}`);\n        }\n        return await response.json();\n    }\n\n    async create(repo) {\n        const response = await apiRequest('/repositories', {\n            method: 'POST',\n            body: json(repo),\n        });\n        if (response.status !== 201) {\n            throw new Error(await extractError(response));\n        }\n        return response.json();\n    }\n\n    async delete(repoId) {\n        const response = await apiRequest(`/repositories/${repoId}`, {method: 'DELETE'});\n        if (response.status !== 204) {\n            throw new Error(await extractError(response));\n        }\n    }\n}\n\nclass Branches {\n\n    async get(repoId, branchId) {\n        const response = await apiRequest(`/repositories/${repoId}/branches/${branchId}`);\n        if (response.status === 404) {\n            throw new NotFoundError(`could not find branch ${branchId}`);\n        } else if (response.status !== 200) {\n            throw new Error(`could not get branch: ${await extractError(response)}`);\n        }\n        return response.json();\n    }\n\n    async create(repoId, name, source) {\n        const response = await apiRequest(`/repositories/${repoId}/branches`, {\n            method: 'POST',\n            body: json({name, source}),\n        });\n        if (response.status !== 201) {\n            throw new Error(await extractError(response));\n        }\n        return response.json();\n    }\n\n    async delete(repoId, name) {\n        const response = await apiRequest(`/repositories/${repoId}/branches/${name}`, {\n            method: 'DELETE',\n        });\n        if (response.status !== 204) {\n            throw new Error(await extractError(response));\n        }\n    }\n\n    async revert(repoId, branch, options) {\n        const response = await apiRequest(`/repositories/${repoId}/branches/${branch}`, {\n            method: 'PUT',\n            body: json(options),\n        });\n        if (response.status !== 204) {\n            throw new Error(await extractError(response));\n        }\n    }\n\n    async list(repoId, prefix = \"\", after = \"\", amount = DEFAULT_LISTING_AMOUNT) {\n        const query = qs({prefix, after, amount});\n        const response = await apiRequest(`/repositories/${repoId}/branches?${query}`);\n        if (response.status !== 200) {\n            throw new Error(`could not list branches: ${await extractError(response)}`);\n        }\n        return response.json();\n    }\n}\n\nclass Objects {\n\n    async list(repoId, ref, tree, after = \"\", amount = DEFAULT_LISTING_AMOUNT, readUncommitted = true) {\n        const query = qs({prefix:tree, amount, after, readUncommitted});\n        const response = await apiRequest(`/repositories/${repoId}/refs/${ref}/objects/ls?${query}`);\n        if (response.status !== 200) {\n            throw new Error(await extractError(response));\n        }\n        return await response.json();\n    }\n\n    async upload(repoId, branchId, path, fileObject) {\n        const data = new FormData();\n        data.append('content', fileObject);\n        window.data = data;\n        const query = qs({path});\n        const response = await apiRequest(`/repositories/${repoId}/branches/${branchId}/objects?${query}`, {\n            method: 'POST',\n            body: data,\n            headers: new Headers({'Accept': 'application/json'})\n        });\n        if (response.status !== 201) {\n            throw new Error(await extractError(response));\n        }\n        return response.json();\n    }\n\n    async delete(repoId, branchId, path) {\n        const query = qs({path});\n        const response = await apiRequest(`/repositories/${repoId}/branches/${branchId}/objects?${query}`, {\n            method: 'DELETE',\n        });\n        if (response.status !== 204) {\n            throw new Error(await extractError(response));\n        }\n    }\n}\n\nclass Commits {\n    async log(repoId, refId, after = \"\", amount = DEFAULT_LISTING_AMOUNT) {\n        const query = qs({after, amount});\n        const response = await apiRequest(`/repositories/${repoId}/refs/${refId}/commits?${query}`);\n        if (response.status !== 200) {\n            throw new Error(await extractError(response));\n        }\n        return response.json();\n    }\n\n    async get(repoId, commitId) {\n        const response = await apiRequest(`/repositories/${repoId}/commits/${commitId}`);\n        if (response.status === 404) {\n            throw new NotFoundError(`could not find commit ${commitId}`);\n        } else if (response.status !== 200) {\n            throw new Error(`could not get commit: ${await extractError(response)}`);\n        }\n        return response.json();\n    }\n\n    async commit(repoId, branchId, message, metadata ={}) {\n        const response = await apiRequest(`/repositories/${repoId}/branches/${branchId}/commits`, {\n            method: 'POST',\n            body: json({message, metadata}),\n        });\n        if (response.status !== 201) {\n            throw new Error(await extractError(response));\n        }\n        return response.json();\n    }\n}\n\nclass Refs {\n\n    async changes(repoId, branchId, after, amount = DEFAULT_LISTING_AMOUNT) {\n        const query = qs({after, amount});\n        const response = await apiRequest(`/repositories/${repoId}/branches/${branchId}/diff?${query}`);\n        if (response.status !== 200) {\n            throw new Error(await extractError(response));\n        }\n        return response.json();\n    }\n\n    async diff(repoId, leftRef, rightRef, after, amount = DEFAULT_LISTING_AMOUNT) {\n        const query = qs({after, amount});\n        const response = await apiRequest(`/repositories/${repoId}/refs/${leftRef}/diff/${rightRef}?${query}`);\n        if (response.status !== 200) {\n            throw new Error(await extractError(response));\n        }\n        return response.json();\n    }\n\n    async merge(repoId, sourceBranch, destinationBranch) {\n        const response = await apiRequest(`/repositories/${repoId}/refs/${sourceBranch}/merge/${destinationBranch}`, {\n            method: 'POST',\n            body: '{}',\n        });\n        switch (response.status) {\n            case 200:\n                return response.json();\n            case 409:\n                const resp = await response.json();\n                throw new MergeError(response.statusText, resp.body);\n            case 412:\n            default:\n                throw new Error(await extractError(response));\n        }\n    }\n}\n\nclass Actions {\n\n    async listRuns(repoId, branch = \"\", commit = \"\", after = \"\", amount = DEFAULT_LISTING_AMOUNT) {\n        const query = qs({branch, commit, after, amount});\n        const response = await apiRequest(`/repositories/${repoId}/actions/runs?${query}`);\n        if (response.status !== 200) {\n            throw new Error(`could not list actions runs: ${await extractError(response)}`);\n        }\n        return response.json();\n    }\n\n    async getRun(repoId, runId) {\n        const response = await apiRequest(`/repositories/${repoId}/actions/runs/${runId}`);\n        if (response.status !== 200) {\n            throw new Error(`could not get actions run: ${await extractError(response)}`);\n        }\n        return response.json();\n    }\n\n    async listRunHooks(repoId, runId, after = \"\", amount = DEFAULT_LISTING_AMOUNT) {\n        const query = qs({after, amount});\n        const response = await apiRequest(`/repositories/${repoId}/actions/runs/${runId}/hooks?${query}`);\n        if (response.status !== 200) {\n            throw new Error(`could not list actions run hooks: ${await extractError(response)}`)\n        }\n        return response.json();\n    }\n\n    async getRunHookOutput(repoId, runId, hookRunId) {\n        const response = await apiRequest(`/repositories/${repoId}/actions/runs/${runId}/hooks/${hookRunId}/output`, {\n            headers: {\"Content-Type\": \"application/octet-stream\"},\n        });\n        if (response.status !== 200) {\n            throw new Error(`could not get actions run hook output: ${await extractError(response)}`);\n        }\n        return response.text();\n    }\n\n}\n\n\nclass Setup {\n    async lakeFS(username) {\n        const response = await apiRequest('/setup_lakefs', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({username: username}),\n        });\n        switch (response.status) {\n            case 200:\n                return response.json();\n            case 409:\n                throw new Error('Conflict');\n            default:\n                throw new Error('Unknown');\n        }\n    }\n}\n\nclass Config {\n    async get() {\n        const response = await apiRequest('/config', {\n            method: 'GET',\n        });\n        switch (response.status) {\n            case 200:\n                return await response.json();\n            case 409:\n                throw new Error('Conflict');\n            default:\n                throw new Error('Unknown');\n        }\n    }\n}\n\n\nexport const repositories = new Repositories();\nexport const branches = new Branches();\nexport const objects = new Objects();\nexport const commits = new Commits();\nexport const refs = new Refs();\nexport const setup = new Setup();\nexport const auth = new Auth();\nexport const actions = new Actions();\nexport const config = new Config();\n","import { useHistory, useLocation, useParams, generatePath } from \"react-router-dom\"\n\nexport const useQuery = () => {\n    const location = useLocation();\n    const result = {};\n    for(const [key, value] of (new URLSearchParams(location.search)).entries()) {\n        result[key] = value;\n    }\n    return result;\n}\n\nexport const buildURL = (url) => {\n    if (typeof url === 'string') return url;\n    // otherwise, assume query, params and pathname\n    const path = generatePath(url.pathname, (!!url.params) ? url.params : {})\n    if (!url.query) return path;\n    const query = new URLSearchParams(url.query).toString();\n    return `${path}?${query}`;\n}\n\nexport const useRouter = () => {\n    const location = useLocation();\n    const history = useHistory();\n    const query = useQuery();\n    const params = useParams();\n    return {\n        query,\n        params,\n        route: location.pathname,\n        push: (url) => history.push(buildURL(url))\n    };\n};","import {useEffect, useState} from 'react';\nimport {AuthenticationError} from \"../api\";\nimport {useRouter} from \"./router\";\n\nconst initialPaginationState = {\n    loading: true,\n    error: null,\n    nextPage: null,\n    results: []\n};\n\nexport const useAPIWithPagination = (promise, deps = []) => {\n    const [pagination, setPagination] = useState(initialPaginationState);\n\n    // do the actual API request\n    // we do this if pagination changed, or if we reset to an initial state\n    const {response, error, loading} = useAPI(() => {\n        setPagination({...initialPaginationState});\n        return promise();\n    }, [...deps, initialPaginationState]);\n\n    useEffect(() => {\n        if (loading) {\n            setPagination({results: [], loading: true});\n            return;\n        }\n\n        if (!!error || !response) {\n            setPagination({error, loading: false});\n            return;\n        }\n\n        // calculate current state on API response\n        setPagination({\n            error: null,\n            nextPage: (!!response.pagination && response.pagination.has_more) ? response.pagination.next_offset : null,\n            loading: false,\n            results: response.results\n        });\n    }, [response, loading, error]);\n\n    return pagination;\n}\n\nconst initialAPIState = {\n    loading: true,\n    error: null,\n    response: null,\n};\n\nexport const useAPI = (promise, deps = []) => {\n    const router = useRouter();\n    const [request, setRequest] = useState(initialAPIState);\n    const [ login, setLogin ] = useState(false);\n\n    useEffect(() => {\n        if (login) {\n            router.push({\n                pathname: '/auth/login',\n                query: {next: router.route}\n            });\n            setLogin(false);\n        }\n    }, [login, router])\n\n    useEffect(() => {\n        const execute = async () => {\n            setRequest(initialAPIState);\n            try {\n                const response = await promise();\n                // setResponse(response)\n                // setLoading(false)\n                setRequest({\n                    loading: false,\n                    error: null,\n                    response\n                });\n            } catch (error) {\n                if (error instanceof AuthenticationError) {\n                    setLogin(true);\n                    return;\n                }\n                setRequest({\n                    loading: false,\n                    error,\n                    response: null\n                });\n            }\n        }\n        execute();\n    /* eslint-disable react-hooks/exhaustive-deps */\n    // ozkatz: We disable exhaustive-deps because we want to have the user pass its own list of deps -\n    //  exhaustive-deps will warn about anything that isn't an array literal.\n    }, deps);\n    /* eslint-enable react-hooks/exhaustive-deps */\n    return {...request};\n}","import {useAPI} from \"./api\";\nimport {auth} from \"../api\";\n\n\nconst useUser = () => {\n    const { response, loading, error } = useAPI(() => auth.getCurrentUser(), []);\n    return { user: response, loading, error };\n}\n\nexport default useUser;\n","import React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nimport Nav from \"react-bootstrap/Nav\";\n\nimport {buildURL} from \"../hooks/router\";\n\n\nfunction isModifiedEvent(event) {\n    return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nconst wrapComponent = (component) => {\n    return React.forwardRef(({ navigate, onClick, ...rest}, forwardedRef) => {\n        const { target } = rest;\n        const props = {\n            ...rest,\n            ref: forwardedRef,\n            onClick: event => {\n                try {\n                    if (onClick) onClick(event);\n                } catch (ex) {\n                    event.preventDefault();\n                    throw ex;\n                }\n\n                if (\n                    !event.defaultPrevented && // onClick prevented default\n                    event.button === 0 && // ignore everything but left clicks\n                    (!target || target === \"_self\") && // let browser handle \"target=_blank\" etc.\n                    !isModifiedEvent(event) // ignore clicks with modifier keys\n                ) {\n                    event.preventDefault();\n                    navigate();\n                }\n            }\n        };\n        return React.createElement(component, props);\n    });\n}\n\nexport const Link = (props) => {\n    const dontPassTheseProps = ['href', 'to', 'children', 'components'];\n    const linkProps = {to: (!!props.href) ? buildURL(props.href) : props.href};\n    Object.getOwnPropertyNames(props)\n        .filter(k => dontPassTheseProps.indexOf(k) === -1)\n        .forEach(k => linkProps[k] = props[k]);\n    if (!!props.component)\n        linkProps.component = wrapComponent(props.component);\n\n    return React.createElement(RouterLink, linkProps, props.children);\n}\n\nexport const NavItem = ({ href, active, children }) => {\n    return (\n        <Nav.Item>\n            <Link href={href} component={Nav.Link} active={active}>\n                <>{children}</>\n            </Link>\n        </Nav.Item>\n    );\n};","import Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\n\nimport useUser from '../hooks/user'\nimport {auth} from \"../api\";\nimport {useRouter} from \"../hooks/router\";\nimport {Link} from \"./nav\";\n\n\nconst NavUserInfo = () => {\n    const router = useRouter();\n    const { user, loading, error } = useUser();\n    if (loading)  return <Navbar.Text>Loading...</Navbar.Text>;\n    if (!user || !!error) return (<></>);\n    return (\n        <Navbar.Collapse className=\"justify-content-end\">\n            <NavDropdown title={user.id} className=\"navbar-username\" alignRight>\n                <NavDropdown.Header>\n                    Access Key ID: <code>{user.accessKeyId}</code>\n                </NavDropdown.Header>\n\n                <NavDropdown.Divider/>\n\n                <NavDropdown.Item\n                    href=\"/auth/credentials\"\n                    onSelect={()=> router.push('/auth/credentials')}>\n                        Manage My Credentials\n                </NavDropdown.Item>\n\n                <NavDropdown.Item\n                    onSelect={()=> {\n                        auth.logout().then(() => {\n                            router.push('/auth/login')\n                        })\n                    }}>\n                    Logout\n                </NavDropdown.Item>\n            </NavDropdown>\n        </Navbar.Collapse>\n    );\n};\n\nconst TopNavLink = ({ href, children }) => {\n    const router = useRouter();\n    const isActive = (prefix) => router.route.indexOf(prefix) === 0;\n\n    return (\n        <Link component={Nav.Link} active={isActive(href)} href={href}>\n            {children}\n        </Link>\n    );\n};\n\nconst TopNav = () => {\n    return (\n        <Navbar variant=\"dark\" bg=\"dark\" expand=\"md\">\n            <Link component={Navbar.Brand} href=\"/\">\n                <img src=\"/logo.png\" alt=\"lakeFS\" className=\"logo\"/>\n            </Link>\n\n            <Nav className=\"mr-auto\">\n                <TopNavLink href=\"/repositories\">Repositories</TopNavLink>\n                <TopNavLink href=\"/auth\">Administration</TopNavLink>\n            </Nav>\n\n            <NavUserInfo/>\n        </Navbar>\n    );\n};\n\nexport default TopNav;","import TopNav from './navbar';\n\nconst Layout = ({ children }) => {\n    return (\n        <>\n            <TopNav/>\n            <div className=\"main-app\">\n                {children}\n            </div>\n        </>\n    );\n};\n\nexport default Layout;","import React, {useEffect, useRef, useState} from 'react';\nimport moment from \"moment\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Button from \"react-bootstrap/Button\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport Overlay from \"react-bootstrap/Overlay\";\nimport Table from \"react-bootstrap/Table\";\nimport {OverlayTrigger} from \"react-bootstrap\";\nimport {CheckIcon, ClippyIcon, SyncIcon} from \"@primer/octicons-react\";\nimport {Link} from \"./nav\";\n\n\nconst defaultDebounceMs = 300;\n\nexport function debounce(func, wait, immediate) {\n    let timeout;\n    return function() {\n        let context = this, args = arguments;\n        let later = function() {\n            timeout = null;\n            if (!immediate) func.apply(context, args);\n        };\n        let callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n    };\n}\n\nexport const useDebounce = (func, wait = defaultDebounceMs) => {\n    const debouncedRef = useRef(debounce(func, wait))\n    return debouncedRef.current;\n};\n\nexport const useDebouncedState = (dependsOn, debounceFn, wait = 300) => {\n    const [state, setState] = useState(dependsOn);\n    useEffect(() => setState(dependsOn), [dependsOn]);\n    const dfn = useDebounce(debounceFn, wait);\n\n    return [state, newState => {\n        setState(newState)\n        dfn(newState)\n    }];\n}\n\nexport const DebouncedFormControl = React.forwardRef((props, ref) => {\n    const onChange = debounce(props.onChange, (props.debounce !== undefined) ? props.debounce : defaultDebounceMs)\n    return (<Form.Control ref={ref} {...{...props, onChange}}/>);\n});\n\nexport const Loading = () => {\n    return (\n        <Alert variant={\"info\"}>Loading...</Alert>\n    );\n};\n\nexport const Na = () => {\n    return (\n        <span>&mdash;</span>\n    );\n};\n\nexport const Error = ({error, onDismiss = null, className = null}) => {\n    let msg = error.toString();\n    // handle wrapped errors\n    let err = error;\n    while (!!err.error) err = err.error;\n    if (!!err.message) msg = err.message;\n    if (onDismiss !== null) {\n        return <Alert className={className} variant=\"danger\" dismissible onClose={onDismiss}>{msg}</Alert>;\n    }\n    return (\n        <Alert className={className} variant=\"danger\">{msg}</Alert>\n    );\n}\n\nexport const FormattedDate = ({ dateValue, format = \"MM/DD/YYYY HH:mm:ss\" }) => {\n    if (typeof dateValue === 'number') {\n        return (\n            <span>{moment.unix(dateValue).format(format)}</span>\n        );\n    }\n\n    return (\n        <OverlayTrigger placement=\"bottom\" overlay={<Tooltip>{dateValue}</Tooltip>}>\n            <span>{moment(dateValue).format(format)}</span>\n        </OverlayTrigger>\n    );\n};\n\n\nexport const ActionGroup = ({ children, orientation = \"left\" }) => {\n    return (\n        <div role=\"toolbar\" className={`float-${orientation} mb-2 btn-toolbar`}>\n            {children}\n        </div>\n    );\n};\n\nexport const ActionsBar = ({ children }) => {\n    return (\n        <div className=\"action-bar clearfix\">\n            {children}\n        </div>\n    );\n};\n\nconst copyTextToClipboard = (text, onSuccess, onError) => {\n    const textArea = document.createElement('textarea');\n\n    //\n    // *** This styling is an extra step which is likely not required. ***\n    //\n    // Why is it here? To ensure:\n    // 1. the element is able to have focus and selection.\n    // 2. if element was to flash render it has minimal visual impact.\n    // 3. less flakyness with selection and copying which **might** occur if\n    //    the textarea element is not visible.\n    //\n    // The likelihood is the element won't even render, not even a\n    // flash, so some of these are just precautions. However in\n    // Internet Explorer the element is visible whilst the popup\n    // box asking the user for permission for the web page to\n    // copy to the clipboard.\n    //\n\n    // Place in top-left corner of screen regardless of scroll position.\n    textArea.style.position = 'fixed';\n    textArea.style.top = 0;\n    textArea.style.left = 0;\n\n    // Ensure it has a small width and height. Setting to 1px / 1em\n    // doesn't work as this gives a negative w/h on some browsers.\n    textArea.style.width = '2em';\n    textArea.style.height = '2em';\n\n    // We don't need padding, reducing the size if it does flash render.\n    textArea.style.padding = 0;\n\n    // Clean up any borders.\n    textArea.style.border = 'none';\n    textArea.style.outline = 'none';\n    textArea.style.boxShadow = 'none';\n\n    // Avoid flash of white box if rendered for any reason.\n    textArea.style.background = 'transparent';\n\n\n    textArea.value = text;\n\n    document.body.appendChild(textArea);\n    textArea.focus();\n    textArea.select();\n\n    let err = null;\n    try {\n        document.execCommand('copy');\n    } catch (e) {\n        err = e;\n    }\n\n    if (!!onSuccess && err === null) {\n        onSuccess();\n    }\n    if (!!onError && err !== null) {\n        onError(err);\n    }\n\n    document.body.removeChild(textArea);\n};\n\nexport const useHover = () => {\n    const [value, setValue] = useState(false);\n\n    const ref = useRef(null);\n\n    const handleMouseOver = () => setValue(true);\n    const handleMouseOut = () => setValue(false);\n\n    useEffect(\n        () => {\n            const node = ref.current;\n            if (node) {\n                node.addEventListener('mouseover', handleMouseOver);\n                node.addEventListener('mouseout', handleMouseOut);\n\n                return () => {\n                    node.removeEventListener('mouseover', handleMouseOver);\n                    node.removeEventListener('mouseout', handleMouseOut);\n                };\n            }\n        },\n        [ref] // Recall only if ref changes\n    );\n\n    return [ref, value];\n};\n\nexport const LinkButton = ({ href, children, buttonVariant, tooltip = null }) => {\n    if (tooltip === null) {\n        return <Link href={href} component={Button} variant={buttonVariant}>{children}</Link>\n    }\n    return (\n        <Link href={href} component={TooltipButton} tooltip={tooltip} variant={buttonVariant}>{children}</Link>\n    );\n};\n\nexport const TooltipButton = ({ onClick, variant, children, tooltip, className=\"\", size = \"sm\" }) => {\n    return (\n        <OverlayTrigger placement=\"bottom\" overlay={<Tooltip>{tooltip}</Tooltip>}>\n            <Button variant={variant} onClick={onClick} className={className} size={size}>\n                {children}\n            </Button>\n        </OverlayTrigger>\n    );\n};\n\nexport const ClipboardButton = ({ text, variant, onSuccess, icon = <ClippyIcon/>, onError, tooltip = \"Copy to clipboard\"}) => {\n\n    const [show, setShow] = useState(false);\n    const [copied, setCopied] = useState(false);\n    const [target, isHovered] = useHover();\n\n    const currentIcon = (!copied) ? icon : <CheckIcon/>;\n\n    let updater = null;\n\n    return (\n        <>\n            <Overlay\n                placement=\"bottom\"\n                show={show || isHovered}\n                target={target.current}>\n                {props => {\n                    updater = props.scheduleUpdate\n                    props.show = undefined\n                    return (<Tooltip {...props}>{tooltip}</Tooltip>)\n                }}\n            </Overlay>\n            <Button variant={variant} ref={target} onClick={(e) => {\n                setShow(false)\n                setCopied(true)\n                if (updater != null) updater()\n                setTimeout(() => {\n                    if (target.current != null) setCopied(false)\n                }, 1000);\n                copyTextToClipboard(text, onSuccess, onError);\n            }}>\n                {currentIcon}\n            </Button>\n        </>\n    );\n};\n\nexport const RefreshButton = ({ onClick, size = \"md\", variant = \"light\", tooltip = \"Refresh\", icon = <SyncIcon/> }) => {\n    return (\n        <TooltipButton\n            tooltip={tooltip}\n            variant={variant}\n            onClick={onClick}\n            size={size}>\n            {icon}\n        </TooltipButton>\n    );\n};\n\nexport const DataTable = ({ headers, results, rowFn, keyFn = (row) => row[0], actions = [], emptyState = null }) => {\n\n    if ((!results || results.length === 0) && emptyState !== null) {\n        return <Alert variant=\"warning\">{emptyState}</Alert>;\n    }\n\n    return (\n        <Table>\n            <thead>\n                <tr>\n                {headers.map(header => (\n                    <th key={header}>{header}</th>\n                ))}\n                {(!!actions && actions.length > 0) && <th/>}\n                </tr>\n            </thead>\n            <tbody>\n            {results.map(row => (\n                <tr key={keyFn(row)}>\n                    {rowFn(row).map((cell, i) => (\n                        <td key={`${keyFn(row)}-${i}`}>\n                            {cell}\n                        </td>\n                    ))}\n                    {(!!actions && actions.length > 0) && (\n                        <td>\n                            <span className=\"row-hover\">\n                                {actions.map(action => (\n                                    <span key={`${keyFn(row)}-${action.key}`}>\n                                        {action.buttonFn(row)}\n                                    </span>\n                                ))}\n                            </span>\n                        </td>\n                    )}\n                </tr>\n            ))}\n            </tbody>\n        </Table>\n    );\n};\n\nexport const Checkbox = ({ name, onAdd, onRemove, disabled = false, defaultChecked = false }) => {\n    return (\n        <Form.Group>\n            <Form.Check defaultChecked={defaultChecked} disabled={disabled} type=\"checkbox\" name={name} onChange={(e) => {\n                if (e.currentTarget.checked) {\n                    onAdd(name)\n                } else {\n                    onRemove(name)\n                }\n            }}/>\n        </Form.Group>\n    );\n};","import React, {useRef, useState} from 'react';\n\nimport Form from \"react-bootstrap/Form\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst DEFAULT_BLOCKSTORE_EXAMPLE = \"e.g. s3://example-bucket/\";\nconst DEFAULT_BLOCKSTORE_VALIDITY_REGEX = new RegExp(`^s3://`);\n\nexport const RepositoryCreateForm = ({ config, onSubmit, onCancel, error = null, inProgress = false, sm = 6 }) => {\n    const fieldNameOffset = 3;\n    const repoValidityRegex = /^[a-z0-9][a-z0-9-]{2,62}$/;\n\n    const [formValid, setFormValid] = useState(false);\n    const [repoValid, setRepoValid] = useState(true);\n\n    const [storageNamespaceValid, setStorageNamespaceValid] = useState(true);\n    const [defaultBranchValid, setDefaultBranchValid] = useState(true);\n\n    const storageNamespaceField = useRef(null);\n    const defaultBranchField = useRef(null);\n    const repoNameField = useRef(null);\n\n    const checkRepoValidity = () => {\n        const isRepoValid = repoValidityRegex.test(repoNameField.current.value);\n        setRepoValid(isRepoValid);\n        setFormValid(isRepoValid && storageNamespaceValid && defaultBranchValid);\n    };\n\n    const checkStorageNamespaceValidity = () => {\n        const isStorageNamespaceValid = storageNamespaceValidityRegex.test(storageNamespaceField.current.value)\n        setStorageNamespaceValid(isStorageNamespaceValid);\n        setFormValid(isStorageNamespaceValid && defaultBranchValid && repoValid);\n    };\n\n    const checkDefaultBranchValidity = () => {\n        const isBranchValid = defaultBranchField.current.value.length;\n        setDefaultBranchValid(isBranchValid);\n        setFormValid(isBranchValid && storageNamespaceValid && repoValid);\n    };\n\n    const storageNamespaceValidityRegexStr = config ? config['blockstore_namespace_ValidityRegex'] : DEFAULT_BLOCKSTORE_VALIDITY_REGEX;\n    const storageNamespaceValidityRegex = RegExp(storageNamespaceValidityRegexStr);\n    const storageNamespaceExample = config ? config['blockstore_namespace_example'] : DEFAULT_BLOCKSTORE_EXAMPLE;\n    return (\n        <Form className={\"mt-5\"} onSubmit={(e) => {\n            e.preventDefault();\n            if (!formValid) {\n                return;\n            }\n            onSubmit({\n                name: repoNameField.current.value,\n                storage_namespace: storageNamespaceField.current.value,\n                default_branch: defaultBranchField.current.value\n            });\n        }}>\n            <Form.Group as={Row} controlId=\"id\">\n                <Form.Label column sm={fieldNameOffset}>Repository ID</Form.Label>\n                <Col sm={sm}>\n                    <Form.Control type=\"text\" autoFocus ref={repoNameField} onChange={checkRepoValidity}/>\n                    {!repoValid &&\n                    <Form.Text className=\"text-danger\">\n                        Min 2 characters. Only lowercase alphanumeric characters and '-' allowed.\n                    </Form.Text>\n                    }\n                </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n                <Form.Label column sm={fieldNameOffset}>Storage Namespace</Form.Label>\n                <Col sm={sm}>\n                    <Form.Control type=\"text\" ref={storageNamespaceField} placeholder={storageNamespaceExample} onChange={checkStorageNamespaceValidity}/>\n                    {!storageNamespaceValid &&\n                    <Form.Text className=\"text-danger\">\n                        Invalid Storage Namespace.\n                    </Form.Text>\n                    }\n                </Col>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"defaultBranch\">\n                <Form.Label column sm={fieldNameOffset}>Default Branch</Form.Label>\n                <Col sm={sm}>\n                    <Form.Control type=\"text\" ref={defaultBranchField} placeholder=\"defaultBranch\" defaultValue={\"main\"} onChange={checkDefaultBranchValidity}/>\n                    {!defaultBranchValid &&\n                    <Form.Text className=\"text-danger\">\n                        Invalid Branch.\n                    </Form.Text>\n                    }\n                </Col>\n            </Form.Group>\n\n            {error &&\n            <Row>\n                <Col md={{span: sm, offset: fieldNameOffset}} >\n                    <Alert variant={\"danger\"}>{error.message}</Alert>\n                </Col>\n            </Row>}\n\n            <Row>\n                <Col md={{span: sm, offset: fieldNameOffset}} >\n                    <Button variant=\"success\" type=\"submit\" className=\"mr-2\" disabled={!formValid || inProgress}>\n                        { inProgress ? 'Creating...' : 'Create Repository' }\n                    </Button>\n                    <Button variant=\"secondary\" onClick={(e) => {\n                        e.preventDefault();\n                        onCancel();\n                    }}>Cancel</Button>\n                </Col>\n            </Row>\n        </Form>\n    );\n}\n\nexport default RepositoryCreateForm;","import Button from \"react-bootstrap/Button\";\nimport React from \"react\";\n\n\nexport const Paginator = ({ onPaginate, nextPage = null, after = \"\" }) => {\n    if (after === \"\" && nextPage === null) return <></>;\n    return (\n        <div className=\"paginator mt-2 mb-2\">\n\n            <Button variant=\"secondary\" disabled={(after === \"\")} onClick={() => onPaginate(\"\")}>Back to Start</Button>\n            {' '}\n\n            <Button variant=\"primary\" disabled={(nextPage === null)} onClick={() => onPaginate(nextPage)}>Next Page</Button>\n\n        </div>\n    );\n};","import {useContext, useState, createContext, useEffect} from \"react\";\n\nimport {repositories, branches, commits, NotFoundError} from \"../api\";\nimport {useRouter} from \"./router\";\n\n\nexport const resolveRef = async (repoId, refId) => {\n    // try branch\n    try {\n        const branch = await branches.get(repoId, refId);\n        return {id: branch.id, type: 'branch'};\n    } catch(error) {\n        if (!(error instanceof NotFoundError)) {\n            throw error;\n        }\n    }\n    // try commit\n    try {\n        const commit = await commits.get(repoId, refId);\n        return {id: commit.id,  type: 'commit'};\n    } catch(error) {\n        if (!(error instanceof NotFoundError)) {\n            throw error;\n        }\n    }\n\n    throw new NotFoundError('ref not found');\n};\n\n\nconst RefContext =  createContext(null);\n\nexport const useRefs = () => {\n    const [ refs ] = useContext(RefContext);\n    return refs;\n}\n\nexport const useRefsWithRefresh = () => {\n    return useContext(RefContext);\n};\n\nconst refContextInitialState = {\n    loading: true,\n    error: null,\n    repo: null,\n    reference: null,\n    compare: null\n};\n\nexport const RefContextProvider = ({ children }) => {\n    const router = useRouter();\n    const { repoId } = router.params;\n    const {ref, compare} = router.query;\n\n    const [refState, setRefState] = useState(refContextInitialState);\n\n    useEffect(() => {\n        const fetch = async () => {\n            setRefState(refContextInitialState);\n            if (!repoId) return;\n            try {\n                const repo = await repositories.get(repoId);\n                const reference = await resolveRef(repoId, (!!ref) ? ref : repo.default_branch);\n                let comparedRef = null;\n                if (!!compare) comparedRef = await resolveRef(repoId, compare);\n                setRefState({...refContextInitialState, loading: false, repo, reference, compare: comparedRef});\n            } catch (err) {\n                setRefState({...refContextInitialState, loading: false, error: err});\n            }\n        };\n        fetch();\n    }, [repoId, ref, compare]);\n\n    return (\n        <RefContext.Provider value={[refState, fetch]}>\n            {children}\n        </RefContext.Provider>\n    );\n};","import Nav from \"react-bootstrap/Nav\";\nimport {FileDiffIcon, GitCommitIcon, DatabaseIcon, GitBranchIcon, GitCompareIcon, PlayIcon, GearIcon} from \"@primer/octicons-react\";\n\nimport {useRefs} from \"../../hooks/repo\";\nimport {Link, NavItem} from \"../nav\";\nimport {useRouter} from \"../../hooks/router\";\n\n\n\nexport const RepositoryNavTabs = ({ active }) => {\n\n    const { repo, reference, loading, error } = useRefs();\n\n    const router = useRouter();\n\n    const repoId = (loading && !error) ? '' : repo.id;\n\n    const withRefContext = (url) => {\n        const params = new URLSearchParams();\n        if (!!reference) params.append('ref', reference.id);\n        if (!!params.toString())\n            return `${url}?${params.toString()}`;\n        return url;\n    };\n\n    const withBranchContext = (url) => {\n        const params = new URLSearchParams();\n        if (!!reference && reference.type === 'branch') params.append('ref', reference.id);\n        if (!!params.toString())\n            return `${url}?${params.toString()}`;\n        return url;\n    };\n\n    const withRefAndPathContext = (url) => {\n        const { path } = router.query;\n        const params = new URLSearchParams();\n        if (!!reference) params.append('ref', reference.id);\n        if (!!path) params.append('path', path);\n        if (!!params.toString())\n            return `${url}?${params.toString()}`;\n        return url;\n    };\n\n    return (\n        <Nav variant=\"tabs\" >\n            <Link active={active === 'objects'} href={withRefAndPathContext(`/repositories/${repoId}/objects`)} component={NavItem}>\n                <DatabaseIcon/> Objects\n            </Link>\n            <Link active={active === 'changes'} href={withBranchContext(`/repositories/${repoId}/changes`)} component={NavItem}>\n                <FileDiffIcon/> Changes\n            </Link>\n            <Link active={active === 'commits'} href={withRefContext(`/repositories/${repoId}/commits`)} component={NavItem}>\n                <GitCommitIcon/> Commits\n            </Link>\n            <Link active={active === 'branches'} href={`/repositories/${repoId}/branches`} component={NavItem}>\n                <GitBranchIcon/> Branches\n            </Link>\n            <Link active={active === 'compare'} href={withRefContext(`/repositories/${repoId}/compare`)} component={NavItem}>\n                <GitCompareIcon/> Compare\n            </Link>\n            <Link active={active === 'actions'} href={`/repositories/${repoId}/actions`} component={NavItem}>\n                <PlayIcon/> Actions\n            </Link>\n            <Link active={active === 'settings'} href={`/repositories/${repoId}/settings`} component={NavItem}>\n                <GearIcon/> Settings\n            </Link>\n        </Nav>\n    );\n};","import Container from \"react-bootstrap/Container\";\nimport Breadcrumb from \"react-bootstrap/Breadcrumb\";\n\nimport {useRefs} from \"../../hooks/repo\";\nimport Layout from \"../layout\";\nimport {RepositoryNavTabs} from \"./tabs\";\nimport {Link} from \"../nav\";\n\n\nconst RepoNav = () => {\n    const { repo } = useRefs();\n    const repoId = (!!repo) ? repo.id : '#';\n    \n    return (\n        <Breadcrumb>\n            <Link href={{pathname: '/repositories'}} component={Breadcrumb.Item}>\n                Repositories\n            </Link>\n            <Link href={{pathname: '/repositories/:repoId/objects', params: {repoId}}} component={Breadcrumb.Item} active>\n                {repoId}\n            </Link>\n        </Breadcrumb>\n\n    )\n};\n\nexport const RepositoryPageLayout = ({ activePage, children, fluid = \"xl\" }) => {\n    return (\n        <Layout>\n            <div>\n\n                <RepoNav/>\n\n                <RepositoryNavTabs active={activePage}/>\n\n                <Container fluid={fluid}>\n                    <div className=\"mt-4\">{children}</div>\n                </Container>\n            </div>\n        </Layout>\n    );\n};\n","import {useCallback, useEffect, useRef, useState} from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Button from \"react-bootstrap/Button\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Overlay from \"react-bootstrap/Overlay\";\nimport {ChevronDownIcon, ChevronRightIcon, ChevronUpIcon, XIcon} from \"@primer/octicons-react\";\nimport Popover from \"react-bootstrap/Popover\";\n\nimport {branches, commits} from '../../api';\n\n\nconst BranchSelector = ({ repo, selected, branches, listBranches, selectRef, withCommits, withWorkspace, amount = 300 }) => {\n    // used for branch pagination\n    const [pagination, setPagination] = useState({after: \"\", prefix: \"\", amount});\n\n    // used for commit listing\n    const initialCommitList = {branch: selected, commits: null, loading: false};\n    const [commitList, setCommitList] = useState(initialCommitList);\n\n    useEffect(()=> {\n        listBranches(repo.id, pagination.prefix, pagination.after, pagination.amount);\n    }, [repo.id, listBranches, pagination]);\n\n    const form = (\n        <div className=\"ref-filter-form\">\n            <Form onSubmit={e => { e.preventDefault(); }}>\n                <Form.Control type=\"text\" placeholder=\"filter branches\" onChange={(e)=> {\n                    setPagination({\n                        amount,\n                        after: \"\",\n                        prefix: e.target.value\n                    })\n                }}/>\n            </Form>\n        </div>\n    );\n\n    if (branches.loading) {\n        return  (\n            <div className=\"ref-selector\">\n                {form}\n                <p>Loading...</p>\n            </div>\n        );\n    }\n\n    if (!!branches.error) {\n        return  (\n            <div className=\"ref-selector\">\n                {form}\n                <Alert variant=\"danger\">{branches.error}</Alert>\n            </div>\n        );\n    }\n\n    if (commitList.commits !== null) {\n        return (\n            <CommitList\n                withWorkspace={withWorkspace}\n                commits={commitList.commits}\n                branch={commitList.branch}\n                selectRef={selectRef}\n                reset={() => {\n                    setCommitList(initialCommitList);\n                }}/>\n        );\n    }\n\n\n    const results = branches.payload.results;\n\n    return (\n        <div className=\"ref-selector\">\n            {form}\n            <div className=\"ref-scroller\">\n                <ul className=\"list-group ref-list\">\n                    {results.map(branch => (\n                        <BranchEntry key={branch.id} repo={repo} branch={branch.id} selectRef={selectRef} selected={selected} withCommits={withCommits} logCommits={async () => {\n                            const data = await commits.log(repo.id, branch.id)\n                            setCommitList({...commitList, branch: branch.id, commits: data.results});\n                        }}/>\n                    ))}\n                </ul>\n                <Paginator results={branches.payload.results} pagination={branches.payload.pagination} from={pagination.after} onPaginate={(after) => {\n                    setPagination({after})\n                }}/>\n            </div>\n        </div>\n    );\n};\n\nconst CommitList = ({ commits, selectRef, reset, branch, withWorkspace }) => {\n    const getMessage = commit => {\n        if (!commit.message) {\n            return 'repository epoch';\n        }\n\n        if (commit.message.length > 60) {\n            return commit.message.substr(0, 40) + '...';\n        }\n\n        return commit.message;\n    };\n\n    return (\n        <div className=\"ref-selector\">\n            <h5>{branch}</h5>\n            <div className=\"ref-scroller\">\n                <ul className=\"list-group ref-list\">\n                    {(withWorkspace) ? (\n                        <li className=\"list-group-item\" key={branch}>\n                            <Button variant=\"link\" onClick={() => {\n                                selectRef({id: branch, type: 'branch'});\n                            }}><em>{branch}'s Workspace (uncommitted changes)</em></Button>\n                        </li>\n                    ) : (<span/>)}\n                    {commits.map(commit => (\n                        <li className=\"list-group-item\" key={commit.id}>\n                            <Button variant=\"link\" onClick={() => {\n                                selectRef({id: commit.id, type: 'commit'});\n                            }}>{getMessage(commit)} </Button>\n                            <div className=\"actions\">\n                                <Badge variant=\"light\">{commit.id.substr(0, 12)}</Badge>\n                            </div>\n                        </li>\n                    ))}\n                </ul>\n                <p className=\"ref-paginator\">\n                    <Button variant=\"link\" size=\"sm\" onClick={reset}>Back</Button>\n                </p>\n            </div>\n        </div>\n    );\n};\n\nconst BranchEntry = ({repo, branch, selectRef, selected, logCommits, withCommits}) => {\n    return (\n        <li className=\"list-group-item\" key={branch}>\n            {(!!selected && branch === selected) ?\n                <strong>{branch}</strong> :\n                <Button variant=\"link\" onClick={() => {\n                    selectRef({id: branch, type: 'branch'});\n                }}>{branch}</Button>\n            }\n            <div className=\"actions\">\n                {(branch === repo.default_branch) ? (<Badge variant=\"info\">Default</Badge>) : <span/>}\n                {(withCommits) ? (\n                    <Button onClick={logCommits} size=\"sm\" variant=\"link\">\n                        <ChevronRightIcon/>\n                    </Button>\n                ) : (<span/>)}\n            </div>\n        </li>\n    );\n};\n\nconst Paginator = ({ pagination, onPaginate, results, from }) => {\n    const next = (!!results.length) ? results[results.length-1].id : \"\";\n\n    if (!pagination.has_more && from === \"\") return (<span/>);\n\n    return (\n        <p className=\"ref-paginator\">\n            {(from !== \"\") ?\n                (<Button  size={\"sm\"} variant=\"link\" onClick={() => { onPaginate(\"\"); }}>Reset</Button>) :\n                (<span/>)\n            }\n            {' '}\n            {(pagination.has_more) ?\n                (<Button size={\"sm\"} variant=\"link\" onClick={() => { onPaginate(next); }}>Next...</Button>) :\n                (<span/>)\n            }\n        </p>\n    );\n};\n\nconst RefDropdown = ({ repo, selected, selectRef, onCancel, variant=\"light\", prefix = '', emptyText = '', withCommits = true, withWorkspace = true }) => {\n\n    const [show, setShow] = useState(false);\n    const target = useRef(null);\n\n    const [branchList, setBranches] = useState({loading: true, payload: null, error: null});\n\n    const listBranches = useCallback(async (repoId, prefix, after, amount) => {\n        setBranches({loading: true, payload: null, error: null});\n        try {\n            const response = await branches.list(repoId, prefix, after, amount);\n            setBranches({loading: false, payload: response, error: null});\n        } catch (error) {\n            setBranches({loading: false, payload: null, error: error});\n        }\n    }, [])\n\n    const popover = (\n        <Overlay target={target.current} show={show} placement=\"bottom\" rootClose={true} onHide={() => setShow(false)}>\n            <Popover className=\"ref-popover\">\n                <Popover.Content>\n                    <BranchSelector\n                        repo={repo}\n                        branches={branchList}\n                        withCommits={withCommits}\n                        listBranches={listBranches}\n                        withWorkspace={withWorkspace}\n                        selected={selected}\n                        selectRef={(ref) => {\n                            selectRef(ref);\n                            setShow(false);\n                        }}/>\n                </Popover.Content>\n            </Popover>\n        </Overlay>\n    );\n\n    const cancelButton = (!!onCancel && !!selected) ? (<Button onClick={() => {\n        setShow(false);\n        onCancel();\n    }} variant={variant}><XIcon/></Button>) : (<span/>);\n\n    if (!selected) {\n        return (\n            <>\n                <Button ref={target} variant={variant} onClick={()=> { setShow(!show) }}>\n                    {emptyText} {show ? <ChevronUpIcon/> : <ChevronDownIcon/>}\n                </Button>\n                {cancelButton}\n                {popover}\n            </>\n        );\n    }\n\n    const showId = (ref) => {\n        if (!ref)\n            return ''\n        if (ref.type === 'commit')\n            return ref.id.substr(0, 12)\n        return ref.id\n    }\n\n    const title = prefix + (!!selected) ? `${prefix} ${selected.type}: ` : '';\n    return (\n        <>\n            <Button ref={target} variant={variant} onClick={()=> { setShow(!show) }}>\n                {title} <strong>{showId(selected)}</strong> {show ? <ChevronUpIcon/> : <ChevronDownIcon/>}\n            </Button>\n            {cancelButton}\n            {popover}\n        </>\n    );\n};\n\nexport default RefDropdown;","import React, {useState} from \"react\";\n\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport {OverlayTrigger} from \"react-bootstrap\";\n\n\nexport const ConfirmationModal = ({ show, onHide, msg, onConfirm, variant = \"danger\" }) => {\n    return (\n        <Modal show={show} onHide={onHide}>\n            <Modal.Header>\n                <Modal.Title>Confirmation</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {msg}\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant={variant} onClick={onConfirm}>Yes</Button>\n                <Button variant=\"secondary\" onClick={onHide}>Cancel</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\n\nexport const ConfirmationButton = ({ msg, onConfirm, variant, modalVariant, size, disabled = false, tooltip = null, children }) => {\n    const [show, setShow] = useState(false);\n    let btn = <Button variant={variant} size={size} disabled={disabled} onClick={() => setShow(true)}>{children}</Button>;\n    if (tooltip !== null) {\n        btn = (\n            <OverlayTrigger placement=\"bottom\" overlay={<Tooltip>{tooltip}</Tooltip>}>\n                {btn}\n            </OverlayTrigger>\n        );\n    }\n\n    const hide = () => setShow(false);\n\n    return (\n        <>\n            <ConfirmationModal\n                show={show}\n                variant={modalVariant}\n                onConfirm={() => {\n                    onConfirm(hide)\n                }}\n                onHide={hide}\n                msg={msg}\n            />\n            {btn}\n        </>\n    );\n};\n","import React, {useState} from \"react\";\n\nimport moment from \"moment\";\nimport {\n    DotIcon,\n    DownloadIcon,\n    FileDirectoryIcon,\n    FileIcon,\n    PencilIcon,\n    PlusIcon,\n    TrashIcon\n} from \"@primer/octicons-react\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport Table from \"react-bootstrap/Table\";\nimport Card from \"react-bootstrap/Card\";\nimport {OverlayTrigger} from \"react-bootstrap\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\n\nimport {linkToPath} from \"../../api\";\nimport {ConfirmationModal} from \"../modals\";\nimport {Paginator} from \"../pagination\";\nimport {Link} from \"../nav\";\n\n\nconst humanSize = (bytes) => {\n    if (!bytes) return '0.0 B';\n    const e = Math.floor(Math.log(bytes) / Math.log(1024));\n    return (bytes / Math.pow(1024, e)).toFixed(1) + ' ' + ' KMGTP'.charAt(e) + 'B';\n};\n\nconst Na = () => (<span>&mdash;</span>);\n\nconst EntryRowActions = ({ repo, reference, entry, onDelete }) => {\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);;\n    const handleShow = () => setShow(true);\n    const deleteConfirmMsg = `are you sure you wish to delete object \"${entry.path}\"?`\n    const onSubmit = () => {\n        onDelete(entry);\n        setShow(false);\n    };\n    return (\n        <>\n            <Dropdown alignRight>\n                <Dropdown.Toggle variant=\"light\" size=\"sm\">\n                    More Actions\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu>\n                    <PathLink\n                        path={entry.path}\n                        reference={reference}\n                        repoId={repo.id}\n                        as={Dropdown.Item}>\n                        <DownloadIcon/> {' '} Download\n                    </PathLink>\n                    <Dropdown.Item onClick={(e) => {\n                        e.preventDefault();\n                        handleShow();\n                    }}>\n                        <TrashIcon/> {' '} Delete\n                    </Dropdown.Item>\n                </Dropdown.Menu>\n            </Dropdown>\n\n            <ConfirmationModal show={show} onHide={handleClose} msg={deleteConfirmMsg} onConfirm={onSubmit}/>\n        </>\n    );\n};\n\nconst PathLink = ({repoId, reference, path, children, as = null}) => {\n    const link = linkToPath(repoId, reference.id, path);\n    if (as === null)\n        return (<a href={link} download={true}>{children}</a>);\n    return React.createElement(as, {children: children, href: link, download: true});\n};\n\nconst EntryRow = ({repo, reference, path, entry, onDelete, showActions}) => {\n    let rowClass = 'tree-row ';\n    switch (entry.diff_type) {\n        case 'changed':\n            rowClass += 'diff-changed';\n            break;\n        case 'added':\n            rowClass += 'diff-added';\n            break;\n        case 'removed':\n            rowClass += 'diff-removed';\n            break;\n        default:\n            break;\n    }\n\n    const buttonText = (path.length > 0) ? entry.path.substr(path.length) : entry.path;\n\n    const params = {repoId: repo.id};\n    const query = { ref: reference.id, path: entry.path};\n\n    let button;\n    if (entry.path_type === 'common_prefix') {\n        button = (<Link href={{pathname: '/repositories/:repoId/objects', query, params}}>{buttonText}</Link>);\n    } else if (entry.diff_type === 'removed') {\n        button = (<span>{buttonText}</span>);\n    } else {\n        button = (<PathLink repoId={repo.id} reference={reference} path={entry.path}>{buttonText}</PathLink>);\n    }\n\n    let size;\n    if (entry.diff_type === 'removed' || entry.path_type === 'common_prefix') {\n        size = (<Na/>);\n    } else {\n        size = (\n            <OverlayTrigger placement=\"bottom\" overlay={<Tooltip>{entry.size_bytes} bytes</Tooltip>}>\n                <span>{humanSize(entry.size_bytes)}</span>\n            </OverlayTrigger>\n        );\n    }\n\n    let modified;\n    if (entry.diff_type === 'removed' || entry.path_type === 'common_prefix') {\n        modified = (<Na/>);\n    } else {\n        modified = (\n            <OverlayTrigger placement=\"bottom\"\n                            overlay={<Tooltip>{moment.unix(entry.mtime).format(\"MM/DD/YYYY HH:mm:ss\")}</Tooltip>}>\n                <span>{moment.unix(entry.mtime).fromNow()}</span>\n            </OverlayTrigger>\n        );\n    }\n\n    let diffIndicator;\n    switch (entry.diff_type) {\n        case 'removed':\n            diffIndicator = (\n                <OverlayTrigger placement=\"bottom\" overlay={(<Tooltip>removed in diff</Tooltip>)}>\n                    <span>\n                        <TrashIcon/>\n                    </span>\n                </OverlayTrigger>\n            );\n            break;\n        case 'added':\n            diffIndicator = (\n                <OverlayTrigger placement=\"bottom\" overlay={(<Tooltip>added in diff</Tooltip>)}>\n                    <span>\n                        <PlusIcon/>\n                    </span>\n                </OverlayTrigger>\n            );\n            break;\n        case 'changed':\n            diffIndicator = (\n                <OverlayTrigger placement=\"bottom\" overlay={(<Tooltip>changed in diff</Tooltip>)}>\n                    <span>\n                        <PencilIcon/>\n                    </span>\n                </OverlayTrigger>\n            );\n            break;\n        default:\n            break;\n    }\n\n    let entryActions;\n    if (showActions && entry.path_type === 'object' && (entry.diff_type !== 'removed')) {\n        entryActions = <EntryRowActions repo={repo} reference={reference} entry={entry} onDelete={onDelete}/>;\n    }\n\n    return (\n        <>\n            <tr className={rowClass}>\n                <td className=\"diff-indicator\">\n                    {diffIndicator}\n                </td>\n                <td className=\"tree-path\">\n                    {entry.path_type === 'common_prefix' ? <FileDirectoryIcon/> : <FileIcon/>} {' '}\n                    {button}\n                </td>\n                <td className=\"tree-size\">\n                    {size}\n                </td>\n                <td className=\"tree-modified\">\n                    {modified}\n                </td>\n                <td className={\"tree-row-actions\"}>\n                    {entryActions}\n                </td>\n            </tr>\n        </>\n    );\n};\n\n\nfunction pathParts(path, rootName = \"root\") {\n    let parts = path.split(/\\//);\n    let resolved = [];\n    if (parts.length === 0) {\n        return resolved;\n    }\n\n    if (parts[parts.length - 1] === \"\") {\n        parts = parts.slice(0, parts.length - 1);\n    }\n\n    // else\n    for (let i = 0; i < parts.length; i++) {\n        let currentPath = parts.slice(0, i + 1).join('/');\n        if (currentPath.length > 0) {\n            currentPath = `${currentPath}/`;\n        }\n        resolved.push({\n            name: parts[i],\n            path: currentPath,\n        });\n    }\n\n    return resolved;\n}\n\nconst URINavigator = ({ repo, reference, path }) => {\n    const parts = pathParts(path);\n    const params = {repoId: repo.id};\n\n    return (\n        <span className=\"lakefs-uri\">\n            <strong>{'lakefs://'}</strong>\n            <Link href={{pathname: '/repositories/:repoId/objects', params}}>{repo.id}</Link>\n            <strong>{'/'}</strong>\n            <Link href={{pathname: '/repositories/:repoId/objects',params, query: {ref: reference.id}}}>{(reference.type === 'commit') ? reference.id.substr(0, 12) : reference.id}</Link>\n            <strong>{'/'}</strong>\n            {parts.map((part, i) => {\n                const path = parts.slice(0, i+1).map(p => p.name).join('/') + '/';\n                const query = {path, ref: reference.id};\n                return (\n                    <span key={i}>\n                        <Link href={{pathname: '/repositories/:repoId/objects', params, query}}>{part.name}</Link>\n                        <strong>{'/'}</strong>\n                    </span>\n                );\n            })}\n        </span>\n    );\n};\n\nconst GetStarted = ({ onUpload }) => {\n    return (\n        <Container className=\"m-4 mb-5\">\n            <h2 className=\"mt-2\">To get started with this repository, you can:</h2>\n\n            <Row className=\"pt-2 ml-2\">\n                <DotIcon className=\"mr-1 mt-1\"/>\n                <Button variant=\"link\" onClick={onUpload}>Upload</Button>&nbsp;an object.\n            </Row>\n\n            <Row className=\"pt-2 ml-2\">\n                <DotIcon className=\"mr-1 mt-1\"/>\n                See the &nbsp;<a href=\"https://docs.lakefs.io/using/\" target=\"_blank\" rel=\"noopener noreferrer\">docs</a>&nbsp;for other ways to import data to your repository.\n            </Row>\n        </Container>\n    );\n};\n\nexport const Tree = ({ repo, reference, results, after, onPaginate, nextPage, onUpload, onDelete, showActions = false, path = \"\" }) => {\n\n    let body;\n    if (results.length === 0 && path === \"\") {\n        // empty state!\n        body = <GetStarted onUpload={onUpload}/>;\n    } else {\n        body = (\n            <>\n                <Table borderless size=\"sm\">\n                    <tbody>\n                    {results.map(entry => (\n                        <EntryRow\n                            key={entry.path}\n                            entry={entry}\n                            path={path}\n                            repo={repo}\n                            reference={reference}\n                            showActions={showActions}\n                            onDelete={onDelete}\n                        />\n                    ))}\n                    </tbody>\n                </Table>\n            </>\n        );\n    }\n\n    return (\n        <div className=\"tree-container\">\n            <Card>\n                <Card.Header>\n                    <URINavigator path={path} repo={repo} reference={reference}/>\n                </Card.Header>\n                <Card.Body>\n                    {body}\n                </Card.Body>\n            </Card>\n\n            <Paginator onPaginate={onPaginate} nextPage={nextPage} after={after}/>\n        </div>\n    );\n};","import {UploadIcon} from \"@primer/octicons-react\";\n\nimport React, {useRef, useState} from \"react\";\nimport {RepositoryPageLayout} from \"../../../lib/components/repository/layout\";\nimport RefDropdown from \"../../../lib/components/repository/refDropdown\";\nimport {ActionGroup, ActionsBar, Loading, RefreshButton} from \"../../../lib/components/controls\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport {Tree} from \"../../../lib/components/repository/tree\";\nimport {Error} from \"../../../lib/components/controls\";\nimport {objects} from \"../../../lib/api\";\nimport {useAPIWithPagination} from \"../../../lib/hooks/api\";\nimport {RefContextProvider, useRefs} from \"../../../lib/hooks/repo\";\nimport {useRouter} from \"../../../lib/hooks/router\";\n\n\nconst UploadButton = ({ repo, reference, path, onDone, variant = \"success\", onClick, onHide, show = false}) => {\n    const initialState = {\n        inProgress: false,\n        error: null,\n        done: false\n    }\n    const [uploadState, setUploadState] = useState(initialState)\n\n    const textRef = useRef(null);\n    const fileRef = useRef(null);\n\n    if (!reference || reference.type !== 'branch') return <></>\n\n    const hide = () => {\n        if (uploadState.inProgress) return;\n        setUploadState(initialState)\n        onHide()\n    };\n\n    const upload = async () => {\n        setUploadState({\n            ...initialState,\n            inProgress: true\n        })\n        try {\n            await objects.upload(repo.id, reference.id, textRef.current.value, fileRef.current.files[0])\n            setUploadState({...initialState})\n            onDone()\n        } catch (error) {\n            setUploadState({...initialState, error})\n        }\n        onHide();\n    }\n\n    const basePath = `${repo.id}/${reference.id}/\\u00A0`;\n\n    const pathStyle = {'min-width' : '25%'};\n\n    return (\n        <>\n            <Modal show={show} onHide={hide}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Upload Object</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={(e) => {\n                        if (uploadState.inProgress) return;\n                        upload()\n                        e.preventDefault()\n                    }}>\n                        <Form.Group controlId=\"path\">\n                            <Row noGutters={true}>\n                                <Col className=\"col-auto d-flex align-items-center justify-content-start\">\n                                    {basePath}\n                                </Col>\n                                <Col style={pathStyle}>\n                                    <Form.Control type=\"text\" placeholder=\"Object name\" autoFocus name=\"text\" ref={textRef} defaultValue={path}/>\n                                </Col>\n                            </Row>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"content\">\n                            <Form.Control\n                                type=\"file\"\n                                name=\"content\"\n                                ref={fileRef}\n                                onChange={(e) => {\n                                    const currPath = textRef.current.value.substr(0, textRef.current.value.lastIndexOf('/')+1);\n                                    const currName = (e.currentTarget.files.length > 0) ? e.currentTarget.files[0].name : \"\"\n                                    textRef.current.value = currPath + currName;\n                                }}\n                            />\n                        </Form.Group>\n                    </Form>\n                    {(!!uploadState.error) ? (<Error error={uploadState.error}/>) : (<></>)}\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\"  disabled={uploadState.inProgress} onClick={hide}>\n                        Cancel\n                    </Button>\n                    <Button variant=\"success\" disabled={uploadState.inProgress} onClick={() => {\n                        if (uploadState.inProgress) return;\n                        upload()\n                    }}>\n                        {(uploadState.inProgress)? 'Uploading...' : 'Upload'}\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n            <Button variant={variant} onClick={onClick}>\n                <UploadIcon/> Upload Object\n            </Button>\n        </>\n    );\n}\n\nconst TreeContainer = ({ repo, reference, path, after, onPaginate, onRefresh, onUpload, refreshToken }) => {\n    const { results, error, loading, nextPage } = useAPIWithPagination( () => {\n        return objects.list(repo.id, reference.id, path, after)\n    },[repo.id, reference.id, path, after, refreshToken])\n\n    if (loading) return <Loading/>\n    if (!!error) return <Error error={error}/>\n\n    return (\n        <Tree\n            repo={repo}\n            reference={reference}\n            path={(!!path) ? path : \"\"}\n            showActions={true}\n            results={results}\n            after={after}\n            nextPage={nextPage}\n            onPaginate={onPaginate}\n            onUpload={onUpload}\n            onDelete={entry => {\n                objects\n                    .delete(repo.id, reference.id, entry.path)\n                    .catch(error => console.log(error))\n                    .then(onRefresh)\n            }}\n        />\n    )\n}\n\nconst ObjectsBrowser = () => {\n    const router = useRouter();\n    const { path, after } = router.query;\n    const { repo, reference, loading, error } = useRefs();\n    const [showUpload, setShowUpload] = useState(false);\n    const [refreshToken, setRefreshToken] = useState(false);\n    const refresh = () => setRefreshToken(!refreshToken);\n\n    if (loading) return <Loading/>;\n    if (!!error) return <Error error={error}/>;\n\n    return (\n        <>\n            <ActionsBar>\n                <ActionGroup orientation=\"left\">\n                    <RefDropdown\n                        emptyText={'Select Branch'}\n                        repo={repo}\n                        selected={reference}\n                        withCommits={true}\n                        withWorkspace={true}\n                        selectRef={ref => router.push({\n                            pathname: `/repositories/:repoId/objects`,\n                            params: {repoId: repo.id},\n                            query: {ref: ref.id}\n                        })}\n                    />\n                </ActionGroup>\n\n                <ActionGroup orientation=\"right\">\n                    <RefreshButton onClick={refresh} />\n                    <UploadButton\n                        path={path}\n                        repo={repo}\n                        reference={reference}\n                        onDone={refresh}\n                        onClick={() => { setShowUpload(true); }}\n                        onHide={ () => { setShowUpload(false); }}\n                        show={showUpload}\n                    />\n                </ActionGroup>\n            </ActionsBar>\n\n            <TreeContainer\n                reference={reference}\n                repo={repo}\n                path={(!!path) ? path : \"\"}\n                after={(!!after) ? after : \"\"}\n                onPaginate={after => {\n                    const query = {after}\n                    if (!!path) query.path = path\n                    if (!!reference) query.ref = reference.id\n                    const url = {pathname: `/repositories/:repoId/objects`, query, params: {repoId: repo.id}}\n                    router.push(url)\n                }}\n                refreshToken={refreshToken}\n                onUpload={() => { setShowUpload(true); }}\n                onRefresh={refresh}/>\n        </>\n    );\n};\n\nconst RepositoryObjectsPage = () => {\n    return (\n          <RefContextProvider>\n              <RepositoryPageLayout activePage={'objects'}>\n                <ObjectsBrowser/>\n              </RepositoryPageLayout>\n          </RefContextProvider>\n    );\n};\n\nexport default RepositoryObjectsPage;","import React, {useState} from \"react\";\n\nimport {OverlayTrigger} from \"react-bootstrap\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport Button from \"react-bootstrap/Button\";\nimport {CircleSlashIcon, HistoryIcon, PencilIcon, PlusIcon, TrashIcon} from \"@primer/octicons-react\";\n\nimport {ConfirmationModal} from \"../modals\";\n\n\nconst ChangeRowActions = ({ entry, onRevert }) => {\n    const [show, setShow] = useState(false);\n    const revertConfirmMsg = `Are you sure you wish to revert \"${entry.path}\" (${entry.type})?`;\n    const onSubmit = () => {\n        onRevert(entry)\n        setShow(false)\n    };\n\n    return (\n        <>\n            <OverlayTrigger key={\"bottom\"} overlay={(<Tooltip id={\"revert-entry\"}>Revert change</Tooltip>)}>\n                <Button variant=\"link\" disabled={false} onClick={(e) => {\n                    e.preventDefault();\n                    setShow(true)\n                }} >\n                    <HistoryIcon/>\n                </Button>\n            </OverlayTrigger>\n            <ConfirmationModal show={show} onHide={() => setShow(false)} msg={revertConfirmMsg} onConfirm={onSubmit}/>\n        </>\n    );\n};\n\nexport const ChangeEntryRow = ({ entry, showActions, onRevert }) => {\n    let rowClass = 'tree-row ';\n    switch (entry.type) {\n        case 'changed':\n            rowClass += 'diff-changed';\n            break;\n        case 'added':\n            rowClass += 'diff-added';\n            break;\n        case 'removed':\n            rowClass += 'diff-removed';\n            break;\n        case 'conflict':\n            rowClass += 'diff-conflict';\n            break;\n        default:\n            break;\n    }\n\n    const pathText = entry.path;\n\n    let diffIndicator;\n    switch (entry.type) {\n        case 'removed':\n            diffIndicator = (\n                <OverlayTrigger placement=\"bottom\" overlay={(<Tooltip id={\"tooltip-removed\"}>Removed</Tooltip>)}>\n                    <span>\n                        <TrashIcon/>\n                    </span>\n                </OverlayTrigger>\n            );\n            break;\n        case 'added':\n            diffIndicator = (\n                <OverlayTrigger placement=\"bottom\" overlay={(<Tooltip id={\"tooltip-added\"}>Added</Tooltip>)}>\n                    <span>\n                        <PlusIcon/>\n                    </span>\n                </OverlayTrigger>\n            );\n            break;\n        case 'changed':\n            diffIndicator = (\n                <OverlayTrigger placement=\"bottom\" overlay={(<Tooltip id={\"tooltip-changed\"}>Changed</Tooltip>)}>\n                    <span>\n                        <PencilIcon/>\n                    </span>\n                </OverlayTrigger>\n            );\n            break;\n        case 'conflict':\n            diffIndicator = (\n                <OverlayTrigger placement=\"bottom\" overlay={(<Tooltip id={\"tooltip-conflict\"}>Conflict</Tooltip>)}>\n                    <span>\n                        <CircleSlashIcon/>\n                    </span>\n                </OverlayTrigger>\n            );\n            break;\n        default:\n            break;\n    }\n\n    let entryActions;\n    if (showActions) {\n        entryActions = <ChangeRowActions\n            entry={entry}\n            onRevert={onRevert}\n        />;\n    }\n\n    return (\n        <>\n            <tr className={rowClass}>\n                <td className=\"diff-indicator\">\n                    {diffIndicator}\n                </td>\n                <td className=\"tree-path\">\n                    <span>{pathText}</span>\n                </td>\n                <td className={\"tree-row-actions\"}>\n                    {entryActions}\n                </td>\n            </tr>\n        </>\n    );\n};\n","import React, {useRef, useState} from \"react\";\n\nimport {\n    GitCommitIcon,\n    HistoryIcon,\n    PlusIcon,\n    XIcon\n} from \"@primer/octicons-react\";\n\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Table from \"react-bootstrap/Table\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\n\nimport {refs, branches, commits} from \"../../../lib/api\";\nimport {useAPIWithPagination} from \"../../../lib/hooks/api\";\nimport {RefContextProvider, useRefs} from \"../../../lib/hooks/repo\";\nimport {ConfirmationModal} from \"../../../lib/components/modals\";\nimport {ActionGroup, ActionsBar, Error, Loading, RefreshButton} from \"../../../lib/components/controls\";\nimport RefDropdown from \"../../../lib/components/repository/refDropdown\";\nimport {RepositoryPageLayout} from \"../../../lib/components/repository/layout\";\nimport {formatAlertText} from \"../../../lib/components/repository/errors\";\nimport {ChangeEntryRow} from \"../../../lib/components/repository/changes\";\nimport {Paginator} from \"../../../lib/components/pagination\";\nimport {useRouter} from \"../../../lib/hooks/router\";\n\n\nconst CommitButton = ({ repo, onCommit, enabled = false }) => {\n\n    const textRef = useRef(null);\n\n    const [committing, setCommitting] = useState(false)\n    const [show, setShow] = useState(false)\n    const [metadataFields, setMetadataFields] = useState([])\n\n    const hide = () => {\n        if (committing) return;\n        setShow(false)\n    }\n\n    const onSubmit = () => {\n        const message = textRef.current.value;\n        const metadata = {};\n        metadataFields.forEach(pair => metadata[pair.key] = pair.value)\n        setCommitting(true)\n        onCommit({message, metadata}, () => {\n            setCommitting(false)\n            setShow(false);\n        })\n    };\n\n    const alertText = formatAlertText(repo.id, null);\n    return (\n        <>\n            <Modal show={show} onHide={hide} size=\"lg\">\n                <Modal.Header closeButton>\n                    <Modal.Title>Commit Changes</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form className=\"mb-2\" onSubmit={(e) => {\n                        onSubmit();\n                        e.preventDefault();\n                    }}>\n                        <Form.Group controlId=\"message\">\n                            <Form.Control type=\"text\" placeholder=\"Commit Message\" ref={textRef}/>\n                        </Form.Group>\n\n                        {metadataFields.map((f, i) => {\n                            return (\n                                <Form.Group controlId=\"message\" key={`commit-metadata-field-${f.key}-${f.value}-${i}`}>\n                                    <Row>\n                                        <Col md={{span: 5}}>\n                                            <Form.Control type=\"text\" placeholder=\"Key\"  defaultValue={f.key} onChange={(e) => {\n                                                metadataFields[i].key = e.currentTarget.value;\n                                                setMetadataFields(metadataFields);\n                                            }}/>\n                                        </Col>\n                                        <Col md={{ span: 5}}>\n                                            <Form.Control type=\"text\" placeholder=\"Value\"  defaultValue={f.value}  onChange={(e) => {\n                                                metadataFields[i].value = e.currentTarget.value;\n                                                setMetadataFields(metadataFields);\n                                            }}/>\n                                        </Col>\n                                        <Col md={{ span: 1}}>\n                                            <Form.Text>\n                                                <Button size=\"sm\" variant=\"secondary\" onClick={() => {\n                                                    setMetadataFields([...metadataFields.slice(0,i), ...metadataFields.slice(i+1)]);\n                                                }}>\n                                                    <XIcon/>\n                                                </Button>\n                                            </Form.Text>\n                                        </Col>\n                                    </Row>\n                                </Form.Group>\n                            )\n                        })}\n\n                        <Button onClick={() => {\n                            setMetadataFields([...metadataFields, {key: \"\", value: \"\"}]);\n                        }} size=\"sm\" variant=\"secondary\">\n                            <PlusIcon/>{' '}\n                            Add Metadata field\n                        </Button>\n                    </Form>\n                    {(alertText) ? (<Alert variant=\"danger\">{alertText}</Alert>) : (<span/>)}\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" disabled={committing} onClick={hide}>\n                        Cancel\n                    </Button>\n                    <Button variant=\"success\" disabled={committing} onClick={onSubmit}>\n                        Commit Changes\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            <Button variant=\"success\" disabled={!enabled} onClick={() => setShow(true)}>\n                <GitCommitIcon/> Commit Changes{' '}\n            </Button>\n        </>\n    );\n}\n\n\nconst RevertButton =({ onRevert, enabled = false }) => {\n    const [show, setShow] = useState(false)\n    const hide = () => setShow(false)\n\n    return (\n        <>\n            <ConfirmationModal\n                show={show}\n                onHide={hide}\n                msg=\"Are you sure you want to revert all uncommitted changes?\"\n                onConfirm={() => {\n                    onRevert()\n                    hide()\n                }} />\n            <Button variant=\"light\" disabled={!enabled} onClick={() => setShow(true)}>\n                <HistoryIcon/> Revert\n            </Button>\n        </>\n    );\n}\n\nconst ChangesBrowser = ({ repo, reference, after, onSelectRef, onPaginate }) => {\n    const [actionError, setActionError] = useState(null)\n    const [internalRefresh, setInternalRefresh] = useState(true)\n\n    const { results, error, loading, nextPage } = useAPIWithPagination(async () => {\n        if (!repo) return\n        return refs.changes(repo.id, reference.id, after)\n    }, [repo.id, reference.id, internalRefresh, after])\n\n    const refresh = () => setInternalRefresh(!internalRefresh)\n\n    if (!!error) return <Error error={error}/>\n    if (loading) return <Loading/>\n\n    const actionErrorDisplay = (!!actionError) ?\n        <Error error={actionError} onDismiss={() => setActionError(null)}/> : <></>\n\n    return (\n        <>\n            <ActionsBar>\n                <ActionGroup orientation=\"left\">\n                    <RefDropdown\n                        emptyText={'Select Branch'}\n                        repo={repo}\n                        selected={(!!reference) ? reference : null}\n                        withCommits={false}\n                        withWorkspace={false}\n                        selectRef={onSelectRef}\n                    />\n                </ActionGroup>\n\n                <ActionGroup orientation=\"right\">\n\n                    <RefreshButton onClick={refresh}/>\n\n                    <RevertButton enabled={results.length > 0} onRevert={() => {\n                        branches.revert(repo.id, reference.id, {type: 'reset'})\n                            .then(refresh)\n                            .catch(error => setActionError(error))\n                    }}/>\n                    <CommitButton repo={repo} enabled={results.length > 0} onCommit={(commitDetails, done) => {\n                        commits\n                            .commit(repo.id, reference.id, commitDetails.message, commitDetails.metadata)\n                            .then(() => {\n                                done()\n                                refresh()\n                            })\n                    }}/>\n                </ActionGroup>\n            </ActionsBar>\n\n            {actionErrorDisplay}\n\n            <div className=\"tree-container\">\n                    {(results.length === 0) ? <Alert variant=\"info\">No changes</Alert> : (\n                        <Card>\n                            <Table borderless size=\"sm\">\n                                <tbody>\n                                {results.map(entry => (\n                                    <ChangeEntryRow key={entry.path} entry={entry} showActions={true} onRevert={(entry) => {\n                                        branches\n                                            .revert(repo.id, reference.id, {type: 'object', path: entry.path})\n                                            .then(() => {\n                                                setInternalRefresh(!internalRefresh)\n                                            })\n                                            .catch(error => {\n                                                setActionError(error)\n                                            })\n                                        }}/>\n                                ))}\n                                </tbody>\n                            </Table>\n                        </Card>\n                    )}\n\n                <Paginator onPaginate={onPaginate} nextPage={nextPage} after={after}/>\n            </div>\n        </>\n    )\n}\n\nconst ChangesContainer = () => {\n    const router = useRouter();\n    const { repo, reference, loading, error } = useRefs()\n    const { after } = router.query\n\n    if (loading) return <Loading/>\n    if (!!error) return <Error error={error}/>\n\n    return (\n        <ChangesBrowser\n            after={(!!after) ? after : \"\"}\n            repo={repo}\n            reference={reference}\n            onPaginate={after => router.push({\n                pathname: `/repositories/:repoId/changes`,\n                params: {repoId: repo.id},\n                query: {ref: reference.id, after}\n            })}\n            onSelectRef={ref => router.push({\n                pathname: `/repositories/:repoId/changes`,\n                params: {repoId: repo.id},\n                query: {ref: ref.id}\n            })}\n        />\n    )\n}\n\n\nconst RepositoryChangesPage = () => {\n    return (\n        <RefContextProvider>\n            <RepositoryPageLayout activePage={'changes'}>\n                <ChangesContainer/>\n            </RepositoryPageLayout>\n        </RefContextProvider>\n    )\n}\n\nexport default RepositoryChangesPage;","import React from \"react\";\nimport {Alert} from \"react-bootstrap\";\n\nfunction extractActionRunID(err) {\n    const m = /^Error: (\\S+) hook aborted, run id '([^']+)'/.exec(err);\n    return m ? m[2] : '';\n}\n\nfunction extractActionHookRunID(err) {\n    const m = /^\\t\\* hook run id '([^']+)' failed/.exec(err);\n    return m ? m[1] : '';\n}\n\nexport function formatAlertText(repositoryId, err) {\n    if (!err) {\n        return '';\n    }\n    const lines = err.split('\\n');\n    const runID = extractActionRunID(err);\n    if (lines.length === 1) {\n        return <Alert.Heading>{err}</Alert.Heading>;\n    }\n    let result = lines.map((line, i) => {\n        if (runID) {\n            const hookRunID = extractActionHookRunID(line);\n            let link =  `/repositories/${repositoryId}/actions/${runID}`\n            if (hookRunID) {\n                link = `/repositories/${repositoryId}/actions/${runID}/${hookRunID}`\n            }\n            return <p key={i}><Alert.Link href={link}>{line}</Alert.Link></p>;\n        }\n        return <p key={i}>{line}</p>;\n    });\n\n    return result;\n}\n","import React, {useMemo, useRef, useState} from \"react\";\n\nimport {\n    GitBranchIcon,\n    LinkIcon,\n    PackageIcon,\n    TrashIcon\n} from \"@primer/octicons-react\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nimport {branches} from \"../../../lib/api\";\n\nimport {\n    ActionGroup,\n    ActionsBar, ClipboardButton,\n    Error, LinkButton,\n    Loading, RefreshButton\n} from \"../../../lib/components/controls\";\nimport {RepositoryPageLayout} from \"../../../lib/components/repository/layout\";\nimport {RefContextProvider, useRefs} from \"../../../lib/hooks/repo\";\nimport {useAPIWithPagination} from \"../../../lib/hooks/api\";\nimport {Paginator} from \"../../../lib/components/pagination\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport RefDropdown from \"../../../lib/components/repository/refDropdown\";\nimport Badge from \"react-bootstrap/Badge\";\nimport {ConfirmationButton} from \"../../../lib/components/modals\";\nimport Alert from \"react-bootstrap/Alert\";\nimport {Link} from \"../../../lib/components/nav\";\nimport {useRouter} from \"../../../lib/hooks/router\";\n\nconst ImportBranchName = 'import-from-inventory';\n\n\nconst BranchWidget = ({ repo, branch, onDelete }) => {\n\n    const buttonVariant = \"outline-dark\";\n    const isDefault = repo.default_branch === branch.id;\n    let deleteMsg = (\n        <>\n            Are you sure you wish to delete branch <strong>{branch.id}</strong> ?\n        </>\n    );\n    if (branch.id === ImportBranchName) {\n        deleteMsg = (\n            <>\n                <p>{deleteMsg}</p>\n                <Alert variant=\"warning\"><strong>Warning</strong> this is a system branch used for importing data to lakeFS</Alert>\n            </>\n        );\n    }\n\n    return (\n        <ListGroup.Item>\n            <div className=\"clearfix\">\n                <div className=\"float-left\">\n                    <h6>\n                        <Link href={{\n                            pathname: '/repositories/:repoId/objects',\n                            params: {repoId: repo.id},\n                            query: {ref: branch.id}\n                        }}>\n                            {branch.id}\n                        </Link>\n\n                        {isDefault &&\n                        <>\n                            {' '}\n                            <Badge variant=\"info\">Default</Badge>\n                        </>}\n                    </h6>\n                </div>\n\n\n                <div className=\"float-right\">\n                    {!isDefault &&\n                    <ButtonGroup className=\"commit-actions\">\n                        <ConfirmationButton\n                            variant=\"outline-danger\"\n                            disabled={isDefault}\n                            msg={deleteMsg}\n                            tooltip=\"delete branch\"\n                            onConfirm={() => {\n                                branches.delete(repo.id, branch.id)\n                                    .catch(err => alert(err))\n                                    .then(() => onDelete(branch.id))\n                            }}\n                        >\n                            <TrashIcon/>\n                        </ConfirmationButton>\n                    </ButtonGroup>\n                    }\n\n                    <ButtonGroup className=\"branch-actions ml-2\">\n                        <LinkButton\n                            href={{\n                                pathname: '/repositories/:repoId/commits/:commitId',\n                                params:{repoId: repo.id, commitId: branch.commit_id},\n                            }}\n                            buttonVariant=\"outline-dark\"\n                            tooltip=\"View referenced commit\">\n                            {branch.commit_id.substr(0, 12)}\n                        </LinkButton>\n                        <ClipboardButton variant={buttonVariant} text={branch.id} tooltip=\"Copy ID to clipboard\"/>\n                        <ClipboardButton variant={buttonVariant} text={`lakefs://${repo.id}/${branch.id}`} tooltip=\"Copy URI to clipboard\" icon={<LinkIcon/>}/>\n                        <ClipboardButton variant={buttonVariant} text={`s3://${repo.id}/${branch.id}`} tooltip=\"Copy S3 URI to clipboard\" icon={<PackageIcon/>}/>\n                    </ButtonGroup>\n                </div>\n            </div>\n        </ListGroup.Item>\n    );\n};\n\n\nconst CreateBranchButton = ({ repo, variant = \"success\", onCreate = null, children }) => {\n    const [show, setShow] = useState(false);\n    const [disabled, setDisabled] = useState(false);\n    const [error, setError] = useState(null);\n    const textRef = useRef(null);\n    const defaultBranch = useMemo(\n        () => ({ id: repo.default_branch, type: \"branch\"}),\n        [repo.default_branch]);\n    const [selectedBranch, setSelectedBranch] = useState(defaultBranch);\n\n\n    const hide = () => {\n        if (disabled) return;\n        setShow(false);\n    };\n\n    const display = () => {\n        setShow(true);\n    };\n\n    const onSubmit = () => {\n        setDisabled(true);\n        const branchId = textRef.current.value;\n        const sourceRef = selectedBranch.id;\n        branches.create(repo.id, branchId, sourceRef)\n            .catch(err => {\n                setError(err);\n            })\n            .then((response) => {\n                setError(false);\n                setDisabled(false);\n                setShow(false);\n                if (onCreate !== null) onCreate(response);\n            });\n    };\n\n    return (\n        <>\n            <Modal show={show} onHide={hide}>\n                <Modal.Header closeButton>\n                    Create Branch\n                </Modal.Header>\n                <Modal.Body>\n\n                    <Form onSubmit={(e) => {\n                        onSubmit();\n                        e.preventDefault();\n                    }}>\n                        <Form.Group controlId=\"name\">\n                            <Form.Control type=\"text\" placeholder=\"Branch Name\" name=\"text\" ref={textRef}/>\n                        </Form.Group>\n                        <Form.Group controlId=\"source\">\n                            <RefDropdown\n                                repo={repo}\n                                emptyText={'Select Source Branch'}\n                                prefix={'From '}\n                                selected={selectedBranch}\n                                selectRef={(refId) => {\n                                    setSelectedBranch(refId);\n                                }}\n                                withCommits={true}\n                                withWorkspace={false}/>\n                        </Form.Group>\n                    </Form>\n\n                    {!!error && <Error error={error}/>}\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" disabled={disabled} onClick={hide}>\n                        Cancel\n                    </Button>\n                    <Button variant=\"success\" onClick={onSubmit} disabled={disabled}>\n                        Create\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            <Button variant={variant} onClick={display}>{children}</Button>\n        </>\n    );\n};\n\nconst BranchList = ({ repo, prefix, after, onPaginate }) => {\n\n    const [refresh, setRefresh] = useState(true);\n    const { results, error, loading, nextPage } = useAPIWithPagination(async () => {\n        return branches.list(repo.id, prefix, after);\n    }, [repo.id, refresh, prefix, after]);\n\n    const doRefresh = () =>  setRefresh(!refresh);\n\n    let content;\n\n    if (loading) content = <Loading/>;\n    else if (!!error) content = <Error error={error}/>;\n    else content = (\n        <>\n            <Card>\n                <ListGroup variant=\"flush\">\n                    {results.map(branch => (\n                        <BranchWidget key={branch.id} repo={repo} branch={branch} onDelete={doRefresh}/>\n                    ))}\n                </ListGroup>\n            </Card>\n            <Paginator onPaginate={onPaginate} nextPage={nextPage} after={after}/>\n        </>\n    );\n\n    return (\n        <div className=\"mb-5\">\n            <ActionsBar>\n                <ActionGroup orientation=\"right\">\n                    <RefreshButton onClick={doRefresh}/>\n\n                    <CreateBranchButton repo={repo} variant=\"success\" onCreate={doRefresh}>\n                        <GitBranchIcon/> Create Branch\n                    </CreateBranchButton>\n\n                </ActionGroup>\n            </ActionsBar>\n            {content}\n        </div>\n    );\n};\n\n\nconst BranchesContainer = () => {\n    const router = useRouter()\n    const { repo, loading, error } = useRefs();\n    const { after } = router.query;\n    const routerPfx = (!!router.query.prefix) ? router.query.prefix : \"\";\n\n    if (loading) return <Loading/>;\n    if (!!error) return <Error error={error}/>;\n\n    return (\n        <BranchList\n            repo={repo}\n            after={(!!after) ? after : \"\"}\n            prefix={routerPfx}\n            onPaginate={after => {\n                const query = {after};\n                if (!!router.query.prefix) query.prefix = router.query.prefix;\n                router.push({pathname: '/repositories/:repoId/branches', params: {repoId: repo.id}, query});\n            }}/>\n    );\n};\n\n\nconst RepositoryBranchesPage = () => {\n    return (\n        <RefContextProvider>\n            <RepositoryPageLayout activePage={'branches'}>\n                <BranchesContainer/>\n            </RepositoryPageLayout>\n        </RefContextProvider>\n    )\n}\n\nexport default RepositoryBranchesPage;","import {RepositoryPageLayout} from \"../../../lib/components/repository/layout\";\nimport {ActionGroup, ActionsBar, Error, Loading, RefreshButton} from \"../../../lib/components/controls\";\nimport React, {useState} from \"react\";\nimport {RefContextProvider, useRefs} from \"../../../lib/hooks/repo\";\nimport RefDropdown from \"../../../lib/components/repository/refDropdown\";\nimport {ArrowLeftIcon, GitMergeIcon} from \"@primer/octicons-react\";\nimport {useAPIWithPagination} from \"../../../lib/hooks/api\";\nimport {refs} from \"../../../lib/api\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\nimport {ChangeEntryRow} from \"../../../lib/components/repository/changes\";\nimport {Paginator} from \"../../../lib/components/pagination\";\nimport {ConfirmationButton} from \"../../../lib/components/modals\";\nimport {useRouter} from \"../../../lib/hooks/router\";\n\n\nconst CompareList = ({ repo, reference, compareReference, after, onSelectRef, onSelectCompare, onPaginate }) => {\n    if (compareReference === null) compareReference = reference\n\n    const [internalRefresh, setInternalRefresh] = useState(true)\n    const [mergeError, setMergeError] = useState(null)\n    const [merging, setMerging] = useState(false)\n\n    const refresh = () => {\n        setInternalRefresh(!internalRefresh)\n        setMergeError(null)\n    }\n\n    const { results, error, loading, nextPage } = useAPIWithPagination(async () => {\n        if (compareReference.id !== reference.id)\n            return refs.diff(repo.id, compareReference.id, reference.id, after)\n        return {pagination: {has_more: false}, results: []} // nothing to compare here.\n    }, [repo.id, reference.id, compareReference.id, internalRefresh, after])\n\n    let content;\n    if (loading) content = <Loading/>\n    else if (!!error) content = <Error error={error}/>\n    else if (compareReference.id === reference.id) content = (\n        <Alert variant=\"warning\">\n            <Alert.Heading>There isn’t anything to compare.</Alert.Heading>\n            You’ll need to use two different sources to get a valid comparison.\n        </Alert>\n    )\n    else content = (\n            <div className=\"tree-container\">\n                {(results.length === 0) ? <Alert variant=\"info\">No changes</Alert> : (\n                    <Card>\n                        <Table borderless size=\"sm\">\n                            <tbody>\n                            {results.map(entry => (\n                                <ChangeEntryRow key={entry.path} entry={entry} showActions={false}/>\n                            ))}\n                            </tbody>\n                        </Table>\n                    </Card>\n                )}\n\n                <Paginator onPaginate={onPaginate} nextPage={nextPage} after={after}/>\n            </div>\n    )\n\n    const emptyDiff = (!loading && !error && !!results && results.length === 0);\n\n    return (\n        <>\n            <ActionsBar>\n                <ActionGroup orientation=\"left\">\n                    <RefDropdown\n                        prefix={'Base '}\n                        repo={repo}\n                        selected={(!!reference) ? reference : null}\n                        withCommits={true}\n                        withWorkspace={false}\n                        selectRef={onSelectRef}/>\n\n                    <ArrowLeftIcon className=\"mr-2 mt-2\" size=\"small\" verticalAlign=\"middle\"/>\n\n                    <RefDropdown\n                        prefix={'Compared to '}\n                        emptyText={'Compare with...'}\n                        repo={repo}\n                        selected={(!!compareReference) ? compareReference : null}\n                        withCommits={true}\n                        withWorkspace={false}\n                        selectRef={onSelectCompare}/>\n                </ActionGroup>\n\n                <ActionGroup orientation=\"right\">\n\n                    <RefreshButton onClick={refresh}/>\n\n                    {(compareReference.type === 'branch' && reference.type === 'branch') &&\n                    <ConfirmationButton\n                        variant=\"success\"\n                        disabled={((compareReference.id === reference.id) || merging || emptyDiff)}\n                        msg={`Are you sure you'd like to merge '${compareReference.id}' into '${reference.id}'?`}\n                        tooltip={`merge '${compareReference.id}' into '${reference.id}'`}\n                        onConfirm={hide => {\n                            setMerging(true)\n                            hide()\n                            refs.merge(repo.id, compareReference.id, reference.id)\n                                .then(() => {\n                                    setMergeError(null)\n                                    setMerging(false)\n                                    refresh()\n                                })\n                                .catch(err => {\n                                    setMergeError(err)\n                                    setMerging(false)\n                                })\n                        }}>\n                        <GitMergeIcon/> {(merging) ? 'Merging...' : 'Merge'}\n                    </ConfirmationButton>\n                    }\n                </ActionGroup>\n            </ActionsBar>\n\n            {mergeError && <Error error={mergeError}/>}\n            {content}\n        </>\n    );\n};\n\n\nconst CompareContainer = () => {\n    const router = useRouter();\n    const { loading, error, repo, reference, compare } = useRefs();\n\n    const { after } = router.query;\n\n    if (loading) return <Loading/>;\n    if (!!error) return <Error error={error}/>;\n\n    const route = query => router.push({pathname: `/repositories/:repoId/compare`, params: {repoId: repo.id}, query});\n\n    return (\n        <CompareList\n            repo={repo}\n            after={(!!after) ? after : \"\"}\n            reference={reference}\n            onSelectRef={reference => route(compare ? {ref: reference.id, compare: compare.id} : {ref: reference.id})}\n            compareReference={compare}\n            onSelectCompare={compare => route(reference ? {ref: reference.id, compare: compare.id} : {compare: compare.id})}\n            onPaginate={after => {\n                const query = {after};\n                if (compare) query.compare = compare.id;\n                if (reference) query.ref = reference.id;\n                route(query);\n            }}\n        />\n    );\n};\n\nconst RepositoryComparePage = () => {\n    return (\n        <RefContextProvider>\n            <RepositoryPageLayout activePage={'compare'}>\n                <CompareContainer/>\n            </RepositoryPageLayout>\n        </RefContextProvider>\n    );\n};\n\nexport default RepositoryComparePage;","import {RepositoryPageLayout} from \"../../../../../lib/components/repository/layout\";\nimport {\n    ClipboardButton,\n    Error, LinkButton,\n    Loading\n} from \"../../../../../lib/components/controls\";\nimport React from \"react\";\nimport {RefContextProvider, useRefs} from \"../../../../../lib/hooks/repo\";\nimport Card from \"react-bootstrap/Card\";\nimport {useAPI, useAPIWithPagination} from \"../../../../../lib/hooks/api\";\nimport {commits, refs} from \"../../../../../lib/api\";\nimport moment from \"moment\";\nimport Table from \"react-bootstrap/Table\";\nimport Alert from \"react-bootstrap/Alert\";\nimport {ChangeEntryRow} from \"../../../../../lib/components/repository/changes\";\nimport {Paginator} from \"../../../../../lib/components/pagination\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport {BrowserIcon, LinkIcon, PackageIcon, PlayIcon} from \"@primer/octicons-react\";\nimport {Link} from \"../../../../../lib/components/nav\";\nimport {useRouter} from \"../../../../../lib/hooks/router\";\n\n\nconst ChangeList = ({ repo, commit, after, onPaginate }) => {\n    const {results, loading, error, nextPage} = useAPIWithPagination(async() => {\n        if (!commit.parents || commit.parents.length === 0) return {results: [], pagination: {has_more: false}};\n        return refs.diff(repo.id, commit.id, commit.parents[0], after);\n    }, [repo.id, commit.id, after]);\n\n    if (!!loading) return <Loading/>;\n    if (!!error) return <Error error={error}/>;\n\n    return (\n        <div className=\"tree-container\">\n            {(results.length === 0) ? <Alert variant=\"info\">No changes</Alert> : (\n                <Card>\n                    <Card.Body>\n                        <Table borderless size=\"sm\">\n                            <tbody>\n                            {results.map(entry => (\n                                <ChangeEntryRow key={entry.path} entry={entry} showActions={false}/>\n                            ))}\n                            </tbody>\n                        </Table>\n                    </Card.Body>\n                </Card>\n            )}\n\n            <Paginator onPaginate={onPaginate} nextPage={nextPage} after={after}/>\n        </div>\n    );\n};\n\nconst CommitActions = ({ repo, commit }) => {\n\n    const buttonVariant = \"outline-dark\";\n\n    return (\n        <div>\n            <ButtonGroup className=\"commit-actions\">\n                <LinkButton\n                    buttonVariant=\"outline-dark\"\n                    href={{pathname: '/repositories/:repoId/objects', params: {repoId: repo.id}, query: {ref: commit.id}}}\n                    tooltip=\"Browse commit objects\">\n                    <BrowserIcon/>\n                </LinkButton>\n                <LinkButton\n                    buttonVariant={buttonVariant}\n                    href={{pathname: '/repositories/:repoId/actions', params: {repoId: repo.id}, query: {commit: commit.id}}}\n                    tooltip=\"View Commit Action runs\">\n                    <PlayIcon/>\n                </LinkButton>\n                <ClipboardButton variant={buttonVariant} text={commit.id} tooltip=\"Copy ID to clipboard\"/>\n                <ClipboardButton variant={buttonVariant} text={`lakefs://${repo.id}/${commit.id}`} tooltip=\"Copy URI to clipboard\" icon={<LinkIcon/>}/>\n                <ClipboardButton variant={buttonVariant} text={`s3://${repo.id}/${commit.id}`} tooltip=\"Copy S3 URI to clipboard\" icon={<PackageIcon/>}/>\n            </ButtonGroup>\n        </div>\n    );\n};\n\n\nconst CommitMetadataTable = ({ commit }) => {\n    if (!commit.metadata) return <></>\n    const keys = Object.getOwnPropertyNames(commit.metadata)\n    if (keys.length === 0) return <></>\n\n    return (\n        <>\n        <Table>\n            <thead>\n                <tr>\n                    <th>Metadata Key</th>\n                    <th>Value</th>\n                </tr>\n            </thead>\n            <tbody>\n            {keys.map(key => (\n                <tr key={key}>\n                    <td><code>{key}</code></td>\n                    <td><code>{commit.metadata[key]}</code></td>\n                </tr>\n            ))}\n            </tbody>\n        </Table>\n        </>\n    );\n};\n\nconst CommitLink = ({ repoId, commitId }) => {\n    return (\n        <>\n            <Link href={{\n                pathname: '/repositories/:repoId/commits/:commitId',\n                params: {repoId, commitId}\n            }}>\n                <code>{commitId}</code>\n            </Link>\n            <br/>\n        </>\n    );\n}\n\nconst CommitInfo = ({ repo, commit }) => {\n    return (\n        <Table size=\"sm\" borderless hover>\n            <tbody>\n            <tr>\n                <td><strong>ID</strong></td>\n                <td>\n                    <CommitLink repoId={repo.id} commitId={commit.id}/>\n                </td>\n            </tr>\n            <tr>\n                <td><strong>Committer</strong></td>\n                <td>{commit.committer}</td>\n            </tr>\n            <tr>\n                <td><strong>Creation Date</strong></td>\n                <td>\n                    {moment.unix(commit.creation_date).format(\"MM/DD/YYYY HH:mm:ss\")} ({moment.unix(commit.creation_date).fromNow()})\n                </td>\n            </tr>\n            {(!!commit.parents) ? (\n            <tr>\n                <td>\n                    <strong>Parents</strong></td>\n                <td>\n                    {commit.parents.map(cid => (\n                        <CommitLink key={cid} repoId={repo.id} commitId={cid}/>\n                    ))}\n                </td>\n            </tr>\n            ) : <></>}\n            </tbody>\n        </Table>\n    );\n};\n\nconst CommitView = ({ repo, commitId, onPaginate, after }) => {\n\n    // pull commit itself\n    const {response, loading, error} = useAPI(async () => {\n        return await commits.get(repo.id, commitId);\n    }, [repo.id, commitId]);\n\n    if (loading) return <Loading/>;\n    if (!!error) return <Error error={error}/>;\n\n    const commit = response;\n\n    return (\n        <div className=\"mb-5 mt-3\">\n            <Card>\n                <Card.Body>\n                    <div className=\"clearfix\">\n                        <div className=\"float-left\">\n                            <Card.Title>{commit.message}</Card.Title>\n                        </div>\n                        <div className=\"float-right\">\n                            <CommitActions repo={repo} commit={commit}/>\n                        </div>\n                    </div>\n\n                    <div className=\"mt-4\">\n                        <CommitInfo repo={repo} commit={commit}/>\n                        <CommitMetadataTable commit={commit}/>\n                    </div>\n                </Card.Body>\n            </Card>\n\n            <div className=\"mt-4\">\n                <ChangeList repo={repo} commit={commit} onPaginate={onPaginate} after={after}/>\n            </div>\n        </div>\n    );\n};\n\nconst CommitContainer = () => {\n    const router = useRouter();\n    const { repo, loading, error } = useRefs();\n    const { after } = router.query;\n    const { commitId } = router.params;\n\n    if (loading) return <Loading/>;\n    if (!!error) return <Error error={error}/>;\n\n    return (\n        <CommitView\n            repo={repo}\n            after={(!!after) ? after : \"\"}\n            commitId={commitId}\n            onPaginate={after => router.push({\n                pathname: '/repositories/:repoId/commits/:commitId',\n                params: {repoId: repo.id, commitId},\n                query: {after}\n            })}\n        />\n    )\n}\n\n\nconst RepositoryCommitPage = () => {\n    return (\n        <RefContextProvider>\n            <RepositoryPageLayout activePage={'commits'}>\n                <CommitContainer/>\n            </RepositoryPageLayout>\n        </RefContextProvider>\n    )\n}\n\nexport default RepositoryCommitPage;\n","import React, {useState} from \"react\";\n\nimport moment from \"moment\";\nimport {BrowserIcon, LinkIcon, PackageIcon, PlayIcon} from \"@primer/octicons-react\";\n\nimport {commits} from \"../../../../lib/api\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Card from \"react-bootstrap/Card\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nimport {\n    ActionGroup,\n    ActionsBar,\n    ClipboardButton,\n    Error,\n    LinkButton,\n    Loading, RefreshButton\n} from \"../../../../lib/components/controls\";\nimport {RepositoryPageLayout} from \"../../../../lib/components/repository/layout\";\nimport {RefContextProvider, useRefs} from \"../../../../lib/hooks/repo\";\nimport {useAPIWithPagination} from \"../../../../lib/hooks/api\";\nimport {Paginator} from \"../../../../lib/components/pagination\";\nimport RefDropdown from \"../../../../lib/components/repository/refDropdown\";\nimport {Link} from \"../../../../lib/components/nav\";\nimport {useRouter} from \"../../../../lib/hooks/router\";\nimport {Route, Switch} from \"react-router-dom\";\nimport RepositoryCommitPage from \"./commit\";\n\n\nconst CommitWidget = ({ repo, commit }) => {\n\n    const buttonVariant = \"outline-dark\";\n\n    return (\n        <ListGroup.Item>\n            <div className=\"clearfix\">\n                <div className=\"float-left\">\n                    <h6>\n                        <Link href={{\n                            pathname: '/repositories/:repoId/commits/:commitId',\n                            params: {repoId: repo.id, commitId: commit.id}\n                        }}>\n                            {commit.message}\n                        </Link>\n                    </h6>\n                    <p>\n                        <small>\n                            <strong>{commit.committer}</strong> committed at <strong>{moment.unix(commit.creation_date).format(\"MM/DD/YYYY HH:mm:ss\")}</strong> ({moment.unix(commit.creation_date).fromNow()})\n                        </small>\n                    </p>\n                </div>\n                <div className=\"float-right\">\n                    <ButtonGroup className=\"commit-actions\">\n                        <LinkButton\n                            buttonVariant=\"outline-dark\"\n                            href={{\n                                pathname: '/repositories/:repoId/commits/:commitId',\n                                params: {repoId: repo.id, commitId: commit.id}\n                            }}>\n                            <code>{commit.id.substr(0, 16)}</code>\n                        </LinkButton>\n                        <LinkButton\n                            buttonVariant={buttonVariant}\n                            href={{pathname: '/repositories/:repoId/actions', query: {commit: commit.id}, params: {repoId: repo.id}}}\n                            tooltip=\"View Commit Action runs\">\n                            <PlayIcon/>\n                        </LinkButton>\n                        <ClipboardButton variant={buttonVariant} text={commit.id} tooltip=\"Copy ID to clipboard\"/>\n                        <ClipboardButton variant={buttonVariant} text={`lakefs://${repo.id}/${commit.id}`} tooltip=\"Copy URI to clipboard\" icon={<LinkIcon/>}/>\n                        <ClipboardButton variant={buttonVariant} text={`s3://${repo.id}/${commit.id}`} tooltip=\"Copy S3 URI to clipboard\" icon={<PackageIcon/>}/>\n\n                    </ButtonGroup>\n\n                    <div className=\"float-right ml-2\">\n                        <ButtonGroup className=\"commit-actions\">\n                            <LinkButton\n                                buttonVariant=\"outline-dark\"\n                                href={{pathname: '/repositories/:repoId/objects', params: {repoId: repo.id}, query: {ref: commit.id}}}\n                                tooltip=\"Browse objects at this commit\">\n                                <BrowserIcon/>\n                            </LinkButton>\n                        </ButtonGroup>\n                    </div>\n                </div>\n            </div>\n        </ListGroup.Item>\n    );\n}\n\n\nconst CommitsBrowser = ({ repo, reference, after, onPaginate, onSelectRef }) => {\n\n    const [refresh, setRefresh] = useState(true)\n    const { results, error, loading, nextPage } = useAPIWithPagination(async () => {\n        return commits.log(repo.id, reference.id, after)\n    }, [repo.id, reference.id, refresh, after])\n\n    if (loading) return <Loading/>\n    if (!!error) return <Error error={error}/>\n\n    return (\n        <div className=\"mb-5\">\n\n            <ActionsBar>\n                <ActionGroup orientation=\"left\">\n                    <RefDropdown\n                        repo={repo}\n                        selected={(!!reference) ? reference : null}\n                        withCommits={true}\n                        withWorkspace={false}\n                        selectRef={onSelectRef}\n                    />\n                </ActionGroup>\n\n                <ActionGroup orientation=\"right\">\n                    <RefreshButton onClick={() => { setRefresh(!refresh); }}/>\n                </ActionGroup>\n            </ActionsBar>\n\n            <Card>\n                <ListGroup variant=\"flush\">\n                {results.map(commit => (\n                    <CommitWidget key={commit.id} repo={repo} commit={commit}/>\n                ))}\n                </ListGroup>\n            </Card>\n            <Paginator onPaginate={onPaginate} nextPage={nextPage} after={after}/>\n        </div>\n    )\n\n\n}\n\n\nconst CommitsContainer = () => {\n    const router = useRouter();\n    const { after } = router.query;\n    const { repo, reference, loading ,error } = useRefs();\n\n    if (loading) return <Loading/>;\n    if (!!error) return <Error error={error}/>;\n\n    const params = {repoId: repo.id};\n\n    return (\n        <CommitsBrowser\n            repo={repo}\n            reference={reference}\n            onSelectRef={ref => router.push({\n                pathname: `/repositories/:repoId/commits`,\n                query: {ref: ref.id},\n                params\n            })}\n            after={(!!after) ? after : \"\"}\n            onPaginate={after => router.push({\n                    pathname: `/repositories/:repoId/commits`,\n                    query: {ref: reference.id, after},\n                    params\n                })}\n        />\n    );\n};\n\n\nconst RepositoryCommitsPage = () => {\n    return (\n        <RefContextProvider>\n            <RepositoryPageLayout activePage={'commits'}>\n                <CommitsContainer/>\n            </RepositoryPageLayout>\n        </RefContextProvider>\n    );\n};\n\nconst RepositoryCommitsIndexPage = () => {\n    return (\n        <Switch>\n            <Route exact path=\"/repositories/:repoId/commits\">\n                <RepositoryCommitsPage/>\n            </Route>\n            <Route path=\"/repositories/:repoId/commits/:commitId\">\n                <RepositoryCommitPage/>\n            </Route>\n        </Switch>\n    )\n}\n\nexport default RepositoryCommitsIndexPage;","import React from \"react\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport {CheckCircleFillIcon, StopwatchIcon, XCircleFillIcon} from \"@primer/octicons-react\";\n\n\nexport const ActionStatusIcon = ({ status, className = null }) => {\n    let icon = <StopwatchIcon fill=\"orange\" verticalAlign=\"middle\"/>\n    if (status === \"completed\") {\n        icon = <CheckCircleFillIcon fill=\"green\" verticalAlign=\"middle\"/>\n    } else if (status === \"failed\") {\n        icon = <XCircleFillIcon fill=\"red\" verticalAlign=\"middle\"/>\n    }\n    // otherwise, probably still running\n    return (\n        <OverlayTrigger placement=\"bottom\" overlay={<Tooltip>{status}</Tooltip>}>\n                <span className={className}>{icon}</span>\n        </OverlayTrigger>\n    );\n};\n\n","import {RepositoryPageLayout} from \"../../../../../lib/components/repository/layout\";\nimport {Error, FormattedDate, Loading, Na} from \"../../../../../lib/components/controls\";\nimport React, {useState} from \"react\";\nimport {RefContextProvider, useRefs} from \"../../../../../lib/hooks/repo\";\nimport {useAPI} from \"../../../../../lib/hooks/api\";\nimport {actions} from \"../../../../../lib/api\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport {\n    ChevronDownIcon, ChevronRightIcon,\n    HomeIcon,\n    PlayIcon,\n} from \"@primer/octicons-react\";\nimport Button from \"react-bootstrap/Button\";\nimport moment from \"moment\";\nimport {ActionStatusIcon} from \"../../../../../lib/components/repository/actions\";\nimport Table from \"react-bootstrap/Table\";\nimport {Link} from \"../../../../../lib/components/nav\";\nimport {useRouter} from \"../../../../../lib/hooks/router\";\n\n\nconst RunSummary = ({ repo, run }) => {\n    return (\n        <Table size=\"lg\">\n            <tbody>\n                <tr>\n                    <td><strong>ID</strong></td>\n                    <td>{run.run_id}</td>\n                </tr>\n                <tr>\n                    <td><strong>Event Type</strong></td>\n                    <td>{run.event_type}</td>\n                </tr>\n                <tr>\n                    <td><strong>Status</strong></td>\n                    <td>{run.status}</td>\n                </tr>\n                <tr>\n                    <td><strong>Branch</strong></td>\n                    <td>\n                    {(!run.branch) ? <Na/> :\n                        <Link className=\"mr-2\" href={{\n                            pathname: '/repositories/:repoId/objects',\n                            params: {repoId: repo.id},\n                            query: {ref: run.branch}\n                        }}>\n                            {run.branch}\n                        </Link>\n                    }\n                    </td>\n                </tr>\n                <tr>\n                    <td><strong>Commit</strong></td>\n                    <td>\n                        {(!run.commit_id) ? <Na/> : <Link className=\"mr-2\" href={{\n                        pathname: '/repositories/:repoId/commits/:commitId',\n                        params: {repoId: repo.id, commitId: run.commit_id}\n                        }}>\n                            <code>{run.commit_id.substr(0, 12)}</code>\n                        </Link>\n                        }\n                    </td>\n                </tr>\n                <tr>\n                    <td><strong>Start Time</strong></td>\n                    <td>{(!run.start_time) ? <Na/> :<FormattedDate dateValue={run.start_time}/>}</td>\n                </tr>\n                <tr>\n                    <td><strong>End Time</strong></td>\n                    <td>{(!run.end_time) ? <Na/> :<FormattedDate dateValue={run.end_time}/>}</td>\n                </tr>\n            </tbody>\n        </Table>\n    );\n};\n\n\nconst HookLog = ({ repo, run, execution }) => {\n    const [expanded, setExpanded] = useState(false);\n    const {response, loading, error} = useAPI(() => {\n        if (!expanded) return '';\n        return actions.getRunHookOutput(repo.id, run.run_id, execution.hook_run_id);\n    }, [repo.id, execution.hook_id, execution.hook_run_id, expanded]);\n\n    let content = <></>;\n    if (expanded) {\n        if (loading) {\n            content = <pre>Loading...</pre>;\n        } else if (!!error) {\n            content = <Error error={error}/>;\n        } else {\n            content = <pre>{response}</pre>;\n        }\n    }\n\n    let duration = '(running)';\n    if (execution.status === 'completed' || execution.status === 'failed') {\n        const endTs = moment(execution.end_time);\n        const startTs = moment(execution.start_time);\n        const diff = moment.duration(endTs.diff(startTs)).asSeconds();\n        duration = `(${execution.status} in ${diff}s)`;\n    }\n\n    return (\n            <div className=\"hook-log\">\n\n                <p className=\"mb-3 hook-log-title\">\n                    <Button variant=\"link\" onClick={() => {setExpanded(!expanded)}}>\n                        {(expanded) ?  <ChevronDownIcon size=\"small\"/> : <ChevronRightIcon size=\"small\"/>}\n                    </Button>\n                    {' '}\n                    <ActionStatusIcon status={execution.status}/>\n                    {' '}\n                    {execution.hook_id}\n\n                    <small>\n                        {duration}\n                    </small>\n                </p>\n\n                <div className=\"hook-log-content\">\n                    {content}\n                </div>\n            </div>\n    )\n}\n\nconst ExecutionsExplorer = ({ repo, run, executions }) => {\n    return (\n        <div className=\"hook-logs\">\n            {executions.map(exec => (\n                <HookLog key={`${exec.hook_id}-${exec.hook_run_id}`} repo={repo} run={run} execution={exec}/>\n            ))}\n        </div>\n    );\n};\n\nconst ActionBrowser = ({ repo, run, hooks, onSelectAction, selectedAction = null }) => {\n\n    const hookRuns = hooks.results;\n\n    // group by action\n    const actionNames = {};\n    hookRuns.forEach(hookRun => { actionNames[hookRun.action] = true });\n    const actions = Object.getOwnPropertyNames(actionNames).sort();\n\n    let content = <RunSummary repo={repo} run={run}/>\n    if (selectedAction !== null) {\n        // we're looking at a specific action, let's filter\n        const actionRuns = hookRuns\n            .filter(hook => hook.action === selectedAction)\n            .sort((a, b) => {\n                if (a.hook_run_id > b.hook_run_id) return 1;\n                else if (a.hook_run_id < b.hook_run_id) return -1;\n                return 0;\n            })\n        content = <ExecutionsExplorer run={run} repo={repo} executions={actionRuns}/>;\n    }\n\n    return (\n        <Row className=\"mt-3\">\n            <Col md={{span: 3}}>\n                <ListGroup variant=\"flush\">\n                    <ListGroup.Item action\n                        active={(!selectedAction)}\n                        onClick={() => onSelectAction(null)}>\n                        <HomeIcon/> Summary\n                    </ListGroup.Item>\n                </ListGroup>\n\n                <div className=\"mt-3\">\n\n                    <h6>Actions</h6>\n\n                    <ListGroup>\n                        {actions.map(actionName => (\n                            <ListGroup.Item action\n                                key={actionName}\n                                active={(selectedAction === actionName)}\n                                onClick={() => onSelectAction(actionName)}>\n                                <PlayIcon/> {actionName}\n                            </ListGroup.Item>\n                        ))}\n                    </ListGroup>\n                </div>\n            </Col>\n            <Col md={{span: 9}}>\n                {content}\n            </Col>\n        </Row>\n    );\n};\n\n\nconst RunContainer = ({ repo, runId, onSelectAction, selectedAction }) => {\n    const {response, error, loading} = useAPI(async () => {\n        const [ run, hooks ] = await Promise.all([\n            actions.getRun(repo.id, runId),\n            actions.listRunHooks(repo.id, runId)\n        ]);\n        return {run, hooks};\n    }, [repo.id, runId]);\n\n    if (loading) return <Loading/>;\n    if (!!error) return <Error error={error}/>;\n\n    return (\n        <ActionBrowser\n            repo={repo}\n            run={response.run}\n            hooks={response.hooks}\n            onSelectAction={onSelectAction}\n            selectedAction={selectedAction}\n        />\n    )\n}\n\nconst ActionContainer = () => {\n    const router = useRouter();\n    const { action } = router.query;\n    const { runId } = router.params;\n    const {loading, error, repo} = useRefs();\n\n    if (loading) return <Loading/>;\n    if (!!error) return <Error error={error}/>;\n\n    const params = {repoId: repo.id, runId};\n\n    return <RunContainer\n        repo={repo}\n        runId={runId}\n        selectedAction={(!!action) ? action : null}\n        onSelectAction={action => {\n            const query = {};\n            if (!!action) query.action = action;\n            router.push({\n                pathname: '/repositories/:repoId/actions/:runId', query, params\n            });\n        }}\n    />\n}\n\nconst RepositoryActionPage = () => {\n    return (\n        <RefContextProvider>\n            <RepositoryPageLayout activePage={'actions'} fluid>\n                <ActionContainer/>\n            </RepositoryPageLayout>\n        </RefContextProvider>\n    );\n};\n\nexport default RepositoryActionPage;","import {RepositoryPageLayout} from \"../../../../lib/components/repository/layout\";\nimport {\n    ActionGroup,\n    ActionsBar,\n    Error,\n    FormattedDate,\n    Loading, Na, RefreshButton,\n    TooltipButton\n} from \"../../../../lib/components/controls\";\nimport React, {useState} from \"react\";\nimport {RefContextProvider, useRefs} from \"../../../../lib/hooks/repo\";\nimport {useAPIWithPagination} from \"../../../../lib/hooks/api\";\nimport {actions} from \"../../../../lib/api\";\nimport {\n    FilterIcon,\n    XIcon\n} from \"@primer/octicons-react\";\nimport Table from \"react-bootstrap/Table\";\nimport {Paginator} from \"../../../../lib/components/pagination\";\nimport {ActionStatusIcon} from \"../../../../lib/components/repository/actions\";\nimport {Route, Switch} from \"react-router-dom\";\nimport {Link} from \"../../../../lib/components/nav\";\nimport {useRouter} from \"../../../../lib/hooks/router\";\nimport RepositoryActionPage from \"./run\";\n\n\nconst RunRow = ({ repo, run, onFilterBranch, onFilterCommit }) => {\n    return (\n        <tr>\n            <td>\n                <ActionStatusIcon className=\"mr-2\" status={run.status}/>\n                {' '}\n                <Link href={{\n                    pathname: '/repositories/:repoId/actions/:runId',\n                    params: {repoId: repo.id, runId: run.run_id}\n                }}>\n                    {run.run_id}\n                </Link>\n            </td>\n            <td>{run.event_type}</td>\n            <td>\n                <Link className=\"mr-2\" href={{\n                    pathname: '/repositories/:repoId/objects',\n                    params: {repoId: repo.id},\n                    query: {ref: run.branch}\n                }}>\n                    {run.branch}\n                </Link>\n                <TooltipButton\n                    onClick={() => onFilterBranch(run.branch)}\n                    variant=\"link\"\n                    tooltip=\"filter by branch\"\n                    className=\"row-hover\"\n                    size=\"sm\">\n                    <FilterIcon size=\"small\"/>\n                </TooltipButton>\n            </td>\n            <td><FormattedDate dateValue={run.start_time}/></td>\n            <td>\n                {(!run.end_time) ? <Na/> :<FormattedDate dateValue={run.end_time}/>}\n            </td>\n            <td>\n                {(!run.commit_id) ? <Na/> : (\n                    <>\n                        <Link className=\"mr-2\" href={{\n                            pathname: '/repositories/:repoId/commits/:commitId',\n                            params: {repoId: repo.id, commitId: run.commit_id}\n                        }}>\n                            <code>{run.commit_id.substr(0, 12)}</code>\n                        </Link>\n                        <TooltipButton\n                            onClick={() => onFilterCommit(run.commit_id)}\n                            variant=\"link\"\n                            tooltip=\"filter by commit ID\"\n                            className=\"row-hover\"\n                            size=\"sm\">\n                            <FilterIcon size=\"small\"/>\n                        </TooltipButton>\n                    </>\n                )}\n            </td>\n        </tr>\n    )\n}\n\nconst RunTable = ({ repo, runs, nextPage, after, onPaginate, onFilterBranch, onFilterCommit }) => {\n    return (\n        <>\n            <Table>\n                <thead>\n                    <tr>\n                        <th>Run ID</th>\n                        <th>Event</th>\n                        <th>Branch</th>\n                        <th>Start Time</th>\n                        <th>End Time</th>\n                        <th>Commit ID</th>\n                    </tr>\n                </thead>\n                <tbody>\n                {runs.map(run => <RunRow\n                    key={run.run_id}\n                    repo={repo}\n                    run={run}\n                    onFilterBranch={onFilterBranch}\n                    onFilterCommit={onFilterCommit}/>)}\n                </tbody>\n            </Table>\n            <Paginator onPaginate={onPaginate} after={after} nextPage={nextPage}/>\n        </>\n    )\n}\n\nconst ActionsList = ({ repo, after, onPaginate, branch, commit, onFilterBranch, onFilterCommit }) => {\n\n    const [refresh, setRefresh] = useState(false)\n    const {results, loading, error, nextPage} = useAPIWithPagination(async () => {\n        return await actions.listRuns(repo.id, branch, commit, after)\n    }, [repo.id, after, refresh, branch, commit])\n\n    const doRefresh = () => setRefresh(!refresh)\n\n    let content;\n    if (!!error) content = <Error error={error}/>\n    else if (loading) content = <Loading/>\n    else content = (\n            <RunTable\n                repo={repo}\n                runs={results}\n                nextPage={nextPage}\n                after={after}\n                onPaginate={onPaginate}\n                onFilterCommit={onFilterCommit}\n                onFilterBranch={onFilterBranch}\n            />\n    )\n\n    let filters = [];\n    if (!!branch) {\n        filters = [<TooltipButton key=\"branch\" variant=\"light\" tooltip=\"remove branch filter\" onClick={() => onFilterBranch(\"\")}>\n            <XIcon/> {branch}\n        </TooltipButton>]\n    }\n    if (!!commit) {\n        filters = [...filters, <TooltipButton key=\"commit\" variant=\"light\" tooltip=\"remove commit filter\" onClick={() => onFilterCommit(\"\")}>\n            <XIcon/>  {commit.substr(0, 12)}\n        </TooltipButton> ]\n    }\n\n    return (\n        <div className=\"mb-5\">\n            <ActionsBar>\n                <ActionGroup orientation=\"left\">\n                    {filters}\n                </ActionGroup>\n\n                <ActionGroup orientation=\"right\">\n                    <RefreshButton onClick={doRefresh}/>\n                </ActionGroup>\n            </ActionsBar>\n\n            {content}\n        </div>\n    )\n}\n\n\nconst ActionsContainer = () => {\n    const router = useRouter();\n    const { after } = router.query;\n    const commit = (!!router.query.commit) ? router.query.commit : \"\";\n    const branch = (!!router.query.branch) ? router.query.branch : \"\";\n\n    const { repo, loading, error } = useRefs();\n\n    if (loading) return <Loading/>;\n    if (!!error) return <Error error={error}/>;\n\n    const params = {repoId: repo.id};\n\n    return (\n        <ActionsList\n            repo={repo}\n            after={after}\n            onPaginate={after => {\n                const query = {after};\n                if (!!commit) query.commit = commit;\n                if (!!branch) query.branch = branch;\n                router.push({pathname: `/repositories/:repoId/actions`, query, params})\n            }}\n            branch={branch}\n            commit={commit}\n            onFilterBranch={branch => {\n                const query = {}; // will reset pagination\n                if (!!branch) query.branch = branch;\n                router.push({pathname: `/repositories/:repoId/actions`, query, params})\n            }}\n            onFilterCommit={commit => {\n                const query = {} // will reset pagination\n                if (!!commit) query.commit = commit;\n                router.push({pathname: `/repositories/:repoId/actions`, query, params})\n            }}\n        />\n    );\n};\n\nconst RepositoryActionsPage = () => {\n    return (\n        <RefContextProvider>\n            <RepositoryPageLayout activePage={'actions'}>\n                <ActionsContainer/>\n            </RepositoryPageLayout>\n        </RefContextProvider>\n    );\n};\n\nconst RepositoryActionsIndexPage = () => {\n    return (\n        <Switch>\n            <Route exact path=\"/repositories/:repoId/actions\">\n                <RepositoryActionsPage/>\n            </Route>\n            <Route exact path=\"/repositories/:repoId/actions/:runId\">\n                <RepositoryActionPage/>\n            </Route>\n        </Switch>\n    );\n};\n\nexport default RepositoryActionsIndexPage;","import {RepositoryPageLayout} from \"../../../lib/components/repository/layout\";\nimport {RefContextProvider, useRefs} from \"../../../lib/hooks/repo\";\nimport React, {useRef, useState} from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport {TrashIcon} from \"@primer/octicons-react\";\nimport Col from \"react-bootstrap/Col\";\nimport {Error, Loading} from \"../../../lib/components/controls\";\nimport Modal from \"react-bootstrap/Modal\";\nimport {repositories} from \"../../../lib/api\";\nimport {useRouter} from \"../../../lib/hooks/router\";\n\n\nconst DeleteRepositoryModal = ({repo, show, onSubmit, onCancel}) => {\n    const [isDisabled, setIsDisabled] = useState(true);\n    const repoNameField = useRef(null);\n\n    const compareRepoName = () => {\n        setIsDisabled(repoNameField.current.value !== repo.id);\n    };\n\n    return (\n        <Modal show={show} onHide={onCancel} size=\"lg\">\n            <Modal.Header closeButton>\n                <Modal.Title>Delete Repository</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                Are you sure you wish to delete repository <strong>{repo.id}</strong>? <br />\n                This action cannot be undone. This will delete the following: <br /> <br />\n\n                <ul>\n                    <li>All commits</li>\n                    <li>All branches</li>\n                    <li>All tags</li>\n                    <li>All repository configuration</li>\n                </ul>\n\n                Data in the underlying object store will not be deleted by this action. <br /> <br />\n\n                Please type <strong>{repo.id}</strong> to confirm: <br />\n                <Form.Control className=\"mt-2\" placeholder=\"Enter repository name to confirm\" type=\"text\" autoFocus ref={repoNameField} onChange={compareRepoName}/>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button disabled={isDisabled} variant=\"danger\" onClick={onSubmit}>I understand the consequences, delete this repository</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nconst SettingsContainer = () => {\n    const router = useRouter();\n    const { repo, loading, error} = useRefs();\n    const [showingDeleteModal, setShowDeleteModal] = useState(false);\n    const [ deletionError, setDeletionError ] = useState(null);\n\n    if (loading) return <Loading/>;\n    if (!!error) return <Error error={error}/>;\n    if (!!deletionError) return <Error error={deletionError}/>;\n\n    return (\n        <div className=\"mt-3 mb-5\">\n\n            <div className=\"section-title\">\n                <h4>General</h4>\n            </div>\n\n            <Container>\n                <Row>\n                    <Form.Label column md={{span:2}} className=\"mb-3\">\n                        Repository name\n                    </Form.Label>\n                    <Col md={{span:4}}>\n                        <Form.Control readOnly value={repo.id} type=\"text\"/>\n                    </Col>\n                </Row>\n                <Row>\n                    <Form.Label column md={{span:2}} className=\"mb-3\">\n                        Storage namespace\n                    </Form.Label>\n                    <Col md={{span:4}}>\n                        <Form.Control readOnly value={repo.storage_namespace} type=\"text\"/>\n                    </Col>\n                </Row>\n                <Row>\n                    <Form.Label column md={{span:2}} className=\"mb-3\">\n                        Default branch\n                    </Form.Label>\n                    <Col md={{span:4}}>\n                        <Form.Control readOnly value={repo.default_branch} type=\"text\"/>\n                    </Col>\n                </Row>\n            </Container>\n\n            <Button variant=\"danger\" className=\"mt-3\" onClick={() => setShowDeleteModal(!showingDeleteModal)}>\n                <TrashIcon/> Delete this repository\n            </Button>\n\n            <DeleteRepositoryModal\n                repo={repo}\n                onCancel={() => { setShowDeleteModal(false) }}\n                onSubmit={() => {\n                    repositories.delete(repo.id).catch(err => {\n                        setDeletionError(err)\n                    }).then(() => {\n                        return router.push('/repositories')\n                    })\n                }}\n                show={showingDeleteModal}/>\n        </div>\n    );\n};\n\n\nconst RepositorySettingsPage = () => {\n    return (\n        <RefContextProvider>\n            <RepositoryPageLayout activePage={'settings'}>\n                <SettingsContainer/>\n            </RepositoryPageLayout>\n        </RefContextProvider>\n    )\n}\n\n\n\nexport default RepositorySettingsPage;","import {Redirect, Route, Switch} from \"react-router-dom\";\nimport RepositoryObjectsPage from \"./objects\";\nimport RepositoryChangesPage from \"./changes\";\nimport RepositoryBranchesPage from \"./branches\";\nimport RepositoryComparePage from \"./compare\";\nimport RepositoryCommitsIndexPage from \"./commits\";\nimport RepositoryActionsIndexPage from \"./actions\";\nimport RepositorySettingsPage from \"./settings\";\n\n\nconst RepositoryPage = () => {\n    return (\n        <Switch>\n            <Route exact path=\"/\">\n                <Redirect to=\"/repositories\"/>\n            </Route>\n            <Route path=\"/repositories/:repoId/objects\">\n                <RepositoryObjectsPage/>\n            </Route>\n            <Route path=\"/repositories/:repoId/changes\">\n                <RepositoryChangesPage/>\n            </Route>\n            <Route path=\"/repositories/:repoId/commits\">\n                <RepositoryCommitsIndexPage/>\n            </Route>\n            <Route path=\"/repositories/:repoId/branches\">\n                <RepositoryBranchesPage/>\n            </Route>\n            <Route path=\"/repositories/:repoId/compare\">\n                <RepositoryComparePage/>\n            </Route>\n            <Route path=\"/repositories/:repoId/actions\">\n                <RepositoryActionsIndexPage/>\n            </Route>\n            <Route path=\"/repositories/:repoId/settings\">\n                <RepositorySettingsPage/>\n            </Route>\n        </Switch>\n    )\n};\n\nexport default RepositoryPage;","import Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\n\nimport {RepoIcon, SearchIcon} from \"@primer/octicons-react\";\nimport {useState} from \"react\";\nimport * as moment from \"moment\";\n\nimport Layout from \"../../lib/components/layout\";\nimport {\n    ActionsBar,\n    Loading,\n    useDebouncedState\n} from \"../../lib/components/controls\";\nimport {config, repositories} from '../../lib/api';\nimport {RepositoryCreateForm} from \"../../lib/components/repositoryCreateForm\";\nimport {Error} from \"../../lib/components/controls\"\nimport {useAPI, useAPIWithPagination} from \"../../lib/hooks/api\";\nimport {Paginator} from \"../../lib/components/pagination\";\nimport Container from \"react-bootstrap/Container\";\nimport {Link} from \"../../lib/components/nav\";\nimport {useRouter} from \"../../lib/hooks/router\";\n\nimport {Route, Switch} from \"react-router-dom\";\nimport RepositoryPage from './repository';\n\n\n\nconst CreateRepositoryModal = ({show, error, onSubmit, onCancel}) => {\n\n    const { response, error: err, loading } = useAPI(() => {\n        return config.get()\n    })\n\n    const showError = (!!error) ? error : err\n    if (loading)\n        return (\n            <Modal show={show} onHide={onCancel} size=\"lg\">\n                <Modal.Header closeButton>\n                    <Modal.Title>Create A New Repository</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Loading/>\n                </Modal.Body>\n            </Modal>\n        )\n\n    return (\n        <Modal show={show} onHide={onCancel} size=\"lg\">\n            <Modal.Header closeButton>\n                <Modal.Title>Create A New Repository</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <RepositoryCreateForm config={response} error={showError} onSubmit={onSubmit} onCancel={onCancel}/>\n            </Modal.Body>\n        </Modal>\n    );\n};\n\n\n\nconst RepositoryList = ({ onPaginate, prefix, after, refresh }) => {\n\n    const {results, loading, error, nextPage} = useAPIWithPagination(() => {\n        return repositories.list(prefix, after)\n    }, [refresh, prefix, after])\n\n    if (loading) return <Loading/>;\n    if (!!error) return <Error error={error}/>\n\n    return (\n        <div>\n            {results.map(repo => (\n                <Row key={repo.id}>\n                    <Col className={\"mb-2 mt-2\"}>\n                        <Card>\n                            <Card.Body>\n                                <h5>\n                                    <Link href={{\n                                        pathname: `/repositories/:repoId/objects`,\n                                        params: {repoId: repo.id}\n                                    }}>\n                                        {repo.id}\n                                    </Link>\n                                </h5>\n                                <p>\n                                    <small>\n                                        created at <code>{moment.unix(repo.creation_date).toISOString()}</code> ({moment.unix(repo.creation_date).fromNow()})<br/>\n                                        default branch: <code>{repo.default_branch}</code>,{' '}\n                                        storage namespace: <code>{repo.storage_namespace}</code>\n                                    </small>\n                                </p>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            ))}\n\n            <Paginator after={after} nextPage={nextPage} onPaginate={onPaginate}/>\n        </div>\n    );\n};\n\n\n\nconst RepositoriesPage = () => {\n    const router = useRouter();\n    const [showCreateModal, setShowCreateModal] = useState(false);\n    const [createError, setCreateError] = useState(null);\n    const [refresh, setRefresh] = useState(false);\n\n    const routerPfx = (!!router.query.prefix) ? router.query.prefix : \"\";\n    const [prefix, setPrefix] = useDebouncedState(\n        routerPfx,\n        (prefix) => router.push({pathname: `/repositories`, query: {prefix}})\n    );\n\n    const createRepo = async (repo) => {\n        try {\n            await repositories.create(repo)\n            setRefresh(!refresh);\n            setCreateError(null)\n            router.push({pathname: `/repositories/:repoId/objects`, params: {repoId: repo.name}});\n        } catch (error) {\n            setCreateError(error);\n        }\n    }\n\n    return (\n        <Layout>\n            <Container fluid=\"xl\" className=\"mt-3\">\n                <ActionsBar>\n                    <Form className=\"float-left\" style={{minWidth: 300}} onSubmit={e => { e.preventDefault(); }}>\n                        <Form.Row>\n                            <Col>\n                                <InputGroup>\n                                    <InputGroup.Prepend>\n                                        <InputGroup.Text>\n                                            <SearchIcon/>\n                                        </InputGroup.Text>\n                                    </InputGroup.Prepend>\n                                    <Form.Control\n                                        placeholder=\"Find a repository...\"\n                                        autoFocus\n                                        value={prefix}\n                                        onChange={event => setPrefix(event.target.value)}\n                                    />\n                                </InputGroup>\n                            </Col>\n                        </Form.Row>\n                    </Form>\n                    <ButtonToolbar className=\"justify-content-end mb-2\">\n                        <Button variant=\"success\" onClick={() => {\n                            setShowCreateModal(true);\n                            setCreateError(null);\n                        }}>\n                            <RepoIcon/> Create Repository\n                        </Button>\n                    </ButtonToolbar>\n                </ActionsBar>\n\n                <RepositoryList\n                    prefix={routerPfx}\n                    refresh={refresh}\n                    after={(!!router.query.after) ? router.query.after : \"\"}\n                    onPaginate={after => {\n                        const query = {after};\n                        if (!!router.query.prefix) query.prefix = router.query.prefix;\n                        router.push({pathname: `/repositories`, query});\n                    }}\n                    />\n\n                <CreateRepositoryModal\n                    onCancel={() => setShowCreateModal(false)}\n                    show={showCreateModal}\n                    error={createError}\n                    onSubmit={(repo) => createRepo(repo)}/>\n            </Container>\n        </Layout>\n    );\n}\n\nconst RepositoriesIndex = () => {\n    return (\n        <Switch>\n            <Route exact path=\"/repositories\">\n                <RepositoriesPage/>\n            </Route>\n            <Route path=\"/repositories/:repoId\">\n                <RepositoryPage/>\n            </Route>\n        </Switch>\n    );\n};\n\nexport default RepositoriesIndex;\n","import Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Card from \"react-bootstrap/Card\";\n\nimport Layout from \"../layout\";\nimport {Link} from \"../nav\";\n\n\nexport const AuthLayout = ({ children, activeTab }) => {\n    return (\n        <Layout>\n            <Container fluid=\"xl\">\n                <Row className=\"mt-5\">\n                    <Col md={{span: 3}}>\n                        <Card>\n                            <Card.Header>\n                                <Card.Title>Access Control</Card.Title>\n                            </Card.Header>\n                            <Card.Body>\n                                <Nav variant=\"pills\" className=\"flex-column\">\n                                    <Link component={Nav.Link} href=\"/auth/credentials\" active={activeTab === 'credentials'}>\n                                        My Credentials\n                                    </Link>\n                                </Nav>\n\n                                <hr/>\n\n                                <Nav variant=\"pills\" className=\"flex-column\">\n                                    <Link component={Nav.Link} href=\"/auth/users\" active={activeTab === 'users'}>\n                                       Users\n                                    </Link>\n\n                                    <Link component={Nav.Link} href=\"/auth/groups\" active={activeTab === 'groups'}>\n                                        Groups\n                                    </Link>\n                                    <Link component={Nav.Link} href=\"/auth/policies\" active={activeTab === 'policies'}>\n                                        Policies\n                                    </Link>\n                                </Nav>\n                            </Card.Body>\n                        </Card>\n\n                    </Col>\n                    <Col md={{span: 9}}>\n                        {children}\n                    </Col>\n                </Row>\n            </Container>\n        </Layout>\n    );\n};\n\n","import {useState} from \"react\";\n\nimport Modal from \"react-bootstrap/Modal\";\nimport Table from \"react-bootstrap/Table\";\nimport Alert from \"react-bootstrap/Alert\";\n\nimport {auth} from \"../../api\";\nimport {useAPIWithPagination} from \"../../hooks/api\";\nimport {ClipboardButton, DataTable, Error, FormattedDate, Loading} from \"../controls\";\nimport {ConfirmationButton} from \"../modals\";\nimport {Paginator} from \"../pagination\";\n\n\nexport const CredentialsTable = ({userId, currentAccessKey, refresh, after, onPaginate}) => {\n    const [internalRefresh, setInternalRefresh] = useState(false);\n    const [revokeError, setRevokeError] = useState(null);\n\n    const {results, error, loading, nextPage} = useAPIWithPagination(() => {\n        return auth.listCredentials(userId, after);\n    }, [refresh, internalRefresh, userId, after]);\n\n    if (!!error) return <Error error={error}/>;\n    if (!!revokeError) return <Error error={revokeError}/>;\n    if (loading) return <Loading/>;\n\n    return (\n        <>\n            <DataTable\n                keyFn={row => row.access_key_id}\n                emptyState={'No credentials found'}\n                results={results}\n                headers={['Access Key ID', 'Creation Date', '']}\n                rowFn={row => [\n                    <>\n                        <code>{row.access_key_id}</code>\n                        {(currentAccessKey === row.access_key_id) && <strong>{' '}(current)</strong>}\n                    </>,\n                    <FormattedDate dateValue={row.creation_date}/>,\n                    <span className=\"row-hover\">\n                    {(currentAccessKey !== row.access_key_id) &&\n                    <ConfirmationButton\n                        variant=\"outline-danger\"\n                        size=\"sm\"\n                        msg={<span>Are you sure you'd like to delete access key <code>{row.access_key_id}</code>?</span>}\n                        onConfirm={() => {\n                            auth.deleteCredentials(userId, row.access_key_id)\n                                .catch(err => setRevokeError(err))\n                                .then(() => setInternalRefresh(!internalRefresh))\n                        }}>\n                        Revoke\n                    </ConfirmationButton>\n                    }\n                    </span>\n                ]}\n            />\n            <Paginator onPaginate={onPaginate} after={after} nextPage={nextPage}/>\n        </>\n    );\n};\n\n\nexport const CredentialsShowModal = ({ credentials, show, onHide }) => {\n    if (!credentials) return <></>;\n\n    return (\n        <Modal show={show} onHide={onHide} size=\"lg\">\n            <Modal.Header closeButton>\n                <Modal.Title>Create Access Key</Modal.Title>\n            </Modal.Header>\n\n            <Modal.Body>\n                <Table>\n                    <tbody>\n                    <tr>\n                        <td><strong>Access Key ID</strong></td>\n                        <td><code>{credentials.access_key_id}</code></td>\n                        <td>\n                            <ClipboardButton variant=\"outline-dark\" tooltip=\"Copy to clipboard\" text={credentials.access_key_id}/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td><strong>Secret Access Key</strong></td>\n                        <td><code>{credentials.secret_access_key}</code></td>\n                        <td>\n                            <ClipboardButton variant=\"outline-dark\" tooltip=\"Copy to clipboard\" text={credentials.secret_access_key}/>\n                        </td>\n                    </tr>\n                    </tbody>\n                </Table>\n\n                <Alert variant=\"warning\" className=\"mt-3\">Copy the Secret Access Key and store it somewhere safe. You will not be able to access it again.</Alert>\n            </Modal.Body>\n        </Modal>\n    );\n};\n","import {AuthLayout} from \"../../lib/components/auth/layout\";\nimport {\n    ActionGroup,\n    ActionsBar,\n    Error,\n    RefreshButton\n} from \"../../lib/components/controls\";\nimport {ConfirmationButton} from \"../../lib/components/modals\";\nimport useUser from \"../../lib/hooks/user\";\nimport {auth} from \"../../lib/api\";\nimport {useState} from \"react\";\nimport {CredentialsShowModal, CredentialsTable} from \"../../lib/components/auth/credentials\";\nimport {useRouter} from \"../../lib/hooks/router\";\n\n\nconst CredentialsContainer = () => {\n    const router = useRouter();\n    const { user } = useUser();\n    const userId = (!!user) ? user.id : \"\";\n    const [refreshToken, setRefreshToken] = useState(false);\n    const [createError, setCreateError] = useState(null);\n    const [createdKey, setCreatedKey] = useState(null);\n    const { after } = router.query;\n\n    const createKey = () => {\n        return auth.createCredentials(user.id)\n            .catch(err => {\n                setCreateError(err);\n            }).then(key => {\n                setCreateError(null);\n                setRefreshToken(!refreshToken);\n                return key;\n            })\n    }\n\n    return (\n        <>\n            <ActionsBar>\n                <ActionGroup orientation=\"left\">\n                    <ConfirmationButton\n                        variant=\"success\"\n                        modalVariant=\"success\"\n                        msg={<span>Create a new Access Key for user <strong>{userId}</strong>?</span>}\n                        onConfirm={hide => {\n                            createKey()\n                                .then(key => { setCreatedKey(key) })\n                                .finally(hide);\n                        }}>\n                        Create Access Key\n                    </ConfirmationButton>\n                </ActionGroup>\n                <ActionGroup orientation=\"right\">\n                    <RefreshButton onClick={() => setRefreshToken(!refreshToken)}/>\n                </ActionGroup>\n            </ActionsBar>\n\n            {(!!createError) && <Error error={createError}/>}\n\n            <CredentialsShowModal\n                credentials={createdKey}\n                show={(!!createdKey)}\n                onHide={() => { setCreatedKey(null) }}/>\n\n            {(!!user) && <CredentialsTable\n                userId={user.id}\n                currentAccessKey={user.accessKeyId}\n                refresh={refreshToken}\n                after={(!!after) ? after : \"\"}\n                onPaginate={after => router.push({\n                    pathname: '/auth/credentials',\n                    query: {after}\n                })}\n            />}\n        </>\n    );\n};\n\nconst CredentialsPage = () => {\n    return (\n        <AuthLayout activeTab=\"credentials\">\n            <CredentialsContainer/>\n        </AuthLayout>\n    );\n};\n\n\nexport default CredentialsPage;\n","import {useEffect, useRef, useState} from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport {FormControl, InputGroup} from \"react-bootstrap\";\nimport {SearchIcon} from \"@primer/octicons-react\";\n\nimport {useAPI} from \"../../hooks/api\";\nimport {Checkbox, DataTable, DebouncedFormControl, Error, Loading} from \"../controls\";\n\n\nexport const AttachModal = ({ show, searchFn, onAttach, onHide, addText = \"Add\",\n                          emptyState = 'No matches', modalTitle = 'Add',\n                     filterPlaceholder = 'Filter...'}) => {\n    const search = useRef(null);\n    const [searchPrefix, setSearchPrefix] = useState(\"\");\n    const [selected, setSelected] = useState([]);\n\n    useEffect(() => {\n        if (!!search.current && search.current.value === \"\")\n            search.current.focus();\n    });\n\n    const { response, error, loading } = useAPI(() => {\n        return searchFn(searchPrefix);\n    }, [searchPrefix]);\n\n    let content;\n    if (loading) content = <Loading/>;\n    else if (!!error) content = <Error error={error}/>;\n    else content = (\n            <>\n                <DataTable\n                    headers={['Select', 'ID']}\n                    keyFn={ent => ent.id}\n                    emptyState={emptyState}\n                    results={response}\n                    rowFn={ent => [\n                        <Checkbox\n                            defaultChecked={selected.indexOf(ent.id) >= 0}\n                            onAdd={() => setSelected([...selected, ent.id])}\n                            onRemove={() => setSelected(selected.filter(id => id !== ent.id))}\n                            name={'selected'}/>,\n                        <strong>{ent.id}</strong>\n                    ]}/>\n\n                <div className=\"mt-3\">\n                    {(selected.length > 0) &&\n                    <p>\n                        <strong>Selected: </strong>\n                        {(selected.map(item => (\n                            <Badge key={item} pill variant=\"primary\" className=\"mr-1\">\n                                {item}\n                            </Badge>\n                        )))}\n                    </p>\n                    }\n                </div>\n            </>\n        )\n\n    return (\n        <Modal show={show} onHide={onHide}>\n            <Modal.Header closeButton>\n                <Modal.Title>{modalTitle}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form onSubmit={e => { e.preventDefault() }}>\n                    <InputGroup>\n                        <InputGroup.Prepend>\n                            <InputGroup.Text>\n                                <SearchIcon/>\n                            </InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <DebouncedFormControl\n                            ref={search}\n                            placeholder={filterPlaceholder}\n                            onChange={() => {setSearchPrefix(search.current.value)}}/>\n                    </InputGroup>\n                </Form>\n                <div className=\"mt-2\">\n                    {content}\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"success\" disabled={selected.length === 0} onClick={() => {onAttach(selected)}}>\n                    {addText}\n                </Button>\n                <Button variant=\"secondary\" onClick={onHide}>Cancel</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\n\nexport const EntityCreateModal = ({ show, onHide, onCreate, title, idPlaceholder }) => {\n    const [error, setError] = useState(null);\n    const idField = useRef(null);\n\n    useEffect(() => {\n        if (!!idField.current && idField.current.value === \"\")\n            idField.current.focus();\n    });\n\n    const onSubmit = () => {\n        onCreate(idField.current.value).catch(err => setError(err));\n    };\n\n    return (\n        <Modal show={show} onHide={onHide}>\n            <Modal.Header closeButton>\n                <Modal.Title>{title}</Modal.Title>\n            </Modal.Header>\n\n            <Modal.Body>\n                <Form onSubmit={e => {\n                    e.preventDefault()\n                    onSubmit()\n                }}>\n                    <FormControl ref={idField} autoFocus placeholder={idPlaceholder} type=\"text\"/>\n                </Form>\n\n                {(!!error) && <Error className=\"mt-3\" error={error}/>}\n\n            </Modal.Body>\n\n            <Modal.Footer>\n                <Button onClick={onSubmit} variant=\"success\">Create</Button>\n                <Button onClick={onHide} variant=\"secondary\">Cancel</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n","import Nav from \"react-bootstrap/Nav\";\nimport Breadcrumb from \"react-bootstrap/Breadcrumb\";\nimport {BreadcrumbItem} from \"react-bootstrap\";\n\nimport {Link, NavItem} from \"../nav\";\n\n\nexport const UserNav = ({ userId, page = 'groups' }) => {\n    return (\n        <Nav justify variant=\"tabs\">\n            <Link component={NavItem} active={page === 'groups'} href={{pathname: '/auth/users/:userId/groups', params: {userId}}}>\n                Group Memberships\n            </Link>\n            <Link component={NavItem} active={page === 'policies'} href={{pathname: '/auth/users/:userId/policies', params: {userId}}}>\n                Directly Attached Policies\n            </Link>\n            <Link component={NavItem} active={page === 'effectivePolicies'} href={{pathname: '/auth/users/:userId/policies/effective', params: {userId}}}>\n                Effective Attached Policies\n            </Link>\n            <Link component={NavItem} active={page === 'credentials'} href={{pathname: '/auth/users/:userId/credentials', params: {userId}}}>\n                Access Credentials\n            </Link>\n        </Nav>\n    );\n};\n\n\nexport const GroupNav = ({ groupId, page = 'groups' }) => {\n    return (\n        <Nav justify variant=\"tabs\">\n            <Link component={NavItem} active={page === 'members'} href={{pathname: '/auth/groups/:groupId/members', params: {groupId}}}>\n                Group Memberships\n            </Link>\n            <Link component={NavItem} active={page === 'policies'} href={{pathname: '/auth/groups/:groupId/policies', params: {groupId}}}>\n                Attached Policies\n            </Link>\n        </Nav>\n    );\n};\n\n\nexport const UserHeader = ({ userId, page }) => {\n    return (\n        <div className=\"mb-4\">\n            <Breadcrumb>\n                <Link component={BreadcrumbItem} href='/auth/users'>\n                    Users\n                </Link>\n                <Link component={BreadcrumbItem} href={{pathname: '/auth/users/:userId', params: {userId}}}>\n                    {userId}\n                </Link>\n            </Breadcrumb>\n\n            <UserNav userId={userId} page={page}/>\n        </div>\n    );\n};\n\nexport const GroupHeader = ({ groupId, page }) => {\n    return (\n        <div className=\"mb-4\">\n            <Breadcrumb>\n                <Link component={BreadcrumbItem} href='/auth/groups'>\n                    Groups\n                </Link>\n                <Link component={BreadcrumbItem} href={{pathname: '/auth/groups/:groupId', params: {groupId}}}>\n                    {groupId}\n                </Link>\n            </Breadcrumb>\n\n            <GroupNav groupId={groupId} page={page}/>\n        </div>\n    );\n};\n\nexport const PolicyHeader = ({ policyId }) => {\n    return (\n        <div className=\"mb-4\">\n            <Breadcrumb>\n                <Link component={BreadcrumbItem} href='/auth/policies'>\n                    Policies\n                </Link>\n                <Link component={BreadcrumbItem} href={{pathname: '/auth/policies/:policyId', params: {policyId}}}>\n                    {policyId}\n                </Link>\n            </Breadcrumb>\n        </div>\n    );\n};","import {useEffect, useState} from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\n\nimport {GroupHeader} from \"../../../../lib/components/auth/nav\";\nimport {AuthLayout} from \"../../../../lib/components/auth/layout\";\nimport {useAPIWithPagination} from \"../../../../lib/hooks/api\";\nimport {auth} from \"../../../../lib/api\";\nimport {Paginator} from \"../../../../lib/components/pagination\";\nimport {AttachModal} from \"../../../../lib/components/auth/forms\";\nimport {ConfirmationButton} from \"../../../../lib/components/modals\";\nimport {\n    ActionGroup,\n    ActionsBar,\n    DataTable,\n    FormattedDate,\n    Loading,\n    Error,\n    RefreshButton\n} from \"../../../../lib/components/controls\";\nimport {useRouter} from \"../../../../lib/hooks/router\";\nimport {Link} from \"../../../../lib/components/nav\";\n\n\nconst GroupMemberList = ({ groupId, after, onPaginate }) => {\n    const [refresh, setRefresh] = useState(false);\n    const [showAddModal, setShowAddModal] = useState(false);\n    const [attachError, setAttachError] = useState(null);\n\n    const {results, loading, error, nextPage} = useAPIWithPagination(() => {\n        return auth.listGroupMembers(groupId, after);\n    }, [groupId, after, refresh]);\n\n    useEffect(() => {\n        setAttachError(null);\n    }, [refresh])\n\n    let content;\n    if (loading) content = <Loading/>;\n    else if (!!error) content=  <Error error={error}/>;\n    else content = (\n            <>\n                {attachError && <Error error={attachError}/>}\n\n                <DataTable\n                    keyFn={user => user.id}\n                    rowFn={user => [\n                        <Link href={{pathname: '/auth/users/:userId', params: {userId: user.id}}}>{user.id}</Link>,\n                        <FormattedDate dateValue={user.creation_date}/>\n                    ]}\n                    headers={['User ID', 'Created At']}\n                    actions={[{\n                        key: 'Remove',\n                        buttonFn: user => <ConfirmationButton\n                            size=\"sm\"\n                            variant=\"outline-danger\"\n                            msg={<span>Are you sure you'd like to remove user <strong>{user.id}</strong> from group <strong>{groupId}</strong>?</span>}\n                            onConfirm={() => {\n                                auth.removeUserFromGroup(user.id, groupId)\n                                    .catch(error => alert(error))\n                                    .then(() => { setRefresh(!refresh) });\n                            }}>\n                            Remove\n                        </ConfirmationButton>\n                    }]}\n                    results={results}\n                    emptyState={'No users found'}\n                />\n\n                <Paginator onPaginate={onPaginate} after={after} nextPage={nextPage}/>\n\n                {showAddModal && <AttachModal\n                    show={showAddModal}\n                    emptyState={'No users found'}\n                    filterPlaceholder={'Find User...'}\n                    modalTitle={'Add to Group'}\n                    addText={'Add to Group'}\n                    searchFn={prefix => auth.listUsers(prefix, \"\", 5).then(res => res.results)}\n                    onHide={() => setShowAddModal(false)}\n                    onAttach={(selected) => {\n                        Promise.all(selected.map(userId => auth.addUserToGroup(userId, groupId)))\n                            .then(() => { setRefresh(!refresh); setAttachError(null) })\n                            .catch(error => { setAttachError(error) })\n                            .finally(() => { setShowAddModal(false) });\n                    }}/>\n                }\n            </>\n        );\n\n    return (\n        <>\n            <GroupHeader groupId={groupId} page={'members'}/>\n\n            <ActionsBar>\n                <ActionGroup orientation=\"left\">\n                    <Button variant=\"success\" onClick={() => setShowAddModal(true)}>Add Members</Button>\n                </ActionGroup>\n\n                <ActionGroup orientation=\"right\">\n                    <RefreshButton onClick={() => setRefresh(!refresh)}/>\n                </ActionGroup>\n            </ActionsBar>\n\n            <div className=\"mt-2\">\n                {content}\n            </div>\n        </>\n    );\n};\n\nconst GroupMembersContainer = () => {\n    const router = useRouter();\n    const { after } = router.query;\n    const { groupId } = router.params;\n    return groupId && <GroupMemberList\n        groupId={groupId}\n        after={(!!after) ? after : \"\"}\n        onPaginate={after => router.push({pathname: '/auth/groups/:groupId/members', params: {groupId},query: {after}})}\n    />;\n};\n\nconst GroupMembersPage = () => {\n    return (\n        <AuthLayout activeTab=\"groups\">\n            <GroupMembersContainer/>\n        </AuthLayout>\n    );\n};\n\nexport default GroupMembersPage;","import {useEffect, useState} from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\n\nimport {AuthLayout} from \"../../../../lib/components/auth/layout\";\nimport {GroupHeader} from \"../../../../lib/components/auth/nav\";\nimport {useAPIWithPagination} from \"../../../../lib/hooks/api\";\nimport {auth} from \"../../../../lib/api\";\nimport {Paginator} from \"../../../../lib/components/pagination\";\nimport {AttachModal} from \"../../../../lib/components/auth/forms\";\nimport {ConfirmationButton} from \"../../../../lib/components/modals\";\nimport {\n    ActionGroup,\n    ActionsBar,\n    DataTable,\n    FormattedDate,\n    Loading,\n    Error,\n    RefreshButton\n} from \"../../../../lib/components/controls\";\nimport {Link} from \"../../../../lib/components/nav\";\nimport {useRouter} from \"../../../../lib/hooks/router\";\n\n\nconst GroupPoliciesList = ({ groupId, after, onPaginate }) => {\n    const [refresh, setRefresh] = useState(false);\n    const [showAddModal, setShowAddModal] = useState(false);\n    const [attachError, setAttachError] = useState(null);\n\n    const {results, loading, error, nextPage} = useAPIWithPagination(() => {\n        return auth.listGroupPolicies(groupId, after);\n    }, [groupId, after, refresh]);\n\n    useEffect(() => { setAttachError(null); }, [refresh, after])\n\n    let content;\n    if (loading) content = <Loading/>;\n    else if (!!error) content=  <Error error={error}/>;\n    else content = (\n            <>\n                {attachError && <Error error={attachError}/>}\n\n                <DataTable\n                    keyFn={policy => policy.id}\n                    rowFn={policy => [\n                        <Link href={{pathname: '/auth/policies/:policyId', params: {policyId: policy.id}}}>{policy.id}</Link>,\n                        <FormattedDate dateValue={policy.creation_date}/>\n                    ]}\n                    headers={['Policy ID', 'Created At']}\n                    actions={[{\n                        key: 'Detach',\n                        buttonFn: policy => <ConfirmationButton\n                            size=\"sm\"\n                            variant=\"outline-danger\"\n                            modalVariant=\"danger\"\n                            msg={<span>Are you sure you'd like to detach policy <strong>{policy.id}</strong>?</span>}\n                            onConfirm={() => {\n                                auth.detachPolicyFromGroup(groupId, policy.id)\n                                    .catch(error => alert(error))\n                                    .then(() => { setRefresh(!refresh) })\n                            }}>\n                            Remove\n                        </ConfirmationButton>\n                    }]}\n                    results={results}\n                    emptyState={'No policies found'}\n                />\n\n                <Paginator onPaginate={onPaginate} after={after} nextPage={nextPage}/>\n\n\n                {showAddModal && <AttachModal\n                    show={showAddModal}\n                    emptyState={'No policies found'}\n                    filterPlaceholder={'Find Policy...'}\n                    modalTitle={'Attach Policies'}\n                    addText={'Attach Policies'}\n                    searchFn={prefix => auth.listPolicies(prefix, \"\", 5).then(res => res.results)}\n                    onHide={() => setShowAddModal(false)}\n                    onAttach={(selected) => {\n                        Promise.all(selected.map(policyId => auth.attachPolicyToGroup(groupId, policyId)))\n                            .then(() => { setRefresh(!refresh); setAttachError(null) })\n                            .catch(error => { setAttachError(error) })\n                            .finally(() => { setShowAddModal(false) })\n                    }}/>\n                }\n            </>\n        );\n\n    return (\n        <>\n            <GroupHeader groupId={groupId} page={'policies'}/>\n\n            <ActionsBar>\n                <ActionGroup orientation=\"left\">\n                    <Button variant=\"success\" onClick={() => setShowAddModal(true)}>Attach Policy</Button>\n                </ActionGroup>\n\n                <ActionGroup orientation=\"right\">\n                    <RefreshButton onClick={() => setRefresh(!refresh)}/>\n                </ActionGroup>\n            </ActionsBar>\n\n            <div className=\"mt-2\">\n                {content}\n            </div>\n        </>\n    );\n};\n\nconst GroupPoliciesContainer = () => {\n    const router = useRouter();\n    const { after } = router.query;\n    const { groupId } = router.params;\n    return (!groupId) ? <></> : <GroupPoliciesList\n        groupId={groupId}\n        after={(!!after) ? after : \"\"}\n        onPaginate={after => router.push({pathname: '/auth/groups/:groupId/policies', params: {groupId}, query: {after}})}\n    />;\n};\n\nconst GroupPoliciesPage = () => {\n    return (\n        <AuthLayout activeTab=\"groups\">\n            <GroupPoliciesContainer/>\n        </AuthLayout>\n    );\n};\n\nexport default GroupPoliciesPage;","import {Redirect, Route, Switch} from \"react-router-dom\";\nimport {useRouter} from \"../../../../lib/hooks/router\";\nimport GroupMembersPage from \"./members\";\nimport GroupPoliciesPage from \"./policies\";\n\n\nconst GroupRedirect = ({ subPath }) => {\n    const router = useRouter();\n    const { groupId } = router.params;\n    return <Redirect to={`/auth/groups/${groupId}${subPath}`}/>;\n};\n\nexport default function GroupPage() {\n    return (\n        <Switch>\n            <Route exact path=\"/auth/groups/:groupId\">\n                <GroupRedirect subPath=\"/members\"/>\n            </Route>\n            <Route path=\"/auth/groups/:groupId/members\">\n                <GroupMembersPage/>\n            </Route>\n            <Route path=\"/auth/groups/:groupId/policies\">\n                <GroupPoliciesPage/>\n            </Route>\n        </Switch>\n    );\n};\n","import {useEffect, useState} from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\n\nimport {AuthLayout} from \"../../../lib/components/auth/layout\";\nimport {useAPIWithPagination} from \"../../../lib/hooks/api\";\nimport {auth} from \"../../../lib/api\";\nimport {ConfirmationButton} from \"../../../lib/components/modals\";\nimport {EntityCreateModal} from \"../../../lib/components/auth/forms\";\nimport {Paginator} from \"../../../lib/components/pagination\";\nimport {\n    ActionGroup,\n    ActionsBar,\n    Checkbox,\n    DataTable,\n    Error, FormattedDate,\n    Loading,\n    RefreshButton\n} from \"../../../lib/components/controls\";\nimport {Route, Switch} from \"react-router-dom\";\nimport {useRouter} from \"../../../lib/hooks/router\";\nimport {Link} from \"../../../lib/components/nav\";\nimport GroupPage from \"./group\";\n\n\nconst GroupsContainer = () => {\n    const [selected, setSelected] = useState([]);\n    const [deleteError, setDeleteError] = useState(null);\n    const [showCreate, setShowCreate] = useState(false);\n    const [refresh, setRefresh] = useState(false);\n\n    const router = useRouter();\n    const after = (!!router.query.after) ? router.query.after : \"\";\n    const { results, loading, error, nextPage } =  useAPIWithPagination(() => {\n        return auth.listGroups(after);\n    }, [after, refresh]);\n\n    useEffect(() => {\n        setSelected([]);\n    }, [after, refresh]);\n\n    if (!!error) return <Error error={error}/>;\n    if (loading) return <Loading/>;\n\n    return (\n        <>\n            <ActionsBar>\n                <ActionGroup orientation=\"left\">\n                    <Button\n                        variant=\"success\"\n                        onClick={() => setShowCreate(true)}>\n                        Create Group\n                    </Button>\n\n                    <ConfirmationButton\n                        onConfirm={() => {\n                            auth.deleteGroups(selected.map(g => g.id))\n                                .catch(err => setDeleteError(err))\n                                .then(() => {\n                                    setSelected([]);\n                                    setRefresh(!refresh)\n                                })\n                        }}\n                        disabled={(selected.length === 0)}\n                        variant=\"danger\"\n                        msg={`Are you sure you'd like to delete ${selected.length} groups?`}>\n                        Delete Selected\n                    </ConfirmationButton>\n\n                </ActionGroup>\n                <ActionGroup orientation=\"right\">\n                    <RefreshButton onClick={() => setRefresh(!refresh)}/>\n                </ActionGroup>\n            </ActionsBar>\n\n            {(!!deleteError) && <Error error={deleteError}/>}\n\n            <EntityCreateModal\n                show={showCreate}\n                onHide={() => setShowCreate(false)}\n                onCreate={groupId => {\n                    return auth.createGroup(groupId).then(() => {\n                        setSelected([]);\n                        setShowCreate(false);\n                        setRefresh(!refresh);\n                    });\n                }}\n                title=\"Create Group\"\n                idPlaceholder=\"Group Name (e.g. 'DataTeam')\"\n            />\n\n            <DataTable\n                results={results}\n                headers={['', 'Group ID', 'Created At']}\n                keyFn={group => group.id}\n                rowFn={group => [\n                    <Checkbox\n                        name={group.id}\n                        onAdd={() => setSelected([...selected, group])}\n                        onRemove={() => setSelected(selected.filter(g => g !== group))}\n                    />,\n                    <Link href={{pathname: '/auth/groups/:groupId', params: {groupId: group.id}}}>\n                        {group.id}\n                    </Link>,\n                    <FormattedDate dateValue={group.creation_date}/>\n                ]}/>\n\n            <Paginator\n                nextPage={nextPage}\n                after={after}\n                onPaginate={after => router.push({pathname: '/auth/groups', query: {after}})}\n            />\n        </>\n    );\n};\n\nconst GroupsPage = () => {\n    return (\n        <AuthLayout activeTab=\"groups\">\n            <GroupsContainer/>\n        </AuthLayout>\n    );\n};\n\nconst GroupsIndexPage = () => {\n    return (\n        <Switch>\n            <Route path=\"/auth/groups/:groupId\">\n                <GroupPage/>\n            </Route>\n            <Route path=\"/auth/groups\">\n                <GroupsPage/>\n            </Route>\n        </Switch>\n    )\n}\n\nexport default GroupsIndexPage;","import {AuthLayout} from \"../../../../lib/components/auth/layout\";\nimport {UserHeader} from \"../../../../lib/components/auth/nav\";\nimport {\n    ActionGroup,\n    ActionsBar,\n    DataTable,\n    FormattedDate,\n    Loading,\n    Error,\n    RefreshButton\n} from \"../../../../lib/components/controls\";\nimport Button from \"react-bootstrap/Button\";\nimport {useAPIWithPagination} from \"../../../../lib/hooks/api\";\nimport {auth} from \"../../../../lib/api\";\nimport {Paginator} from \"../../../../lib/components/pagination\";\nimport {useState} from \"react\";\nimport {AttachModal} from \"../../../../lib/components/auth/forms\";\nimport {ConfirmationButton} from \"../../../../lib/components/modals\";\nimport {useRouter} from \"../../../../lib/hooks/router\";\nimport {Link} from \"../../../../lib/components/nav\";\n\n\nconst UserGroupsList = ({ userId, after, onPaginate }) => {\n    const [refresh, setRefresh] = useState(false);\n    const [showAddModal, setShowAddModal] = useState(false);\n    const [attachError, setAttachError] = useState(null);\n\n    const {results, loading, error, nextPage} = useAPIWithPagination(() => {\n        return auth.listUserGroups(userId, after);\n    }, [userId, after, refresh]);\n\n    let content;\n    if (loading) content = <Loading/>;\n    else if (!!error) content=  <Error error={error}/>;\n    else content = (\n        <>\n            {attachError && <Error error={attachError}/>}\n\n            <DataTable\n                keyFn={group => group.id}\n                rowFn={group => [\n                    <Link href={{pathname: '/auth/groups/:groupId', params: {groupId: group.id}}}>{group.id}</Link>,\n                    <FormattedDate dateValue={group.creation_date}/>\n                ]}\n                headers={['Group ID', 'Created At']}\n                actions={[{\n                    key: 'Remove',\n                    buttonFn: group => <ConfirmationButton\n                        size=\"sm\"\n                        variant=\"outline-danger\"\n                        msg={<span>Are you sure you'd like to remove user <strong>{userId}</strong> from group <strong>{group.id}</strong>?</span>}\n                        onConfirm={() => {\n                            auth.removeUserFromGroup(userId, group.id)\n                                .catch(error => alert(error))\n                                .then(() => { setRefresh(!refresh) })\n                        }}>\n                        Remove\n                    </ConfirmationButton>\n                }]}\n                results={results}\n                emptyState={'No groups found'}\n            />\n\n            <Paginator onPaginate={onPaginate} after={after} nextPage={nextPage}/>\n\n            {showAddModal && <AttachModal\n                show={showAddModal}\n                emptyState={'No groups found'}\n                filterPlaceholder={'Find Group...'}\n                modalTitle={'Add to Groups'}\n                addText={'Add to Groups'}\n                searchFn={prefix => auth.listGroups(prefix, \"\", 5).then(res => res.results)}\n                onHide={() => setShowAddModal(false)}\n                onAttach={(selected) => {\n                    Promise.all(selected.map(groupId => auth.addUserToGroup(userId, groupId)))\n                        .then(() => { setRefresh(!refresh); setAttachError(null) })\n                        .catch(error => { setAttachError(error) })\n                        .finally(() => { setShowAddModal(false) })\n                }}/>\n            }\n        </>\n    );\n\n    return (\n        <>\n            <UserHeader userId={userId} page={'groups'}/>\n\n            <ActionsBar>\n                <ActionGroup orientation=\"left\">\n                    <Button variant=\"success\" onClick={() => setShowAddModal(true)}>Add User to Group</Button>\n                </ActionGroup>\n\n                <ActionGroup orientation=\"right\">\n                    <RefreshButton onClick={() => setRefresh(!refresh)}/>\n                </ActionGroup>\n            </ActionsBar>\n\n            <div className=\"mt-2\">\n                {content}\n            </div>\n        </>\n    );\n};\n\nconst UserGroupsContainer = () => {\n    const router = useRouter();\n    const { after } = router.query;\n    const { userId } = router.params;\n    return (!userId) ? <></> : <UserGroupsList\n        userId={userId}\n        after={(!!after) ? after : \"\"}\n        onPaginate={after => router.push({pathname: '/auth/users/:userId/groups', params: {userId}, query: {after}})}\n    />;\n};\n\nconst UserGroupsPage = () => {\n    return (\n        <AuthLayout activeTab=\"users\">\n            <UserGroupsContainer/>\n        </AuthLayout>\n    );\n};\n\nexport default UserGroupsPage;","import {useState} from \"react\";\n\nimport {AuthLayout} from \"../../../../lib/components/auth/layout\";\nimport {UserHeader} from \"../../../../lib/components/auth/nav\";\nimport {auth} from \"../../../../lib/api\";\nimport {CredentialsShowModal, CredentialsTable} from \"../../../../lib/components/auth/credentials\";\nimport useUser from \"../../../../lib/hooks/user\";\nimport {ConfirmationButton} from \"../../../../lib/components/modals\";\nimport {\n    ActionGroup,\n    ActionsBar,\n    Error,\n    RefreshButton\n} from \"../../../../lib/components/controls\";\nimport {useRouter} from \"../../../../lib/hooks/router\";\n\n\nconst UserCredentialsList = ({ userId, after, onPaginate }) => {\n    const {user} = useUser();\n    const [refresh, setRefresh] = useState(false);\n    const [createError, setCreateError] = useState(null);\n    const [createdKey, setCreatedKey] = useState(null);\n\n    const createKey = () => {\n        return auth.createCredentials(userId)\n            .catch(err => {\n                setCreateError(err);\n            }).then(key => {\n                setCreateError(null);\n                setRefresh(!refresh);\n                return key;\n            });\n    };\n    const content = (\n            <>\n                {createError && <Error error={createError}/>}\n                <CredentialsTable\n                    userId={userId}\n                    currentAccessKey={(!!user) ? user.accessKeyId : \"\"}\n                    refresh={refresh}\n                    after={after}\n                    onPaginate={onPaginate}\n                />\n            </>\n        );\n\n    return (\n        <>\n            <UserHeader userId={userId} page={'credentials'}/>\n\n            <ActionsBar>\n                <ActionGroup orientation=\"left\">\n                    <ConfirmationButton\n                        variant=\"success\"\n                        modalVariant=\"success\"\n                        msg={<span>Create a new Access Key for user <strong>{userId}</strong>?</span>}\n                        onConfirm={hide => {\n                            createKey()\n                                .then(key => { setCreatedKey(key) })\n                                .finally(hide)\n                        }}>\n                        Create Access Key\n                    </ConfirmationButton>\n                </ActionGroup>\n\n                <ActionGroup orientation=\"right\">\n                    <RefreshButton onClick={() => setRefresh(!refresh)}/>\n                </ActionGroup>\n            </ActionsBar>\n\n            <div className=\"mt-2\">\n\n                <CredentialsShowModal\n                    credentials={createdKey}\n                    show={(!!createdKey)}\n                    onHide={() => { setCreatedKey(null) }}/>\n\n                {content}\n            </div>\n        </>\n    );\n}\n\nconst UserCredentialsContainer = () => {\n    const router = useRouter();\n    const { after } = router.query;\n    const { userId } = router.params;\n    return (!userId) ? <></> : <UserCredentialsList\n        userId={userId}\n        after={(!!after) ? after : \"\"}\n        onPaginate={after => router.push({pathname: '/auth/users/:userId/credentials', query: {after}, params: {userId}})}\n    />;\n};\n\nconst UserCredentialsPage = () => {\n    return (\n        <AuthLayout activeTab=\"users\">\n            <UserCredentialsContainer/>\n        </AuthLayout>\n    );\n};\n\nexport default UserCredentialsPage;","import {useState} from \"react\";\n\nimport {AuthLayout} from \"../../../../lib/components/auth/layout\";\nimport {UserHeader} from \"../../../../lib/components/auth/nav\";\nimport {useAPIWithPagination} from \"../../../../lib/hooks/api\";\nimport {auth} from \"../../../../lib/api\";\nimport {Paginator} from \"../../../../lib/components/pagination\";\nimport {\n    ActionGroup,\n    ActionsBar,\n    DataTable,\n    FormattedDate,\n    Loading,\n    Error,\n    RefreshButton\n} from \"../../../../lib/components/controls\";\nimport {Link} from \"../../../../lib/components/nav\";\nimport {useRouter} from \"../../../../lib/hooks/router\";\n\n\nconst UserEffectivePoliciesList = ({ userId, after, onPaginate }) => {\n\n    const [refresh, setRefresh] = useState(false);\n\n    const {results, loading, error, nextPage} = useAPIWithPagination(() => {\n        return auth.listUserPolicies(userId, true, after);\n    }, [userId, after, refresh]);\n\n    let content;\n    if (loading) content = <Loading/>;\n    else if (!!error) content=  <Error error={error}/>;\n    else content = (\n            <>\n               <DataTable\n                    keyFn={policy => policy.id}\n                    rowFn={policy => [\n                        <Link href={{pathname: '/auth/policies/:policyId', params: {policyId: policy.id}}}>{policy.id}</Link>,\n                        <FormattedDate dateValue={policy.creation_date}/>\n                    ]}\n                    headers={['Policy ID', 'Created At']}\n                    results={results}\n                    emptyState={'No policies found'}\n                />\n\n                <Paginator onPaginate={onPaginate} after={after} nextPage={nextPage}/>\n            </>\n        );\n\n    return (\n        <>\n            <UserHeader userId={userId} page={'effectivePolicies'}/>\n\n            <ActionsBar>\n                <ActionGroup orientation=\"left\">\n                    <p>\n                        <small>\n                            <strong>\n                            All policies attached to this user, through direct attachment or via group memberships\n                            </strong>\n                        </small>\n                    </p>\n                </ActionGroup>\n\n                <ActionGroup orientation=\"right\">\n                    <RefreshButton onClick={() => setRefresh(!refresh)}/>\n                </ActionGroup>\n            </ActionsBar>\n\n            <div className=\"mt-2\">\n                {content}\n            </div>\n        </>\n    );\n};\n\nconst UserEffectivePoliciesContainer = () => {\n    const router = useRouter();\n    const { after } = router.query;\n    const { userId } = router.params;\n    return (!userId) ? <></> : <UserEffectivePoliciesList\n        userId={userId}\n        after={(!!after) ? after : \"\"}\n        onPaginate={after => router.push({pathname: '/auth/users/:userId/policies/effective', params: {userId}, query: {after}})}\n    />;\n};\n\nconst UserEffectivePoliciesPage = () => {\n    return (\n        <AuthLayout activeTab=\"users\">\n            <UserEffectivePoliciesContainer/>\n        </AuthLayout>\n    );\n};\n\nexport default UserEffectivePoliciesPage;","import {AuthLayout} from \"../../../../lib/components/auth/layout\";\nimport {UserHeader} from \"../../../../lib/components/auth/nav\";\nimport {\n    ActionGroup,\n    ActionsBar,\n    DataTable,\n    FormattedDate,\n    Loading,\n    Error,\n    RefreshButton\n} from \"../../../../lib/components/controls\";\nimport Button from \"react-bootstrap/Button\";\nimport {useAPIWithPagination} from \"../../../../lib/hooks/api\";\nimport {auth} from \"../../../../lib/api\";\nimport {Paginator} from \"../../../../lib/components/pagination\";\nimport {useState} from \"react\";\nimport {AttachModal} from \"../../../../lib/components/auth/forms\";\nimport {ConfirmationButton} from \"../../../../lib/components/modals\";\nimport {Link} from \"../../../../lib/components/nav\";\nimport {useRouter} from \"../../../../lib/hooks/router\";\n\n\nconst UserPoliciesList = ({ userId, after, onPaginate }) => {\n    const [refresh, setRefresh] = useState(false);\n    const [showAddModal, setShowAddModal] = useState(false);\n    const [attachError, setAttachError] = useState(null);\n\n    const {results, loading, error, nextPage} = useAPIWithPagination(() => {\n        return auth.listUserPolicies(userId, false, after);\n    }, [userId, after, refresh]);\n\n    let content;\n    if (loading) content = <Loading/>;\n    else if (!!error) content=  <Error error={error}/>;\n    else content = (\n            <>\n                {attachError && <Error error={attachError}/>}\n                <DataTable\n                    keyFn={policy => policy.id}\n                    rowFn={policy => [\n                        <Link href={{pathname: '/auth/policies/:policyId', params: {policyId: policy.id}}}>{policy.id}</Link>,\n                        <FormattedDate dateValue={policy.creation_date}/>\n                    ]}\n                    headers={['Policy ID', 'Created At']}\n                    actions={[{\n                        key: 'Detach',\n                        buttonFn: policy => <ConfirmationButton\n                            size=\"sm\"\n                            variant=\"outline-danger\"\n                            modalVariant=\"danger\"\n                            msg={<span>Are you sure you'd like to detach policy <strong>{policy.id}</strong>?</span>}\n                            onConfirm={() => {\n                                auth.detachPolicyFromUser(userId, policy.id)\n                                    .catch(error => alert(error))\n                                    .then(() => { setRefresh(!refresh) })\n                            }}>\n                            Detach\n                        </ConfirmationButton>\n                    }]}\n                    results={results}\n                    emptyState={'No policies found'}\n                />\n\n                <Paginator onPaginate={onPaginate} after={after} nextPage={nextPage}/>\n\n\n                {showAddModal && <AttachModal\n                    show={showAddModal}\n                    emptyState={'No policies found'}\n                    filterPlaceholder={'Find Policy...'}\n                    modalTitle={'Attach Policies'}\n                    addText={'Attach Policies'}\n                    searchFn={prefix => auth.listPolicies(prefix, \"\", 5).then(res => res.results)}\n                    onHide={() => setShowAddModal(false)}\n                    onAttach={(selected) => {\n                        Promise.all(selected.map(policyId => auth.attachPolicyToUser(userId, policyId)))\n                            .then(() => { setRefresh(!refresh); setAttachError(null) })\n                            .catch(error => { setAttachError(error) })\n                            .finally(() => { setShowAddModal(false) });\n                    }}/>\n                }\n            </>\n        )\n\n    return (\n        <>\n            <UserHeader userId={userId} page={'policies'}/>\n\n            <ActionsBar>\n                <ActionGroup orientation=\"left\">\n                    <Button variant=\"success\" onClick={() => setShowAddModal(true)}>Attach Policy</Button>\n                </ActionGroup>\n\n                <ActionGroup orientation=\"right\">\n                    <RefreshButton onClick={() => setRefresh(!refresh)}/>\n                </ActionGroup>\n            </ActionsBar>\n\n            <div className=\"mt-2\">\n                {content}\n            </div>\n        </>\n    );\n}\n\nconst UserPoliciesContainer = () => {\n    const router = useRouter();\n    const { after } = router.query;\n    const { userId } = router.params;\n    return (!userId) ? <></> : <UserPoliciesList\n        userId={userId}\n        after={(!!after) ? after : \"\"}\n        onPaginate={after => router.push({pathname: '/auth/users/:userId/policies', params: {userId}, query: {after}})}\n    />;\n};\n\nconst UserPoliciesPage = () => {\n    return (\n        <AuthLayout activeTab=\"users\">\n            <UserPoliciesContainer/>\n        </AuthLayout>\n    );\n};\n\nexport default UserPoliciesPage;","import {Redirect, Route, Switch} from \"react-router-dom\";\n\nimport {useRouter} from \"../../../../lib/hooks/router\";\nimport UserGroupsPage from \"./groups\";\nimport UserCredentialsPage from \"./credentials\";\nimport UserEffectivePoliciesPage from \"./effectivePolicies\";\nimport UserPoliciesPage from \"./policies\";\n\n\nconst UserRedirect = ({ subPath }) => {\n    const router = useRouter();\n    const {userId} = router.params;\n    return <Redirect to={`/auth/users/${userId}${subPath}`}/>;\n}\n\nexport default function UserPage() {\n    return (\n        <Switch>\n            <Route exact path=\"/auth/users/:userId\">\n                <UserRedirect subPath=\"/groups\"/>\n            </Route>\n            <Route exact path=\"/auth/users/:userId/groups\">\n                <UserGroupsPage/>\n            </Route>\n            <Route exact path=\"/auth/users/:userId/policies\">\n                <UserPoliciesPage/>\n            </Route>\n            <Route exact path=\"/auth/users/:userId/policies/effective\">\n                <UserEffectivePoliciesPage/>\n            </Route>\n            <Route exact path=\"/auth/users/:userId/credentials\">\n                <UserCredentialsPage/>\n            </Route>\n        </Switch>\n    );\n}\n","import {useEffect, useState} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\n\nimport Button from \"react-bootstrap/Button\";\n\nimport {AuthLayout} from \"../../../lib/components/auth/layout\";\nimport {useAPIWithPagination} from \"../../../lib/hooks/api\";\nimport {auth} from \"../../../lib/api\";\nimport useUser from \"../../../lib/hooks/user\";\nimport {ConfirmationButton} from \"../../../lib/components/modals\";\nimport {EntityCreateModal} from \"../../../lib/components/auth/forms\";\nimport {Paginator} from \"../../../lib/components/pagination\";\nimport {useRouter} from \"../../../lib/hooks/router\";\nimport {Link} from \"../../../lib/components/nav\";\nimport {\n    ActionGroup,\n    ActionsBar,\n    Checkbox,\n    DataTable,\n    Error, FormattedDate,\n    Loading,\n    RefreshButton\n} from \"../../../lib/components/controls\";\nimport UserPage from \"./user\";\n\n\nconst UsersContainer = () => {\n    const { user } = useUser();\n    const currentUser = user;\n\n    const [selected, setSelected] = useState([]);\n    const [deleteError, setDeleteError] = useState(null);\n    const [showCreate, setShowCreate] = useState(false);\n    const [refresh, setRefresh] = useState(false);\n\n    const router = useRouter();\n    const after = (!!router.query.after) ? router.query.after : \"\";\n    const { results, loading, error, nextPage } =  useAPIWithPagination(() => {\n        return auth.listUsers(after);\n    }, [after, refresh]);\n\n    useEffect(() => { setSelected([]); }, [refresh, after]);\n\n    if (!!error) return <Error error={error}/>;\n    if (loading) return <Loading/>;\n\n    return (\n        <>\n            <ActionsBar>\n                <ActionGroup orientation=\"left\">\n                    <Button\n                        variant=\"success\"\n                        onClick={() => setShowCreate(true)}>\n                        Create User\n                    </Button>\n\n                    <ConfirmationButton\n                        onConfirm={() => {\n                            auth.deleteUsers(selected.map(u => u.id))\n                                .catch(err => setDeleteError(err))\n                                .then(() => {\n                                    setSelected([]);\n                                    setRefresh(!refresh);\n                                })\n                        }}\n                        disabled={(selected.length === 0)}\n                        variant=\"danger\"\n                        msg={`Are you sure you'd like to delete ${selected.length} users?`}>\n                        Delete Selected\n                    </ConfirmationButton>\n\n                </ActionGroup>\n                <ActionGroup orientation=\"right\">\n                    <RefreshButton onClick={() => setRefresh(!refresh)}/>\n                </ActionGroup>\n            </ActionsBar>\n\n            {(!!deleteError) && <Error error={deleteError}/>}\n\n            <EntityCreateModal\n                show={showCreate}\n                onHide={() => setShowCreate(false)}\n                onCreate={userId => {\n                    return auth.createUser(userId).then(() => {\n                        setSelected([]);\n                        setShowCreate(false);\n                        setRefresh(!refresh);\n                    });\n                }}\n                title=\"Create User\"\n                idPlaceholder=\"Username (e.g. 'jane.doe')\"\n            />\n\n            <DataTable\n                results={results}\n                headers={['', 'User ID', 'Created At']}\n                keyFn={user => user.id}\n                rowFn={user => [\n                    <Checkbox\n                        disabled={(!!currentUser && currentUser.id === user.id)}\n                        name={user.id}\n                        onAdd={() => setSelected([...selected, user])}\n                        onRemove={() => setSelected(selected.filter(u => u !== user))}\n                    />,\n                    <Link href={{pathname: '/auth/users/:userId', params: {userId: user.id}}}>\n                        {user.id}\n                    </Link>,\n                    <FormattedDate dateValue={user.creation_date}/>\n                ]}/>\n\n            <Paginator\n                nextPage={nextPage}\n                after={after}\n                onPaginate={after => router.push({pathname: '/auth/users', query: {after}})}\n            />\n        </>\n    );\n};\n\nconst UsersPage = () => {\n    return (\n        <AuthLayout activeTab=\"users\">\n            <UsersContainer/>\n        </AuthLayout>\n    );\n};\n\nconst UsersIndexPage = () => {\n    return (\n        <Switch>\n            <Route path=\"/auth/users/:userId\">\n                <UserPage/>\n            </Route>\n            <Route path=\"/auth/users\">\n                <UsersPage/>\n            </Route>\n        </Switch>\n    )\n}\n\nexport default UsersIndexPage;","import {useEffect, useRef, useState} from \"react\";\n\nimport Table from \"react-bootstrap/Table\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport {FormControl} from \"react-bootstrap\";\nimport Button from \"react-bootstrap/Button\";\n\nimport {Error, FormattedDate} from \"../controls\";\n\n\nexport const PolicyEditor = ({ show, onHide, onSubmit, policy = null }) => {\n    const [error, setError] = useState(null);\n    const idField = useRef(null);\n    const bodyField = useRef(null);\n\n    useEffect(() => {\n        if (policy === null && !!idField.current && idField.current.value === \"\")\n            idField.current.focus();\n    });\n\n    const [body, setBody] = useState('')\n    useEffect(() => {\n        if (policy !== null) {\n            setBody(JSON.stringify({statement: policy.statement}, null, 4));\n        }\n    }, [policy]);\n\n    const submit = () => {\n        const statement = bodyField.current.value;\n        try {\n            JSON.parse(statement);\n        } catch (error) {\n            setError(error)\n            return false\n        }\n        const promise = (policy === null) ? onSubmit(idField.current.value, statement) : onSubmit(statement)\n        return promise.catch(err => setError(err));\n    };\n\n    const hide = () => {\n        setError(null);\n        onHide();\n    };\n\n    return (\n        <Modal show={show} onHide={hide}>\n            <Modal.Header closeButton>\n                <Modal.Title>{(policy === null) ? 'Create' : 'Edit'} Policy</Modal.Title>\n            </Modal.Header>\n\n            <Modal.Body>\n                <Form onSubmit={e => {\n                    e.preventDefault();\n                    submit();\n                }}>\n                    {(policy === null) && (\n                        <Form.Group>\n                            <FormControl ref={idField} autoFocus placeholder=\"Policy ID (e.g. 'MyRepoReadWrite')\" type=\"text\"/>\n                        </Form.Group>\n                    )}\n                    <Form.Group>\n                        <FormControl\n                            className=\"policy-document\"\n                            ref={bodyField}\n                            placeholder=\"Policy JSON Document\"\n                            rows={15}\n                            as=\"textarea\"\n                            type=\"text\"\n                            onChange={e => setBody(e.target.value)}\n                            value={body}/>\n                    </Form.Group>\n                </Form>\n\n                {(!!error) && <Error className=\"mt-3\" error={error}/>}\n\n            </Modal.Body>\n\n            <Modal.Footer>\n                <Button onClick={submit} variant=\"success\">{(policy === null) ? 'Create' : 'Edit'}</Button>\n                <Button onClick={hide} variant=\"secondary\">Cancel</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport const PolicyDisplay = ({ policy, asJSON }) => {\n    let childComponent;\n    if (asJSON) {\n        childComponent = (<pre className={\"policy-body\"}>{JSON.stringify({statement: policy.statement}, null, 4)}</pre>);\n    } else {\n        childComponent = (\n            <Table>\n                <thead>\n                <tr>\n                    <th>Actions</th>\n                    <th>Resource</th>\n                    <th>Effect</th>\n                </tr>\n                </thead>\n                <tbody>\n                {policy.statement.map((statement, i) => {\n                    return (\n                        <tr key={`statement-${i}`}>\n                            <td><code>{statement.action.join(\", \")}</code></td>\n                            <td><code>{statement.resource}</code></td>\n                            <td><strong style={{'color': (statement.effect === \"allow\") ? 'green':'red'}}>{statement.effect}</strong></td>\n                        </tr>\n                    );\n                })}\n                </tbody>\n            </Table>\n\n        );\n    }\n\n    return (\n        <div>\n            <p>\n                <strong>Created At: </strong>\n                <FormattedDate dateValue={policy.creation_date}/>\n            </p>\n            {childComponent}\n        </div>\n    );\n};\n","import {useState} from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport {PencilIcon} from \"@primer/octicons-react\";\n\nimport {AuthLayout} from \"../../../lib/components/auth/layout\";\nimport {PolicyHeader} from \"../../../lib/components/auth/nav\";\nimport {useAPI} from \"../../../lib/hooks/api\";\nimport {auth} from \"../../../lib/api\";\nimport {PolicyDisplay, PolicyEditor} from \"../../../lib/components/auth/policy\";\nimport {\n    ActionGroup,\n    ActionsBar,\n    Loading,\n    Error,\n} from \"../../../lib/components/controls\";\nimport {useRouter} from \"../../../lib/hooks/router\";\n\n\nconst PolicyView = ({ policyId }) => {\n    const [jsonView, setJsonView] = useState(false);\n    const [showEditor, setShowEditor] = useState(false);\n    const [refresh, setRefresh] = useState(false);\n\n    const {response, loading, error} = useAPI(() => {\n        return auth.getPolicy(policyId);\n    }, [policyId, refresh]);\n\n    const policy = response;\n\n    let content;\n    if (loading) content = <Loading/>;\n    else if (!!error) content=  <Error error={error}/>;\n    else content = (\n        <PolicyDisplay policy={policy} asJSON={jsonView}/>\n    );\n\n    return (\n        <>\n            <PolicyHeader policyId={policyId}/>\n\n            <ActionsBar>\n                <ActionGroup orientation=\"left\">\n                    <Button variant=\"primary\" onClick={() => setShowEditor(true)}>\n                        <PencilIcon/> Edit\n                    </Button>\n                </ActionGroup>\n                <ActionGroup orientation=\"right\">\n                    <Form>\n                    <Form.Switch\n                        label=\"JSON View\"\n                        id=\"policy-json-switch\"\n                        onChange={e => setJsonView(e.target.checked)}\n                    />\n                    </Form>\n                </ActionGroup>\n            </ActionsBar>\n\n            <div className=\"mt-2\">\n                {content}\n            </div>\n\n            <PolicyEditor\n                policy={policy}\n                show={showEditor}\n                onSubmit={(policyBody) => {\n                    return auth.editPolicy(policyId, policyBody).then(() => {\n                        setShowEditor(false);\n                        setRefresh(!refresh);\n                    });\n                }}\n                onHide={() => { setShowEditor(false) }}\n            />\n        </>\n    );\n}\n\n\nconst PolicyContainer = () => {\n    const router = useRouter();\n    const { policyId } = router.params;\n    return (!policyId) ? <></> : <PolicyView policyId={policyId}/>;\n}\n\nconst PolicyPage = () => {\n    return (\n        <AuthLayout activeTab=\"policies\">\n            <PolicyContainer/>\n        </AuthLayout>\n    );\n}\n\nexport default PolicyPage;","import {useEffect, useState} from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\n\nimport {auth} from \"../../../lib/api\";\nimport {useAPIWithPagination} from \"../../../lib/hooks/api\";\nimport {AuthLayout} from \"../../../lib/components/auth/layout\";\nimport {ConfirmationButton} from \"../../../lib/components/modals\";\nimport {Paginator} from \"../../../lib/components/pagination\";\nimport {PolicyEditor} from \"../../../lib/components/auth/policy\";\nimport {\n    ActionGroup,\n    ActionsBar,\n    Checkbox,\n    DataTable,\n    Error, FormattedDate,\n    Loading,\n    RefreshButton\n} from \"../../../lib/components/controls\";\nimport {useRouter} from \"../../../lib/hooks/router\";\nimport {Link} from \"../../../lib/components/nav\";\nimport {Route, Switch} from \"react-router-dom\";\nimport PolicyPage from \"./policy\";\n\n\nconst PoliciesContainer = () => {\n    const [selected, setSelected] = useState([]);\n    const [deleteError, setDeleteError] = useState(null);\n    const [showCreate, setShowCreate] = useState(false);\n    const [refresh, setRefresh] = useState(false);\n\n    const router = useRouter();\n    const after = (!!router.query.after) ? router.query.after : \"\";\n    const { results, loading, error, nextPage } =  useAPIWithPagination(() => {\n        return auth.listPolicies(\"\", after);\n    }, [after, refresh]);\n\n    useEffect(() => { setSelected([]); }, [after, refresh]);\n\n    if (!!error) return <Error error={error}/>;\n    if (loading) return <Loading/>;\n\n    return (\n        <>\n            <ActionsBar>\n                <ActionGroup orientation=\"left\">\n                    <Button\n                        variant=\"success\"\n                        onClick={() => setShowCreate(true)}>\n                        Create Policy\n                    </Button>\n\n                    <ConfirmationButton\n                        onConfirm={() => {\n                            auth.deletePolicies(selected.map(p => p.id))\n                                .catch(err => setDeleteError(err))\n                                .then(() => {\n                                    setSelected([]);\n                                    setRefresh(!refresh);\n                                });\n                        }}\n                        disabled={(selected.length === 0)}\n                        variant=\"danger\"\n                        msg={`Are you sure you'd like to delete ${selected.length} policies?`}>\n                        Delete Selected\n                    </ConfirmationButton>\n\n                </ActionGroup>\n                <ActionGroup orientation=\"right\">\n                    <RefreshButton onClick={() => setRefresh(!refresh)}/>\n                </ActionGroup>\n            </ActionsBar>\n\n            {(!!deleteError) && <Error error={deleteError}/>}\n\n            <PolicyEditor\n                onSubmit={(policyId, policyBody) => {\n                    return auth.createPolicy(policyId, policyBody).then(() => {\n                        setSelected([]);\n                        setShowCreate(false);\n                        setRefresh(!refresh);\n                    })\n                }}\n                onHide={() => setShowCreate(false)}\n                show={showCreate}\n            />\n\n            <DataTable\n                results={results}\n                headers={['', 'Policy ID', 'Created At']}\n                keyFn={policy => policy.id}\n                rowFn={policy => [\n                    <Checkbox\n                        name={policy.id}\n                        onAdd={() => setSelected([...selected, policy])}\n                        onRemove={() => setSelected(selected.filter(p => p !== policy))}\n                    />,\n                    <Link href={{pathname: '/auth/policies/:policyId', params: {policyId: policy.id}}}>\n                        {policy.id}\n                    </Link>,\n                    <FormattedDate dateValue={policy.creation_date}/>\n                ]}/>\n\n            <Paginator\n                nextPage={nextPage}\n                after={after}\n                onPaginate={after => router.push({pathname: '/auth/policies', query: {after}})}\n            />\n        </>\n    );\n};\n\n\nconst PoliciesPage = () => {\n    return (\n        <AuthLayout activeTab=\"policies\">\n            <PoliciesContainer/>\n        </AuthLayout>\n    );\n};\n\nconst PoliciesIndexPage = () => {\n    return (\n        <Switch>\n            <Route exact path=\"/auth/policies\">\n                <PoliciesPage/>\n            </Route>\n            <Route path=\"/auth/policies/:policyId\">\n                <PolicyPage/>\n            </Route>\n        </Switch>\n    )\n}\n\nexport default PoliciesIndexPage;","import Layout from \"../../lib/components/layout\";\nimport Row from \"react-bootstrap/Row\";\nimport Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport {useState} from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport {auth} from \"../../lib/api\";\nimport {Error} from \"../../lib/components/controls\"\nimport {useRouter} from \"../../lib/hooks/router\";\n\nconst LoginForm = () => {\n    const router = useRouter();\n    const [loginError, setLoginError] = useState(null);\n\n    const { next } = router.query;\n\n    return (\n        <Row>\n            <Col md={{offset: 4, span: 4}}>\n                <Card className=\"login-widget\">\n                    <Card.Header>Login</Card.Header>\n                    <Card.Body>\n                        <Form onSubmit={(e) => {\n                            e.preventDefault()\n                            auth\n                                .login(e.target.username.value, e.target.password.value)\n                                .then(user => {\n                                    setLoginError(null);\n                                    return router.push((!!next) ? next : '/');\n                                })\n                                .catch(err => {\n                                    setLoginError(err);\n                                })\n\n                        }}>\n\n                            <Form.Group controlId=\"username\">\n                                <Form.Control type=\"text\" placeholder=\"Access Key ID\" autoFocus/>\n                                <Form.Text className=\"text-muted\">\n                                    <em>Running lakeFS for the first time? setup initial credentials by running <code>lakefs init</code></em>\n                                </Form.Text>\n                            </Form.Group>\n\n                            <Form.Group controlId=\"password\">\n                                <Form.Control type=\"password\" placeholder=\"Secret Access Key\"/>\n                            </Form.Group>\n\n                            {(!!loginError) && <Error error={loginError}/>}\n\n                            <Button variant=\"primary\" type=\"submit\">Login</Button>\n                        </Form>\n                    </Card.Body>\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\n\nconst LoginPage = () => {\n    return (\n        <Layout>\n            <LoginForm/>\n        </Layout>\n    );\n};\n\nexport default LoginPage;","import {Redirect, Route, Switch} from \"react-router-dom\";\nimport CredentialsPage from \"./credentials\";\nimport GroupsIndexPage from \"./groups\";\nimport UsersIndexPage from \"./users\";\nimport PoliciesIndexPage from \"./policies\";\nimport LoginPage from \"./login\";\n\nconst Auth = () => {\n    return (\n        <Switch>\n            <Route exact path=\"/auth\">\n                <Redirect to=\"/auth/credentials\"/>\n            </Route>\n            <Route path=\"/auth/login\">\n                <LoginPage/>\n            </Route>\n\n            <Route path=\"/auth/credentials\">\n                <CredentialsPage/>\n            </Route>\n            <Route path=\"/auth/users\">\n                <UsersIndexPage/>\n            </Route>\n            <Route path=\"/auth/groups\">\n                <GroupsIndexPage/>\n            </Route>\n            <Route path=\"/auth/policies\">\n                <PoliciesIndexPage/>\n            </Route>\n        </Switch>\n    )\n}\n\nexport default Auth;\n","import Alert from \"react-bootstrap/Alert\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport Table from \"react-bootstrap/Table\";\nimport React, {useRef} from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport {DownloadIcon} from \"@primer/octicons-react\";\nimport {useState} from \"react\";\nimport {setup, API_ENDPOINT} from \"../../lib/api\";\nimport {ClipboardButton, Error} from \"../../lib/components/controls\";\n\nconst SetupPage = () => {\n    const usernameRef = useRef(null);\n    const [setupError, setSetupError] = useState(null);\n    const [setupData, setSetupData] = useState(null);\n    const [disabled, setDisabled] = useState(false);\n\n    const onSubmit = async () => {\n        setDisabled(true);\n        try {\n            const response = await setup.lakeFS(usernameRef.current.value);\n            setSetupError(null);\n            setSetupData(response);\n        } catch (error) {\n            setSetupError(error);\n            setSetupData(null);\n        } finally {\n            setDisabled(false);\n        }\n    };\n\n    if (setupData && setupData.access_key_id) {\n        const downloadContent = 'data:application/octet-stream,' + encodeURIComponent(\n            `# lakectl command line configuration - save under the filename $HOME/.lakectl.yaml\ncredentials:\n  access_key_id: ${setupData.access_key_id}\n  secret_access_key: ${setupData.secret_access_key}\nserver:\n  endpoint_url: ${window.location.protocol}//${window.location.host}${API_ENDPOINT}\n`);\n        return (\n            <Row>\n                <Col md={{offset: 2, span: 8}}>\n                    <Card className=\"setup-widget\">\n                        <Card.Header>Congratulations</Card.Header>\n                        <Card.Body>\n                            <Card.Text>\n                                Database was initialized and admin user was created.<br/>\n                                Here are your credentials:<br/>\n                            </Card.Text>\n                            <hr/>\n                            <Table borderless hover>\n                                <tbody>\n                                <tr>\n                                    <td>Key ID</td>\n                                    <td><code>{setupData.access_key_id}</code> <ClipboardButton variant=\"link\" text={setupData.access_key_id} tooltip=\"Copy key ID\"/></td>\n                                </tr>\n                                <tr>\n                                    <td>Secret Key</td>\n                                    <td><code>{setupData.secret_access_key}</code> <ClipboardButton variant=\"link\" text={setupData.secret_access_key} tooltip=\"Copy secret key\"/></td>\n                                </tr>\n                                </tbody>\n                            </Table>\n                            <Card.Text>\n                                Download the initial client configuration under your <code>$HOME/.lakectl.yaml</code> and keep a copy of the data for your login into the system<br/>\n                            </Card.Text>\n                            <Alert variant=\"warning\">\n                                This is the <strong>only</strong> time that the secret access keys can be viewed or downloaded. You cannot recover them later.\n                            </Alert>\n                            <hr/>\n                            <Button variant=\"success\" href={downloadContent} taget=\"_blank\" download=\"lakectl.yaml\"><DownloadIcon />Download Configuration </Button>\n                            {' '}\n                            <Button variant=\"link\" href=\"/\">Go To Login</Button>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        );\n    }\n    return (\n        <Row>\n            <Col md={{offset: 2, span: 8}}>\n               <Card className=\"setup-widget\">\n                    <Card.Header>Initial Setup</Card.Header>\n                    <Card.Body>\n                        <Card.Text>\n                            This process will initialize the database schema and a first admin user to access the system.<br/>\n                            Enter an admin username.\n                        </Card.Text>\n                        <Form onSubmit={e => {\n                            onSubmit();\n                            e.preventDefault();\n                        }}>\n                            <Form.Group controlId=\"user-name\">\n                                <Form.Control type=\"text\" placeholder=\"Username\" ref={usernameRef} autoFocus/>\n                            </Form.Group>\n\n                            {!!setupError && <Error error={setupError}/>}\n                            <Button variant=\"primary\" disabled={disabled} type=\"submit\">Setup</Button>\n                        </Form>\n                    </Card.Body>\n                </Card>\n            </Col>\n        </Row>\n    );\n};\n\nexport default SetupPage;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom';\n\n// styles\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './styles/globals.css';\n\n// pages\nimport Repositories from './pages/repositories';\nimport Auth from './pages/auth';\nimport Setup from './pages/setup';\n\nReactDOM.render(\n    <Router>\n        <Switch>\n            <Route exact path=\"/\">\n                <Redirect to=\"/repositories\"/>\n            </Route>\n            <Route path=\"/repositories\">\n                <Repositories/>\n            </Route>\n            <Route path=\"/auth\">\n                <Auth/>\n            </Route>\n            <Route path=\"/setup\">\n                <Setup/>\n            </Route>\n        </Switch>\n    </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}